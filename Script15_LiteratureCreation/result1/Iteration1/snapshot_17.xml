<?xml version="1.0" encoding="utf-8"?>
<HTTPSnapshot xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="17">
  <HTTPTask id="19" hostname="10.100.22.24:8181" path="/signal/literatureAlert/create" url="http://10.100.22.24:8181/signal/literatureAlert/create" ip="10.100.22.24" port="8181" client_ip="10.202.2.49" client_port="51536" connectionId="2380" origin="Primary" encodingType="ANSI" startDateTime="2020-02-14T13:18:28.181+05:30" startTime="29533" endTime="31746" blockedTime="-1" dnsTime="-1" connectTime="344" sendTime="339" waitTime="0" receiveTime="1513" sslNegotiateTime="-1" responseBodySize="218297">
    <HTTPRequest method="GET">
      <HTTPHeaders>
        <HTTPHeaderEntity name="Referer" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cDovLzEwLjEwMC4yMi4yNDo4MTgxL3NpZ25hbC8=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Upgrade-Insecure-Requests" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="User-Agent" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Q2hyb21lIFdJTiA3OS4wLjM5NDUuMTMwIChlMjJkZTY3YzI4Nzk4ZDk4ODMzYTcxMzdjMGUyMjg3NjIzN2ZjNDBhLXJlZnMvYnJhbmNoLWhlYWRzLzM5NDVAeyMxMDQ3fSkgY2hhbm5lbChzdGFibGUp</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Language" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZW4tVVMsZW47cT0wLjk=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>dGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuOQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Host" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MTAuMTAwLjIyLjI0OjgxODE=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cookie" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>U0VTU0lPTj01MDgxNzIxOC1jNWYxLTQ0MWMtOTcxZi1lMjNjMjg5ZWEwYjY7IGR0Q29va2llPXZfNF9zcnZfM19zbl8zQkY5QkM0NDY4OTAwMUU2N0QwMUQ5OTU1MThFMzJCOV9wZXJjXzEwMDAwMF9vbF8wX211bF8xOyByeFZpc2l0b3I9MTU4MTA1MjM0ODkxNkpBUzNVT1BLTkI2OE1VT1VSRTVPM0pMTzlGSDVQQ0dNOyBkdFBDPTMkNTI0NDk0MzlfNDkyaDF2RkZPREFEQUtOTk1KUkVNV0lESUpBQlBNQlZJQkJLR007IGR0U2E9dHJ1ZSU3Q0MlN0MtMSU3Q0xpdGVyYXR1cmUlMjBDb25maWd1cmF0aW9uJTdDLSU3QzE1ODEwNTI0ODYxNTglN0M1MjQ0OTQzOV80OTIlN0NodHRwJTNBJTJGJTJGMTAuMTAwLjIyLjI0JTNBODE4MSUyRnNpZ25hbCUyRiU3Q0Rhc2hib2FyZCU3QzE1ODEwNTI0NjAwODIlN0MlN0M7IGR0TGF0Qz0xOyByeHZ0PTE1ODEwNTQyNDk0NTJ8MTU4MTA1MjM0ODkyMA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0VUIC9zaWduYWwvbGl0ZXJhdHVyZUFsZXJ0L2NyZWF0ZSBIVFRQLzEuMQ0KUmVmZXJlcjogaHR0cDovLzEwLjEwMC4yMi4yNDo4MTgxL3NpZ25hbC8NClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClVzZXItQWdlbnQ6IENocm9tZSBXSU4gNzkuMC4zOTQ1LjEzMCAoZTIyZGU2N2MyODc5OGQ5ODgzM2E3MTM3YzBlMjI4NzYyMzdmYzQwYS1yZWZzL2JyYW5jaC1oZWFkcy8zOTQ1QHsjMTA0N30pIGNoYW5uZWwoc3RhYmxlKQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTLGVuO3E9MC45DQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjkNCkNvbm5lY3Rpb246IEtlZXAtQWxpdmUNCkhvc3Q6IDEwLjEwMC4yMi4yNDo4MTgxDQpDb29raWU6IFNFU1NJT049NTA4MTcyMTgtYzVmMS00NDFjLTk3MWYtZTIzYzI4OWVhMGI2OyBkdENvb2tpZT12XzRfc3J2XzNfc25fM0JGOUJDNDQ2ODkwMDFFNjdEMDFEOTk1NTE4RTMyQjlfcGVyY18xMDAwMDBfb2xfMF9tdWxfMTsgcnhWaXNpdG9yPTE1ODEwNTIzNDg5MTZKQVMzVU9QS05CNjhNVU9VUkU1TzNKTE85Rkg1UENHTTsgZHRQQz0zJDUyNDQ5NDM5XzQ5MmgxdkZGT0RBREFLTk5NSlJFTVdJRElKQUJQTUJWSUJCS0dNOyBkdFNhPXRydWUlN0NDJTdDLTElN0NMaXRlcmF0dXJlJTIwQ29uZmlndXJhdGlvbiU3Qy0lN0MxNTgxMDUyNDg2MTU4JTdDNTI0NDk0MzlfNDkyJTdDaHR0cCUzQSUyRiUyRjEwLjEwMC4yMi4yNCUzQTgxODElMkZzaWduYWwlMkYlN0NEYXNoYm9hcmQlN0MxNTgxMDUyNDYwMDgyJTdDJTdDOyBkdExhdEM9MTsgcnh2dD0xNTgxMDU0MjQ5NDUyfDE1ODEwNTIzNDg5MjANCg0K</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
        <HTTPCookies>
          <HTTPHeaderEntity name="SESSION" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>NTA4MTcyMTgtYzVmMS00NDFjLTk3MWYtZTIzYzI4OWVhMGI2</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="dtCookie" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dl80X3Nydl8zX3NuXzNCRjlCQzQ0Njg5MDAxRTY3RDAxRDk5NTUxOEUzMkI5X3BlcmNfMTAwMDAwX29sXzBfbXVsXzE=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="rxVisitor" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MTU4MTA1MjM0ODkxNkpBUzNVT1BLTkI2OE1VT1VSRTVPM0pMTzlGSDVQQ0dN</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="dtPC" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MyQ1MjQ0OTQzOV80OTJoMXZGRk9EQURBS05OTUpSRU1XSURJSkFCUE1CVklCQktHTQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="dtSa" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dHJ1ZSU3Q0MlN0MtMSU3Q0xpdGVyYXR1cmUlMjBDb25maWd1cmF0aW9uJTdDLSU3QzE1ODEwNTI0ODYxNTglN0M1MjQ0OTQzOV80OTIlN0NodHRwJTNBJTJGJTJGMTAuMTAwLjIyLjI0JTNBODE4MSUyRnNpZ25hbCUyRiU3Q0Rhc2hib2FyZCU3QzE1ODEwNTI0NjAwODIlN0MlN0M=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="dtLatC" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="rxvt" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MTU4MTA1NDI0OTQ1MnwxNTgxMDUyMzQ4OTIw</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
        </HTTPCookies>
      </HTTPHeaders>
    </HTTPRequest>
    <HTTPResponse>
      <contentLenght>0</contentLenght>
      <HTTPHeaders>
        <HTTPHeaderEntity name="X-OneAgent-JS-Injection" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>dHJ1ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Frame-Options" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>REVOWQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Application-Context" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YXBwbGljYXRpb246cHJvZHVjdGlvbjo3MTcx</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cache-Control" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm8tY2FjaGUsIG5vLXN0b3Jl</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Pragma" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm8tY2FjaGU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Type" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>dGV4dC9odG1sO2NoYXJzZXQ9VVRGLTg=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Language" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZW4tVVM=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Transfer-Encoding" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Y2h1bmtlZA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Date" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>RnJpLCAxNCBGZWIgMjAyMCAwNzo0ODoyNyBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMjAwIA0KWC1PbmVBZ2VudC1KUy1JbmplY3Rpb246IHRydWUNClgtRnJhbWUtT3B0aW9uczogREVOWQ0KWC1BcHBsaWNhdGlvbi1Db250ZXh0OiBhcHBsaWNhdGlvbjpwcm9kdWN0aW9uOjcxNzENCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby1zdG9yZQ0KUHJhZ21hOiBuby1jYWNoZQ0KQ29udGVudC1UeXBlOiB0ZXh0L2h0bWw7Y2hhcnNldD1VVEYtOA0KQ29udGVudC1MYW5ndWFnZTogZW4tVVMNClRyYW5zZmVyLUVuY29kaW5nOiBjaHVua2VkDQpEYXRlOiBGcmksIDE0IEZlYiAyMDIwIDA3OjQ4OjI3IEdNVA0KDQo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData></ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
    </HTTPResponse>
  </HTTPTask>
</HTTPSnapshot>