<?xml version="1.0" encoding="utf-8"?>
<HTTPSnapshot xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="283">
  <HTTPTask id="3191" hostname="10.100.22.24:8181" path="/signal/literatureAlert/details" url="http://10.100.22.24:8181/signal/literatureAlert/details" ip="10.100.22.24" port="8181" connectionId="26" origin="Primary" frame="1" startDateTime="2020-02-05T14:56:09.993+05:30" startTime="1461618437" endTime="1461620156">
    <HTTPRequest method="GET">
      <HTTPHeaders>
        <HTTPHeaderEntity name="Host" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MTAuMTAwLjIyLjI0OjgxODE=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Upgrade-Insecure-Requests" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="User-Agent" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzc5LjAuMzk0NS4xMzAgU2FmYXJpLzUzNy4zNg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>dGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuOQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Referer" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cDovLzEwLjEwMC4yMi4yNDo4MTgxL3NpZ25hbC9hZEhvY0FsZXJ0L2luZGV4</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Language" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZW4tVVMsZW47cT0wLjk=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cookie" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>U0VTU0lPTj1lMjJmNjRmYy0xNWQ0LTQxZWYtYjg1Yi00OGQ3N2Q3NzUwMzY7IHJ4VmlzaXRvcj0xNTgwODk0Mzg2OTE2OEkyNU42T1NKQk05NVEwSDI5NDZLQUxFSk40SEtDVUo7IGR0TGF0Qz0zOyBkdFBDPTMkNDk0NTE0ODQyXzYzMmgtdkRBSUpBS0FKUFBPSklITU1PQVRETlBGUUhWQkRVTE1BOyByeHZ0PTE1ODA4OTYzMjMzMTR8MTU4MDg5NDM4NjkxOTsgZHRTYT10cnVlJTdDQyU3Qy0xJTdDTGl0ZXJhdHVyZSUyMFJldmlldyU3Qy0lN0MxNTgwODk0NTQwMjE5JTdDNDk0NTE0ODQyXzYzMiU3Q2h0dHAlM0ElMkYlMkYxMC4xMDAuMjIuMjQlM0E4MTgxJTJGc2lnbmFsJTJGYWRIb2NBbGVydCUyRmluZGV4JTdDQWRob2MlMjBBbGVydCU3QzE1ODA4OTQ1MTkyMjclN0MlN0M7IGR0Q29va2llPXZfNF9zcnZfM19zbl8yNTA5ODM0Qjc5NzgwNkE0RjhCN0Y3M0E2RTA2REM0OV9wZXJjXzEwMDAwMF9vbF8wX211bF8xX2FwcC0zQWVhN2M0YjU5ZjI3ZDQzZWJfMQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0VUIC9zaWduYWwvbGl0ZXJhdHVyZUFsZXJ0L2RldGFpbHMgSFRUUC8xLjENCkhvc3Q6IDEwLjEwMC4yMi4yNDo4MTgxDQpDb25uZWN0aW9uOiBrZWVwLWFsaXZlDQpVcGdyYWRlLUluc2VjdXJlLVJlcXVlc3RzOiAxDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNzkuMC4zOTQ1LjEzMCBTYWZhcmkvNTM3LjM2DQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjkNClJlZmVyZXI6IGh0dHA6Ly8xMC4xMDAuMjIuMjQ6ODE4MS9zaWduYWwvYWRIb2NBbGVydC9pbmRleA0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTLGVuO3E9MC45DQpDb29raWU6IFNFU1NJT049ZTIyZjY0ZmMtMTVkNC00MWVmLWI4NWItNDhkNzdkNzc1MDM2OyByeFZpc2l0b3I9MTU4MDg5NDM4NjkxNjhJMjVONk9TSkJNOTVRMEgyOTQ2S0FMRUpONEhLQ1VKOyBkdExhdEM9MzsgZHRQQz0zJDQ5NDUxNDg0Ml82MzJoLXZEQUlKQUtBSlBQT0pJSE1NT0FURE5QRlFIVkJEVUxNQTsgcnh2dD0xNTgwODk2MzIzMzE0fDE1ODA4OTQzODY5MTk7IGR0U2E9dHJ1ZSU3Q0MlN0MtMSU3Q0xpdGVyYXR1cmUlMjBSZXZpZXclN0MtJTdDMTU4MDg5NDU0MDIxOSU3QzQ5NDUxNDg0Ml82MzIlN0NodHRwJTNBJTJGJTJGMTAuMTAwLjIyLjI0JTNBODE4MSUyRnNpZ25hbCUyRmFkSG9jQWxlcnQlMkZpbmRleCU3Q0FkaG9jJTIwQWxlcnQlN0MxNTgwODk0NTE5MjI3JTdDJTdDOyBkdENvb2tpZT12XzRfc3J2XzNfc25fMjUwOTgzNEI3OTc4MDZBNEY4QjdGNzNBNkUwNkRDNDlfcGVyY18xMDAwMDBfb2xfMF9tdWxfMV9hcHAtM0FlYTdjNGI1OWYyN2Q0M2ViXzENCg0K</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
        <HTTPCookies>
          <HTTPHeaderEntity name="SESSION" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZTIyZjY0ZmMtMTVkNC00MWVmLWI4NWItNDhkNzdkNzc1MDM2</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="rxVisitor" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MTU4MDg5NDM4NjkxNjhJMjVONk9TSkJNOTVRMEgyOTQ2S0FMRUpONEhLQ1VK</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="dtLatC" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Mw==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="dtPC" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MyQ0OTQ1MTQ4NDJfNjMyaC12REFJSkFLQUpQUE9KSUhNTU9BVEROUEZRSFZCRFVMTUE=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="rxvt" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MTU4MDg5NjMyMzMxNHwxNTgwODk0Mzg2OTE5</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="dtSa" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dHJ1ZSU3Q0MlN0MtMSU3Q0xpdGVyYXR1cmUlMjBSZXZpZXclN0MtJTdDMTU4MDg5NDU0MDIxOSU3QzQ5NDUxNDg0Ml82MzIlN0NodHRwJTNBJTJGJTJGMTAuMTAwLjIyLjI0JTNBODE4MSUyRnNpZ25hbCUyRmFkSG9jQWxlcnQlMkZpbmRleCU3Q0FkaG9jJTIwQWxlcnQlN0MxNTgwODk0NTE5MjI3JTdDJTdD</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="dtCookie" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dl80X3Nydl8zX3NuXzI1MDk4MzRCNzk3ODA2QTRGOEI3RjczQTZFMDZEQzQ5X3BlcmNfMTAwMDAwX29sXzBfbXVsXzFfYXBwLTNBZWE3YzRiNTlmMjdkNDNlYl8x</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
        </HTTPCookies>
      </HTTPHeaders>
    </HTTPRequest>
    <HTTPResponse>
      <contentLenght>0</contentLenght>
      <HTTPHeaders>
        <HTTPHeaderEntity name="X-OneAgent-JS-Injection" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>dHJ1ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Frame-Options" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>REVOWQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Application-Context" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YXBwbGljYXRpb246cHJvZHVjdGlvbjo3MTcx</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cache-Control" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm8tY2FjaGUsIG5vLXN0b3Jl</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Pragma" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm8tY2FjaGU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Type" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>dGV4dC9odG1sO2NoYXJzZXQ9VVRGLTg=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Language" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZW4tVVM=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Transfer-Encoding" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Y2h1bmtlZA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Date" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>V2VkLCAwNSBGZWIgMjAyMCAwOToyMjoxOSBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMjAwIA0KWC1PbmVBZ2VudC1KUy1JbmplY3Rpb246IHRydWUNClgtRnJhbWUtT3B0aW9uczogREVOWQ0KWC1BcHBsaWNhdGlvbi1Db250ZXh0OiBhcHBsaWNhdGlvbjpwcm9kdWN0aW9uOjcxNzENCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby1zdG9yZQ0KUHJhZ21hOiBuby1jYWNoZQ0KQ29udGVudC1UeXBlOiB0ZXh0L2h0bWw7Y2hhcnNldD1VVEYtOA0KQ29udGVudC1MYW5ndWFnZTogZW4tVVMNClRyYW5zZmVyLUVuY29kaW5nOiBjaHVua2VkDQpEYXRlOiBXZWQsIDA1IEZlYiAyMDIwIDA5OjIyOjE5IEdNVA0KDQo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData></ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
      <TcpPackets>
        <PacketInfo time="1461620156" offset="0" length="4096" />
        <PacketInfo time="1461620156" offset="4096" length="16384" />
        <PacketInfo time="1461620171" offset="20480" length="16384" />
        <PacketInfo time="1461620171" offset="36864" length="16384" />
        <PacketInfo time="1461620171" offset="53248" length="16384" />
        <PacketInfo time="1461620171" offset="69632" length="16384" />
        <PacketInfo time="1461620171" offset="86016" length="16384" />
        <PacketInfo time="1461620171" offset="102400" length="1836" />
      </TcpPackets>
    </HTTPResponse>
    <HTTPTask id="3208" hostname="10.100.22.24:8181" path="/signal/assets/app/pvs/alert_utils/common_key_prevent-ef5634527119e90cc2576f0ef956085c.js" url="http://10.100.22.24:8181/signal/assets/app/pvs/alert_utils/common_key_prevent-ef5634527119e90cc2576f0ef956085c.js" ip="10.100.22.24" port="8181" connectionId="34" origin="HTML" frame="1" startDateTime="2020-02-05T14:56:10.043+05:30" startTime="1461620359" endTime="1461620828">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Host" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MTAuMTAwLjIyLjI0OjgxODE=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Connection" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzc5LjAuMzk0NS4xMzAgU2FmYXJpLzUzNy4zNg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovLzEwLjEwMC4yMi4yNDo4MTgxL3NpZ25hbC9saXRlcmF0dXJlQWxlcnQvZGV0YWlscw==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVMsZW47cT0wLjk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Cookie" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U0VTU0lPTj1lMjJmNjRmYy0xNWQ0LTQxZWYtYjg1Yi00OGQ3N2Q3NzUwMzY7IHJ4VmlzaXRvcj0xNTgwODk0Mzg2OTE2OEkyNU42T1NKQk05NVEwSDI5NDZLQUxFSk40SEtDVUo7IGR0TGF0Qz0zOyBkdFBDPTMkNDk0NTE0ODQyXzYzMmgtdkRBSUpBS0FKUFBPSklITU1PQVRETlBGUUhWQkRVTE1BOyBkdFNhPXRydWUlN0NDJTdDLTElN0NMaXRlcmF0dXJlJTIwUmV2aWV3JTdDLSU3QzE1ODA4OTQ1NDAyMTklN0M0OTQ1MTQ4NDJfNjMyJTdDaHR0cCUzQSUyRiUyRjEwLjEwMC4yMi4yNCUzQTgxODElMkZzaWduYWwlMkZhZEhvY0FsZXJ0JTJGaW5kZXglN0NBZGhvYyUyMEFsZXJ0JTdDMTU4MDg5NDUxOTIyNyU3QyU3QzsgZHRDb29raWU9dl80X3Nydl8zX3NuXzI1MDk4MzRCNzk3ODA2QTRGOEI3RjczQTZFMDZEQzQ5X3BlcmNfMTAwMDAwX29sXzBfbXVsXzFfYXBwLTNBZWE3YzRiNTlmMjdkNDNlYl8xOyByeHZ0PTE1ODA4OTYzNDIwNjN8MTU4MDg5NDM4NjkxOQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIC9zaWduYWwvYXNzZXRzL2FwcC9wdnMvYWxlcnRfdXRpbHMvY29tbW9uX2tleV9wcmV2ZW50LWVmNTYzNDUyNzExOWU5MGNjMjU3NmYwZWY5NTYwODVjLmpzIEhUVFAvMS4xDQpIb3N0OiAxMC4xMDAuMjIuMjQ6ODE4MQ0KQ29ubmVjdGlvbjoga2VlcC1hbGl2ZQ0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzc5LjAuMzk0NS4xMzAgU2FmYXJpLzUzNy4zNg0KQWNjZXB0OiAqLyoNClJlZmVyZXI6IGh0dHA6Ly8xMC4xMDAuMjIuMjQ6ODE4MS9zaWduYWwvbGl0ZXJhdHVyZUFsZXJ0L2RldGFpbHMNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUyxlbjtxPTAuOQ0KQ29va2llOiBTRVNTSU9OPWUyMmY2NGZjLTE1ZDQtNDFlZi1iODViLTQ4ZDc3ZDc3NTAzNjsgcnhWaXNpdG9yPTE1ODA4OTQzODY5MTY4STI1TjZPU0pCTTk1UTBIMjk0NktBTEVKTjRIS0NVSjsgZHRMYXRDPTM7IGR0UEM9MyQ0OTQ1MTQ4NDJfNjMyaC12REFJSkFLQUpQUE9KSUhNTU9BVEROUEZRSFZCRFVMTUE7IGR0U2E9dHJ1ZSU3Q0MlN0MtMSU3Q0xpdGVyYXR1cmUlMjBSZXZpZXclN0MtJTdDMTU4MDg5NDU0MDIxOSU3QzQ5NDUxNDg0Ml82MzIlN0NodHRwJTNBJTJGJTJGMTAuMTAwLjIyLjI0JTNBODE4MSUyRnNpZ25hbCUyRmFkSG9jQWxlcnQlMkZpbmRleCU3Q0FkaG9jJTIwQWxlcnQlN0MxNTgwODk0NTE5MjI3JTdDJTdDOyBkdENvb2tpZT12XzRfc3J2XzNfc25fMjUwOTgzNEI3OTc4MDZBNEY4QjdGNzNBNkUwNkRDNDlfcGVyY18xMDAwMDBfb2xfMF9tdWxfMV9hcHAtM0FlYTdjNGI1OWYyN2Q0M2ViXzE7IHJ4dnQ9MTU4MDg5NjM0MjA2M3wxNTgwODk0Mzg2OTE5DQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
          <HTTPCookies>
            <HTTPHeaderEntity name="SESSION" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>ZTIyZjY0ZmMtMTVkNC00MWVmLWI4NWItNDhkNzdkNzc1MDM2</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="rxVisitor" index="1">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>MTU4MDg5NDM4NjkxNjhJMjVONk9TSkJNOTVRMEgyOTQ2S0FMRUpONEhLQ1VK</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="dtLatC" index="2">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>Mw==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="dtPC" index="3">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>MyQ0OTQ1MTQ4NDJfNjMyaC12REFJSkFLQUpQUE9KSUhNTU9BVEROUEZRSFZCRFVMTUE=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="dtSa" index="4">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>dHJ1ZSU3Q0MlN0MtMSU3Q0xpdGVyYXR1cmUlMjBSZXZpZXclN0MtJTdDMTU4MDg5NDU0MDIxOSU3QzQ5NDUxNDg0Ml82MzIlN0NodHRwJTNBJTJGJTJGMTAuMTAwLjIyLjI0JTNBODE4MSUyRnNpZ25hbCUyRmFkSG9jQWxlcnQlMkZpbmRleCU3Q0FkaG9jJTIwQWxlcnQlN0MxNTgwODk0NTE5MjI3JTdDJTdD</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="dtCookie" index="5">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>dl80X3Nydl8zX3NuXzI1MDk4MzRCNzk3ODA2QTRGOEI3RjczQTZFMDZEQzQ5X3BlcmNfMTAwMDAwX29sXzBfbXVsXzFfYXBwLTNBZWE3YzRiNTlmMjdkNDNlYl8x</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="rxvt" index="6">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>MTU4MDg5NjM0MjA2M3wxNTgwODk0Mzg2OTE5</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
          </HTTPCookies>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <contentLenght>202</contentLenght>
        <HTTPHeaders>
          <HTTPHeaderEntity name="X-OneAgent-JS-Injection" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dHJ1ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Last-Modified" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VHVlLCAwNCBGZWIgMjAyMCAwNjoxNzoxOCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="ETag" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ImFwcC9wdnMvYWxlcnRfdXRpbHMvY29tbW9uX2tleV9wcmV2ZW50LWVmNTYzNDUyNzExOWU5MGNjMjU3NmYwZWY5NTYwODVjLmpzIg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Vary" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QWNjZXB0LUVuY29kaW5n</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Cache-Control" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>cHVibGljLCBtYXgtYWdlPTMxNTM2MDAw</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Encoding" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24vamF2YXNjcmlwdDtjaGFyc2V0PVVURi04</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MjAy</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>V2VkLCAwNSBGZWIgMjAyMCAwOToyMjoyMSBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIA0KWC1PbmVBZ2VudC1KUy1JbmplY3Rpb246IHRydWUNCkxhc3QtTW9kaWZpZWQ6IFR1ZSwgMDQgRmViIDIwMjAgMDY6MTc6MTggR01UDQpFVGFnOiAiYXBwL3B2cy9hbGVydF91dGlscy9jb21tb25fa2V5X3ByZXZlbnQtZWY1NjM0NTI3MTE5ZTkwY2MyNTc2ZjBlZjk1NjA4NWMuanMiDQpWYXJ5OiBBY2NlcHQtRW5jb2RpbmcNCkNhY2hlLUNvbnRyb2w6IHB1YmxpYywgbWF4LWFnZT0zMTUzNjAwMA0KQ29udGVudC1FbmNvZGluZzogZ3ppcA0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qYXZhc2NyaXB0O2NoYXJzZXQ9VVRGLTgNCkNvbnRlbnQtTGVuZ3RoOiAyMDINCkRhdGU6IFdlZCwgMDUgRmViIDIwMjAgMDk6MjI6MjEgR01UDQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>JChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oKXt2YXIgYj0hMTskKHdpbmRvdykua2V5ZG93bihmdW5jdGlvbihhKXsxMz09YS5rZXlDb2RlJiZiJiZhLnByZXZlbnREZWZhdWx0KCl9KTskKCIjcHJvZHVjdE1vZGFsLCAjZXZlbnRNb2RhbCwgI3N0dWR5TW9kYWwsICNjcmVhdGVBY3Rpb25Nb2RhbCIpLm9uKCJzaG93bi5icy5tb2RhbCIsZnVuY3Rpb24oYSl7Yj0hMDtjb25zb2xlLmxvZygiVHJ1ZSIpfSk7JCgiI3Byb2R1Y3RNb2RhbCwgI2V2ZW50TW9kYWwsICNzdHVkeU1vZGFsLCAjY3JlYXRlQWN0aW9uTW9kYWwiKS5vbigiaGlkZGVuLmJzLm1vZGFsIixmdW5jdGlvbihhKXtiPSExO2NvbnNvbGUubG9nKCJGYWxzZSIpfSl9KTs=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <TcpPackets>
          <PacketInfo time="1461620812" offset="0" length="578" />
        </TcpPackets>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="3210" hostname="10.100.22.24:8181" path="/signal/assets/app/pvs/pvs_list-642eea288b57d537ccfdff6c8e0e7c6b.css" url="http://10.100.22.24:8181/signal/assets/app/pvs/pvs_list-642eea288b57d537ccfdff6c8e0e7c6b.css" ip="10.100.22.24" port="8181" connectionId="35" origin="HTML" frame="1" startDateTime="2020-02-05T14:56:10.063+05:30" startTime="1461620375" endTime="1461620875">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Host" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MTAuMTAwLjIyLjI0OjgxODE=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Connection" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzc5LjAuMzk0NS4xMzAgU2FmYXJpLzUzNy4zNg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dGV4dC9jc3MsKi8qO3E9MC4x</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovLzEwLjEwMC4yMi4yNDo4MTgxL3NpZ25hbC9saXRlcmF0dXJlQWxlcnQvZGV0YWlscw==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVMsZW47cT0wLjk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Cookie" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U0VTU0lPTj1lMjJmNjRmYy0xNWQ0LTQxZWYtYjg1Yi00OGQ3N2Q3NzUwMzY7IHJ4VmlzaXRvcj0xNTgwODk0Mzg2OTE2OEkyNU42T1NKQk05NVEwSDI5NDZLQUxFSk40SEtDVUo7IGR0TGF0Qz0zOyBkdFBDPTMkNDk0NTE0ODQyXzYzMmgtdkRBSUpBS0FKUFBPSklITU1PQVRETlBGUUhWQkRVTE1BOyBkdFNhPXRydWUlN0NDJTdDLTElN0NMaXRlcmF0dXJlJTIwUmV2aWV3JTdDLSU3QzE1ODA4OTQ1NDAyMTklN0M0OTQ1MTQ4NDJfNjMyJTdDaHR0cCUzQSUyRiUyRjEwLjEwMC4yMi4yNCUzQTgxODElMkZzaWduYWwlMkZhZEhvY0FsZXJ0JTJGaW5kZXglN0NBZGhvYyUyMEFsZXJ0JTdDMTU4MDg5NDUxOTIyNyU3QyU3QzsgZHRDb29raWU9dl80X3Nydl8zX3NuXzI1MDk4MzRCNzk3ODA2QTRGOEI3RjczQTZFMDZEQzQ5X3BlcmNfMTAwMDAwX29sXzBfbXVsXzFfYXBwLTNBZWE3YzRiNTlmMjdkNDNlYl8xOyByeHZ0PTE1ODA4OTYzNDIwNjN8MTU4MDg5NDM4NjkxOQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIC9zaWduYWwvYXNzZXRzL2FwcC9wdnMvcHZzX2xpc3QtNjQyZWVhMjg4YjU3ZDUzN2NjZmRmZjZjOGUwZTdjNmIuY3NzIEhUVFAvMS4xDQpIb3N0OiAxMC4xMDAuMjIuMjQ6ODE4MQ0KQ29ubmVjdGlvbjoga2VlcC1hbGl2ZQ0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzc5LjAuMzk0NS4xMzAgU2FmYXJpLzUzNy4zNg0KQWNjZXB0OiB0ZXh0L2NzcywqLyo7cT0wLjENClJlZmVyZXI6IGh0dHA6Ly8xMC4xMDAuMjIuMjQ6ODE4MS9zaWduYWwvbGl0ZXJhdHVyZUFsZXJ0L2RldGFpbHMNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUyxlbjtxPTAuOQ0KQ29va2llOiBTRVNTSU9OPWUyMmY2NGZjLTE1ZDQtNDFlZi1iODViLTQ4ZDc3ZDc3NTAzNjsgcnhWaXNpdG9yPTE1ODA4OTQzODY5MTY4STI1TjZPU0pCTTk1UTBIMjk0NktBTEVKTjRIS0NVSjsgZHRMYXRDPTM7IGR0UEM9MyQ0OTQ1MTQ4NDJfNjMyaC12REFJSkFLQUpQUE9KSUhNTU9BVEROUEZRSFZCRFVMTUE7IGR0U2E9dHJ1ZSU3Q0MlN0MtMSU3Q0xpdGVyYXR1cmUlMjBSZXZpZXclN0MtJTdDMTU4MDg5NDU0MDIxOSU3QzQ5NDUxNDg0Ml82MzIlN0NodHRwJTNBJTJGJTJGMTAuMTAwLjIyLjI0JTNBODE4MSUyRnNpZ25hbCUyRmFkSG9jQWxlcnQlMkZpbmRleCU3Q0FkaG9jJTIwQWxlcnQlN0MxNTgwODk0NTE5MjI3JTdDJTdDOyBkdENvb2tpZT12XzRfc3J2XzNfc25fMjUwOTgzNEI3OTc4MDZBNEY4QjdGNzNBNkUwNkRDNDlfcGVyY18xMDAwMDBfb2xfMF9tdWxfMV9hcHAtM0FlYTdjNGI1OWYyN2Q0M2ViXzE7IHJ4dnQ9MTU4MDg5NjM0MjA2M3wxNTgwODk0Mzg2OTE5DQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
          <HTTPCookies>
            <HTTPHeaderEntity name="SESSION" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>ZTIyZjY0ZmMtMTVkNC00MWVmLWI4NWItNDhkNzdkNzc1MDM2</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="rxVisitor" index="1">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>MTU4MDg5NDM4NjkxNjhJMjVONk9TSkJNOTVRMEgyOTQ2S0FMRUpONEhLQ1VK</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="dtLatC" index="2">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>Mw==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="dtPC" index="3">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>MyQ0OTQ1MTQ4NDJfNjMyaC12REFJSkFLQUpQUE9KSUhNTU9BVEROUEZRSFZCRFVMTUE=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="dtSa" index="4">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>dHJ1ZSU3Q0MlN0MtMSU3Q0xpdGVyYXR1cmUlMjBSZXZpZXclN0MtJTdDMTU4MDg5NDU0MDIxOSU3QzQ5NDUxNDg0Ml82MzIlN0NodHRwJTNBJTJGJTJGMTAuMTAwLjIyLjI0JTNBODE4MSUyRnNpZ25hbCUyRmFkSG9jQWxlcnQlMkZpbmRleCU3Q0FkaG9jJTIwQWxlcnQlN0MxNTgwODk0NTE5MjI3JTdDJTdD</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="dtCookie" index="5">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>dl80X3Nydl8zX3NuXzI1MDk4MzRCNzk3ODA2QTRGOEI3RjczQTZFMDZEQzQ5X3BlcmNfMTAwMDAwX29sXzBfbXVsXzFfYXBwLTNBZWE3YzRiNTlmMjdkNDNlYl8x</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="rxvt" index="6">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>MTU4MDg5NjM0MjA2M3wxNTgwODk0Mzg2OTE5</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
          </HTTPCookies>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <contentLenght>306</contentLenght>
        <HTTPHeaders>
          <HTTPHeaderEntity name="X-OneAgent-JS-Injection" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dHJ1ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Last-Modified" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VHVlLCAwNCBGZWIgMjAyMCAwNjoxNjoxMCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="ETag" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ImFwcC9wdnMvcHZzX2xpc3QtNjQyZWVhMjg4YjU3ZDUzN2NjZmRmZjZjOGUwZTdjNmIuY3NzIg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Vary" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QWNjZXB0LUVuY29kaW5n</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Cache-Control" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>cHVibGljLCBtYXgtYWdlPTMxNTM2MDAw</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Encoding" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dGV4dC9jc3M7Y2hhcnNldD1VVEYtOA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MzA2</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>V2VkLCAwNSBGZWIgMjAyMCAwOToyMjoyMSBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIA0KWC1PbmVBZ2VudC1KUy1JbmplY3Rpb246IHRydWUNCkxhc3QtTW9kaWZpZWQ6IFR1ZSwgMDQgRmViIDIwMjAgMDY6MTY6MTAgR01UDQpFVGFnOiAiYXBwL3B2cy9wdnNfbGlzdC02NDJlZWEyODhiNTdkNTM3Y2NmZGZmNmM4ZTBlN2M2Yi5jc3MiDQpWYXJ5OiBBY2NlcHQtRW5jb2RpbmcNCkNhY2hlLUNvbnRyb2w6IHB1YmxpYywgbWF4LWFnZT0zMTUzNjAwMA0KQ29udGVudC1FbmNvZGluZzogZ3ppcA0KQ29udGVudC1UeXBlOiB0ZXh0L2NzcztjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogMzA2DQpEYXRlOiBXZWQsIDA1IEZlYiAyMDIwIDA5OjIyOjIxIEdNVA0KDQo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>LmRhdGFUYWJsZSB0aGVhZCB0ciB0aCB7dmVydGljYWwtYWxpZ246IGJvdHRvbTt9LnlhZGNmLWZpbHRlci13cmFwcGVyIHt9LnRoLWxhYmVsIHtmb250LXdlaWdodDogYm9sZDtmb250LWZhbWlseTogc2Fucy1zZXJpZjt9LmNvbC1maWx0ZXIge2Rpc3BsYXk6IGlubGluZTt9LmZpeC1sZW4tdGV4dC1maWx0ZXItMSB7d2lkdGg6IDM2cHg7ZGlzcGxheTogaW5saW5lO30uZml4LWxlbi10ZXh0LWZpbHRlci0yIHt3aWR0aDogNzJweDtkaXNwbGF5OiBpbmxpbmU7fS5maXgtbGVuLXRleHQtZmlsdGVyLTMge3dpZHRoOiAxNDRweDtkaXNwbGF5OiBpbmxpbmU7fS5jb2x1bW4tZmlsdGVyIHt3aWR0aDogMTIwcHg7cGFkZGluZy10b3A6IDNweDtwYWRkaW5nLWJvdHRvbTogM3B4O3BhZGRpbmctbGVmdDogNHB4O3BhZGRpbmctcmlnaHQ6IDRweDtmb250LXdlaWdodDogbm9ybWFsO30udGFibGUtZmlsdGVyLXRvZ2dsZTpob3ZlciB7Y3Vyc29yOiBwb2ludGVyO30ucG9zLWFiLmF0dGFjaHsgdG9wOi00cHg7IHJpZ2h0Oi0xMHB4fS5wb3MtYWIuY29tbWVudHsgYm90dG9tOi00cHg7IHJpZ2h0Oi0xMHB4fS5mb250LTEzIHtmb250LXNpemU6IDEzcHggIWltcG9ydGFudDt9</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <TcpPackets>
          <PacketInfo time="1461620875" offset="0" length="647" />
        </TcpPackets>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="3212" hostname="10.100.22.24:8181" path="/signal/assets/colReorder.dataTables.min-6c9c3520f346057281532b7b491bad4b.css" url="http://10.100.22.24:8181/signal/assets/colReorder.dataTables.min-6c9c3520f346057281532b7b491bad4b.css" ip="10.100.22.24" port="8181" connectionId="36" origin="HTML" frame="1" startDateTime="2020-02-05T14:56:10.083+05:30" startTime="1461620375" endTime="1461620875">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Host" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MTAuMTAwLjIyLjI0OjgxODE=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Connection" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzc5LjAuMzk0NS4xMzAgU2FmYXJpLzUzNy4zNg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dGV4dC9jc3MsKi8qO3E9MC4x</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovLzEwLjEwMC4yMi4yNDo4MTgxL3NpZ25hbC9saXRlcmF0dXJlQWxlcnQvZGV0YWlscw==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVMsZW47cT0wLjk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Cookie" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U0VTU0lPTj1lMjJmNjRmYy0xNWQ0LTQxZWYtYjg1Yi00OGQ3N2Q3NzUwMzY7IHJ4VmlzaXRvcj0xNTgwODk0Mzg2OTE2OEkyNU42T1NKQk05NVEwSDI5NDZLQUxFSk40SEtDVUo7IGR0TGF0Qz0zOyBkdFBDPTMkNDk0NTE0ODQyXzYzMmgtdkRBSUpBS0FKUFBPSklITU1PQVRETlBGUUhWQkRVTE1BOyBkdFNhPXRydWUlN0NDJTdDLTElN0NMaXRlcmF0dXJlJTIwUmV2aWV3JTdDLSU3QzE1ODA4OTQ1NDAyMTklN0M0OTQ1MTQ4NDJfNjMyJTdDaHR0cCUzQSUyRiUyRjEwLjEwMC4yMi4yNCUzQTgxODElMkZzaWduYWwlMkZhZEhvY0FsZXJ0JTJGaW5kZXglN0NBZGhvYyUyMEFsZXJ0JTdDMTU4MDg5NDUxOTIyNyU3QyU3QzsgZHRDb29raWU9dl80X3Nydl8zX3NuXzI1MDk4MzRCNzk3ODA2QTRGOEI3RjczQTZFMDZEQzQ5X3BlcmNfMTAwMDAwX29sXzBfbXVsXzFfYXBwLTNBZWE3YzRiNTlmMjdkNDNlYl8xOyByeHZ0PTE1ODA4OTYzNDIwNjN8MTU4MDg5NDM4NjkxOQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIC9zaWduYWwvYXNzZXRzL2NvbFJlb3JkZXIuZGF0YVRhYmxlcy5taW4tNmM5YzM1MjBmMzQ2MDU3MjgxNTMyYjdiNDkxYmFkNGIuY3NzIEhUVFAvMS4xDQpIb3N0OiAxMC4xMDAuMjIuMjQ6ODE4MQ0KQ29ubmVjdGlvbjoga2VlcC1hbGl2ZQ0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzc5LjAuMzk0NS4xMzAgU2FmYXJpLzUzNy4zNg0KQWNjZXB0OiB0ZXh0L2NzcywqLyo7cT0wLjENClJlZmVyZXI6IGh0dHA6Ly8xMC4xMDAuMjIuMjQ6ODE4MS9zaWduYWwvbGl0ZXJhdHVyZUFsZXJ0L2RldGFpbHMNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUyxlbjtxPTAuOQ0KQ29va2llOiBTRVNTSU9OPWUyMmY2NGZjLTE1ZDQtNDFlZi1iODViLTQ4ZDc3ZDc3NTAzNjsgcnhWaXNpdG9yPTE1ODA4OTQzODY5MTY4STI1TjZPU0pCTTk1UTBIMjk0NktBTEVKTjRIS0NVSjsgZHRMYXRDPTM7IGR0UEM9MyQ0OTQ1MTQ4NDJfNjMyaC12REFJSkFLQUpQUE9KSUhNTU9BVEROUEZRSFZCRFVMTUE7IGR0U2E9dHJ1ZSU3Q0MlN0MtMSU3Q0xpdGVyYXR1cmUlMjBSZXZpZXclN0MtJTdDMTU4MDg5NDU0MDIxOSU3QzQ5NDUxNDg0Ml82MzIlN0NodHRwJTNBJTJGJTJGMTAuMTAwLjIyLjI0JTNBODE4MSUyRnNpZ25hbCUyRmFkSG9jQWxlcnQlMkZpbmRleCU3Q0FkaG9jJTIwQWxlcnQlN0MxNTgwODk0NTE5MjI3JTdDJTdDOyBkdENvb2tpZT12XzRfc3J2XzNfc25fMjUwOTgzNEI3OTc4MDZBNEY4QjdGNzNBNkUwNkRDNDlfcGVyY18xMDAwMDBfb2xfMF9tdWxfMV9hcHAtM0FlYTdjNGI1OWYyN2Q0M2ViXzE7IHJ4dnQ9MTU4MDg5NjM0MjA2M3wxNTgwODk0Mzg2OTE5DQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
          <HTTPCookies>
            <HTTPHeaderEntity name="SESSION" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>ZTIyZjY0ZmMtMTVkNC00MWVmLWI4NWItNDhkNzdkNzc1MDM2</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="rxVisitor" index="1">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>MTU4MDg5NDM4NjkxNjhJMjVONk9TSkJNOTVRMEgyOTQ2S0FMRUpONEhLQ1VK</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="dtLatC" index="2">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>Mw==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="dtPC" index="3">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>MyQ0OTQ1MTQ4NDJfNjMyaC12REFJSkFLQUpQUE9KSUhNTU9BVEROUEZRSFZCRFVMTUE=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="dtSa" index="4">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>dHJ1ZSU3Q0MlN0MtMSU3Q0xpdGVyYXR1cmUlMjBSZXZpZXclN0MtJTdDMTU4MDg5NDU0MDIxOSU3QzQ5NDUxNDg0Ml82MzIlN0NodHRwJTNBJTJGJTJGMTAuMTAwLjIyLjI0JTNBODE4MSUyRnNpZ25hbCUyRmFkSG9jQWxlcnQlMkZpbmRleCU3Q0FkaG9jJTIwQWxlcnQlN0MxNTgwODk0NTE5MjI3JTdDJTdD</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="dtCookie" index="5">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>dl80X3Nydl8zX3NuXzI1MDk4MzRCNzk3ODA2QTRGOEI3RjczQTZFMDZEQzQ5X3BlcmNfMTAwMDAwX29sXzBfbXVsXzFfYXBwLTNBZWE3YzRiNTlmMjdkNDNlYl8x</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="rxvt" index="6">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>MTU4MDg5NjM0MjA2M3wxNTgwODk0Mzg2OTE5</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
          </HTTPCookies>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <contentLenght>157</contentLenght>
        <HTTPHeaders>
          <HTTPHeaderEntity name="X-OneAgent-JS-Injection" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dHJ1ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Last-Modified" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VHVlLCAwNCBGZWIgMjAyMCAwNjoxNjoxMiBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="ETag" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ImNvbFJlb3JkZXIuZGF0YVRhYmxlcy5taW4tNmM5YzM1MjBmMzQ2MDU3MjgxNTMyYjdiNDkxYmFkNGIuY3NzIg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Vary" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QWNjZXB0LUVuY29kaW5n</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Cache-Control" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>cHVibGljLCBtYXgtYWdlPTMxNTM2MDAw</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Encoding" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dGV4dC9jc3M7Y2hhcnNldD1VVEYtOA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MTU3</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>V2VkLCAwNSBGZWIgMjAyMCAwOToyMjoyMSBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIA0KWC1PbmVBZ2VudC1KUy1JbmplY3Rpb246IHRydWUNCkxhc3QtTW9kaWZpZWQ6IFR1ZSwgMDQgRmViIDIwMjAgMDY6MTY6MTIgR01UDQpFVGFnOiAiY29sUmVvcmRlci5kYXRhVGFibGVzLm1pbi02YzljMzUyMGYzNDYwNTcyODE1MzJiN2I0OTFiYWQ0Yi5jc3MiDQpWYXJ5OiBBY2NlcHQtRW5jb2RpbmcNCkNhY2hlLUNvbnRyb2w6IHB1YmxpYywgbWF4LWFnZT0zMTUzNjAwMA0KQ29udGVudC1FbmNvZGluZzogZ3ppcA0KQ29udGVudC1UeXBlOiB0ZXh0L2NzcztjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogMTU3DQpEYXRlOiBXZWQsIDA1IEZlYiAyMDIwIDA5OjIyOjIxIEdNVA0KDQo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>dGFibGUuRFRDUl9jbG9uZWRUYWJsZS5kYXRhVGFibGV7cG9zaXRpb246YWJzb2x1dGUgIWltcG9ydGFudDtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjU1LDI1NSwyNTUsMC43KTt6LWluZGV4OjIwMn1kaXYuRFRDUl9wb2ludGVye3dpZHRoOjFweDtiYWNrZ3JvdW5kLWNvbG9yOiMwMjU5QzQ7ei1pbmRleDoyMDF9Cgo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <TcpPackets>
          <PacketInfo time="1461620875" offset="0" length="507" />
        </TcpPackets>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="3214" hostname="10.100.22.24:8181" path="/signal/assets/app/pvs/literatureSearch/literature_details-3fac2c34a975c9a9db98ceb1971b3629.js" url="http://10.100.22.24:8181/signal/assets/app/pvs/literatureSearch/literature_details-3fac2c34a975c9a9db98ceb1971b3629.js" ip="10.100.22.24" port="8181" connectionId="26" origin="HTML" frame="1" startDateTime="2020-02-05T14:56:10.103+05:30" startTime="1461620359" endTime="1461620968">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Host" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MTAuMTAwLjIyLjI0OjgxODE=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Connection" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzc5LjAuMzk0NS4xMzAgU2FmYXJpLzUzNy4zNg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovLzEwLjEwMC4yMi4yNDo4MTgxL3NpZ25hbC9saXRlcmF0dXJlQWxlcnQvZGV0YWlscw==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVMsZW47cT0wLjk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Cookie" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U0VTU0lPTj1lMjJmNjRmYy0xNWQ0LTQxZWYtYjg1Yi00OGQ3N2Q3NzUwMzY7IHJ4VmlzaXRvcj0xNTgwODk0Mzg2OTE2OEkyNU42T1NKQk05NVEwSDI5NDZLQUxFSk40SEtDVUo7IGR0TGF0Qz0zOyBkdFBDPTMkNDk0NTE0ODQyXzYzMmgtdkRBSUpBS0FKUFBPSklITU1PQVRETlBGUUhWQkRVTE1BOyBkdFNhPXRydWUlN0NDJTdDLTElN0NMaXRlcmF0dXJlJTIwUmV2aWV3JTdDLSU3QzE1ODA4OTQ1NDAyMTklN0M0OTQ1MTQ4NDJfNjMyJTdDaHR0cCUzQSUyRiUyRjEwLjEwMC4yMi4yNCUzQTgxODElMkZzaWduYWwlMkZhZEhvY0FsZXJ0JTJGaW5kZXglN0NBZGhvYyUyMEFsZXJ0JTdDMTU4MDg5NDUxOTIyNyU3QyU3QzsgZHRDb29raWU9dl80X3Nydl8zX3NuXzI1MDk4MzRCNzk3ODA2QTRGOEI3RjczQTZFMDZEQzQ5X3BlcmNfMTAwMDAwX29sXzBfbXVsXzFfYXBwLTNBZWE3YzRiNTlmMjdkNDNlYl8xOyByeHZ0PTE1ODA4OTYzNDIwNjN8MTU4MDg5NDM4NjkxOQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIC9zaWduYWwvYXNzZXRzL2FwcC9wdnMvbGl0ZXJhdHVyZVNlYXJjaC9saXRlcmF0dXJlX2RldGFpbHMtM2ZhYzJjMzRhOTc1YzlhOWRiOThjZWIxOTcxYjM2MjkuanMgSFRUUC8xLjENCkhvc3Q6IDEwLjEwMC4yMi4yNDo4MTgxDQpDb25uZWN0aW9uOiBrZWVwLWFsaXZlDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNzkuMC4zOTQ1LjEzMCBTYWZhcmkvNTM3LjM2DQpBY2NlcHQ6ICovKg0KUmVmZXJlcjogaHR0cDovLzEwLjEwMC4yMi4yNDo4MTgxL3NpZ25hbC9saXRlcmF0dXJlQWxlcnQvZGV0YWlscw0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTLGVuO3E9MC45DQpDb29raWU6IFNFU1NJT049ZTIyZjY0ZmMtMTVkNC00MWVmLWI4NWItNDhkNzdkNzc1MDM2OyByeFZpc2l0b3I9MTU4MDg5NDM4NjkxNjhJMjVONk9TSkJNOTVRMEgyOTQ2S0FMRUpONEhLQ1VKOyBkdExhdEM9MzsgZHRQQz0zJDQ5NDUxNDg0Ml82MzJoLXZEQUlKQUtBSlBQT0pJSE1NT0FURE5QRlFIVkJEVUxNQTsgZHRTYT10cnVlJTdDQyU3Qy0xJTdDTGl0ZXJhdHVyZSUyMFJldmlldyU3Qy0lN0MxNTgwODk0NTQwMjE5JTdDNDk0NTE0ODQyXzYzMiU3Q2h0dHAlM0ElMkYlMkYxMC4xMDAuMjIuMjQlM0E4MTgxJTJGc2lnbmFsJTJGYWRIb2NBbGVydCUyRmluZGV4JTdDQWRob2MlMjBBbGVydCU3QzE1ODA4OTQ1MTkyMjclN0MlN0M7IGR0Q29va2llPXZfNF9zcnZfM19zbl8yNTA5ODM0Qjc5NzgwNkE0RjhCN0Y3M0E2RTA2REM0OV9wZXJjXzEwMDAwMF9vbF8wX211bF8xX2FwcC0zQWVhN2M0YjU5ZjI3ZDQzZWJfMTsgcnh2dD0xNTgwODk2MzQyMDYzfDE1ODA4OTQzODY5MTkNCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
          <HTTPCookies>
            <HTTPHeaderEntity name="SESSION" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>ZTIyZjY0ZmMtMTVkNC00MWVmLWI4NWItNDhkNzdkNzc1MDM2</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="rxVisitor" index="1">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>MTU4MDg5NDM4NjkxNjhJMjVONk9TSkJNOTVRMEgyOTQ2S0FMRUpONEhLQ1VK</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="dtLatC" index="2">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>Mw==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="dtPC" index="3">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>MyQ0OTQ1MTQ4NDJfNjMyaC12REFJSkFLQUpQUE9KSUhNTU9BVEROUEZRSFZCRFVMTUE=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="dtSa" index="4">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>dHJ1ZSU3Q0MlN0MtMSU3Q0xpdGVyYXR1cmUlMjBSZXZpZXclN0MtJTdDMTU4MDg5NDU0MDIxOSU3QzQ5NDUxNDg0Ml82MzIlN0NodHRwJTNBJTJGJTJGMTAuMTAwLjIyLjI0JTNBODE4MSUyRnNpZ25hbCUyRmFkSG9jQWxlcnQlMkZpbmRleCU3Q0FkaG9jJTIwQWxlcnQlN0MxNTgwODk0NTE5MjI3JTdDJTdD</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="dtCookie" index="5">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>dl80X3Nydl8zX3NuXzI1MDk4MzRCNzk3ODA2QTRGOEI3RjczQTZFMDZEQzQ5X3BlcmNfMTAwMDAwX29sXzBfbXVsXzFfYXBwLTNBZWE3YzRiNTlmMjdkNDNlYl8x</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="rxvt" index="6">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>MTU4MDg5NjM0MjA2M3wxNTgwODk0Mzg2OTE5</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
          </HTTPCookies>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <contentLenght>29309</contentLenght>
        <HTTPHeaders>
          <HTTPHeaderEntity name="X-OneAgent-JS-Injection" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dHJ1ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Last-Modified" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VHVlLCAwNCBGZWIgMjAyMCAwNjoxNzoxMiBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="ETag" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ImFwcC9wdnMvbGl0ZXJhdHVyZVNlYXJjaC9saXRlcmF0dXJlX2RldGFpbHMtM2ZhYzJjMzRhOTc1YzlhOWRiOThjZWIxOTcxYjM2MjkuanMi</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Vary" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QWNjZXB0LUVuY29kaW5n</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Cache-Control" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>cHVibGljLCBtYXgtYWdlPTMxNTM2MDAw</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Encoding" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24vamF2YXNjcmlwdDtjaGFyc2V0PVVURi04</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MjkzMDk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>V2VkLCAwNSBGZWIgMjAyMCAwOToyMjoyMSBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIA0KWC1PbmVBZ2VudC1KUy1JbmplY3Rpb246IHRydWUNCkxhc3QtTW9kaWZpZWQ6IFR1ZSwgMDQgRmViIDIwMjAgMDY6MTc6MTIgR01UDQpFVGFnOiAiYXBwL3B2cy9saXRlcmF0dXJlU2VhcmNoL2xpdGVyYXR1cmVfZGV0YWlscy0zZmFjMmMzNGE5NzVjOWE5ZGI5OGNlYjE5NzFiMzYyOS5qcyINClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KQ2FjaGUtQ29udHJvbDogcHVibGljLCBtYXgtYWdlPTMxNTM2MDAwDQpDb250ZW50LUVuY29kaW5nOiBnemlwDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2phdmFzY3JpcHQ7Y2hhcnNldD1VVEYtOA0KQ29udGVudC1MZW5ndGg6IDI5MzA5DQpEYXRlOiBXZWQsIDA1IEZlYiAyMDIwIDA5OjIyOjIxIEdNVA0KDQo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>dmFyIHNpZ25hbCA9IHNpZ25hbCB8fCB7fTsKCi8vIGEgY29udmVuaWVuY2UgZnVuY3Rpb24gZm9yIHBhcnNpbmcgc3RyaW5nIG5hbWVzcGFjZXMgYW5kCi8vIGF1dG9tYXRpY2FsbHkgZ2VuZXJhdGluZyBuZXN0ZWQgbmFtZXNwYWNlcwpmdW5jdGlvbiBleHRlbmQoIG5zLCBuc19zdHJpbmcgKSB7CiAgICB2YXIgcGFydHMgPSBuc19zdHJpbmcuc3BsaXQoJy4nKSwKICAgICAgICBwYXJlbnQgPSBucywKICAgICAgICBwbCwgaTsKICAgIGlmIChwYXJ0c1swXSA9PSAic2lnbmFsIikgewogICAgICAgIHBhcnRzID0gcGFydHMuc2xpY2UoMSk7CiAgICB9CiAgICBwbCA9IHBhcnRzLmxlbmd0aDsKICAgIGZvciAoaSA9IDA7IGkgPCBwbDsgaSsrKSB7CiAgICAgICAgLy9jcmVhdGUgYSBwcm9wZXJ0eSBpZiBpdCBkb2VzbnQgZXhpc3QKICAgICAgICBpZiAodHlwZW9mIHBhcmVudFtwYXJ0c1tpXV0gPT0gJ3VuZGVmaW5lZCcpIHsKICAgICAgICAgICAgcGFyZW50W3BhcnRzW2ldXSA9IHt9OwogICAgICAgIH0KICAgICAgICBwYXJlbnQgPSBwYXJlbnRbcGFydHNbaV1dOwogICAgfQogICAgcmV0dXJuIHBhcmVudDsKfQoKLy9Qcm90b3R5cGUgbWV0aG9kcwpEYXRlLnByb3RvdHlwZS5hZGREYXlzID0gZnVuY3Rpb24oZGF5cykgewogICAgdmFyIGRhdGUgPSBuZXcgRGF0ZSh0aGlzLnZhbHVlT2YoKSk7CiAgICBkYXRlLnNldERhdGUoZGF0ZS5nZXREYXRlKCkgKyBkYXlzKTsKICAgIHJldHVybiBkYXRlOwp9OwoKQXJyYXkucHJvdG90eXBlLnJlbW92ZSA9IGZ1bmN0aW9uICh2YWx1ZSkgewogICAgcmV0dXJuIHRoaXMuZmlsdGVyKGZ1bmN0aW9uKGYpe2YgIT0gdmFsdWV9KTsKfTsKClNDQV9XT1JLRkxPV19TVEFUVVNfRU5VTSA9IHsgTkVXOiAnTmV3JywKICAgIEFTU09DSUFURV9SRVZJRVdFRDogJ0Fzc29jaWF0ZVJldmlld2VkJywKICAgIFBIWVNJQ0lBTl9SRVZJRVdFRDogJ1BoeXNpY2lhblJldmlld2VkJywKICAgIFJFUVVJUkVEX0VWQUxVQVRJT046ICdSZXF1aXJlZEV2YWx1YXRpb24nLAogICAgQ09OVElOVUVEX01PTklUT1JJTkc6ICdDb250aW51ZWRNb25pdG9yaW5nJwp9OwoKU0NBX0RJU1BPU0lUSU9OX0VOVU0gPSB7CiAgICBWQUxJREFURURfU0lHTkFMIDogJ1ZhbGlkYXRlZFNpZ25hbCcsCiAgICBWQUxJREFURURfTk9OX0NPTkZJUk1FRF9TSUdOQUwgOiAnVmFsaWRhdGVkTm9uQ29uZmlybWVkU2lnbmFsJywKICAgIFZBTElEQVRFRF9VTkRFUl9JTlZFU1RJR0FUSU9OIDogJ1ZhbGlkYXRlZFVuZGVySW52ZXN0aWdhdGlvbicsCiAgICBDT01NVU5JQ0FURURfU0lHTkFMIDogJ0NvbW11bmljYXRlZFNpZ25hbCcsCiAgICBOT05fVkFMSUQ6ICdOb25WYWxpZCcKfTsKClNDQV9QUklPUklUWV9FTlVNID0gewogICAgSElHSDogIkhpZ2giLAogICAgTUVESVVNOiAiTWVkaXVtIiwKICAgIExPVzogIkxPVyIKfTsKCkRBVEVfRk1UX1RaID0gIllZWVktTU0tREQiOwoKc2lnbmFsLnV0aWxzID0gKGZ1bmN0aW9uKCkgewoKICAgIHZhciBzdGFja2VkID0gZnVuY3Rpb24odG9wVmFsdWUsIGJvdHRvbVZhbHVlKSB7CiAgICAgICAgdmFyIHRvcENvbXAgPSAiIjsKICAgICAgICB2YXIgYm90dG9tQ29tcCA9ICIiOwoKICAgICAgICBpZihfLmlzRnVuY3Rpb24odG9wVmFsdWUpKSB7CiAgICAgICAgICAgIHRvcENvbXAgPSB0b3BWYWx1ZSgpCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgdG9wQ29tcCA9ICc8ZGl2IGNsYXNzPSJzdGFja2VkLWNlbGwtY2VudGVyLXRvcCI+JyArIHRvcFZhbHVlICsgJzwvZGl2PicKICAgICAgICB9CgogICAgICAgIGlmIChfLmlzRnVuY3Rpb24oYm90dG9tVmFsdWUpKSB7CiAgICAgICAgICAgIGJvdHRvbUNvbXAgPSBib3R0b21WYWx1ZSgpCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgYm90dG9tQ29tcCA9ICc8ZGl2IGNsYXNzPSJzdGFja2VkLWNlbGwtY2VudGVyLWJvdHRvbSI+JyArIGJvdHRvbVZhbHVlICsgJzwvZGl2PicKICAgICAgICB9CgogICAgICAgIHJldHVybiB0b3BDb21wICsgYm90dG9tQ29tcAogICAgfTsKCiAgICAvLyBBbmQgdGhpcyBpcyB0aGUgZGVmaW5pdGlvbiBvZiB0aGUgY3VzdG9tIGZ1bmN0aW9uIOKAiwogICAgdmFyIHJlbmRlciA9IGZ1bmN0aW9uKHRtcGxfbmFtZSwgdG1wbF9kYXRhKSB7CgogICAgICAgIGlmICggIXJlbmRlci50bXBsX2NhY2hlICkgewoKCgogICAgICAgICAgICByZW5kZXIudG1wbF9jYWNoZSA9IHt9OwogICAgICAgIH0KICAgICAgICBpZiAoIXJlbmRlci50bXBsX2NhY2hlW3RtcGxfbmFtZV0pIHsKICAgICAgICAgICAgdmFyIHRtcGxfZGlyID0gJy9zaWduYWwvYXNzZXRzL2FwcC9wdnMvaGJzLXRlbXBsYXRlcyc7CiAgICAgICAgICAgIHZhciB0bXBsX3VybCA9IHRtcGxfZGlyICsgJy8nICsgdG1wbF9uYW1lICsgJy5oYnMnOwoKICAgICAgICAgICAgdmFyIHRtcGxfc3RyaW5nID0gIiI7CiAgICAgICAgICAgICQuYWpheCh7CiAgICAgICAgICAgICAgICB1cmw6IHRtcGxfdXJsLAogICAgICAgICAgICAgICAgbWV0aG9kOiAnR0VUJywKICAgICAgICAgICAgICAgIGFzeW5jOiBmYWxzZSwKICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsKICAgICAgICAgICAgICAgICAgICB0bXBsX3N0cmluZyA9IGRhdGEKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CgogICAgICAgICAgICByZW5kZXIudG1wbF9jYWNoZVt0bXBsX25hbWVdID0gSGFuZGxlYmFycy5jb21waWxlKHRtcGxfc3RyaW5nKTsKICAgICAgICB9CgogICAgICAgIHJldHVybiByZW5kZXIudG1wbF9jYWNoZVt0bXBsX25hbWVdKHRtcGxfZGF0YSkKICAgIH07CgogICAgdmFyIGhic19wYXJ0aWFsID0gZnVuY3Rpb24odG1wbF9uYW1lKSB7CiAgICAgICAgaWYgKCFoYnNfcGFydGlhbC50bXBsX2NhY2hlKSB7CiAgICAgICAgICAgIGhic19wYXJ0aWFsLnRtcGxfY2FjaGUgPSB7fQogICAgICAgIH0KCiAgICAgICAgaWYgKCFoYnNfcGFydGlhbC50bXBsX2NhY2hlW3RtcGxfbmFtZV0pIHsKICAgICAgICAgICAgIHZhciB0bXBsX2RpciA9ICcvc2lnbmFsL2Fzc2V0cy9hcHAvcHZzL2hicy10ZW1wbGF0ZXMnOwogICAgICAgICAgICB2YXIgdG1wbF91cmwgPSB0bXBsX2RpciArICcvJyArIHRtcGxfbmFtZSArICcuaGJzJzsKCiAgICAgICAgICAgIHZhciB0bXBsX3N0cmluZyA9ICIiOwogICAgICAgICAgICAkLmFqYXgoewogICAgICAgICAgICAgICAgdXJsOiB0bXBsX3VybCwKICAgICAgICAgICAgICAgIG1ldGhvZDogJ0dFVCcsCiAgICAgICAgICAgICAgICBhc3luYzogZmFsc2UsCiAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7CiAgICAgICAgICAgICAgICAgICAgdG1wbF9zdHJpbmcgPSBkYXRhCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgaGJzX3BhcnRpYWwudG1wbF9jYWNoZVt0bXBsX25hbWVdID0gdG1wbF9zdHJpbmcKICAgICAgICB9CgogICAgICAgIHJldHVybiBoYnNfcGFydGlhbC50bXBsX2NhY2hlW3RtcGxfbmFtZV0KICAgIH07CgogICAgdmFyIGNvbXBvc2VVcmwgPSBmdW5jdGlvbihjb250cm9sbGVyLCBhY3Rpb24sIHBhcmFtcykgewogICAgICAgIHZhciB1cmwgPSAiL3NpZ25hbC8iICsgY29udHJvbGxlciArICIvIiArIGFjdGlvbiArIChfLmlzTnVsbChwYXJhbXMpID8gJycgOiAnPycgKyBjb21wb3NlUGFyYW1zKHBhcmFtcykpOwoKICAgICAgICByZXR1cm4gdXJsCiAgICB9OwoKICAgIC8vVE9ETyA6IE5lZWQgdG8gY2hhbmdlIHRoaXMgdG8gaGFuZGxlYmFyIGZvcm0sIFdpbGwgYmUgZG9uZSBsYXRlcgogICAgdmFyIHBvc3RVcmwgPSBmdW5jdGlvbiAocGF0aCwgcGFyYW1zLCBuZXdXaW5kb3cgPSBmYWxzZSkgewoKICAgICAgICBjb25zdCBmb3JtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZm9ybScpOwogICAgICAgIGZvcm0ubWV0aG9kID0gInBvc3QiOwogICAgICAgIGZvcm0uYWN0aW9uID0gcGF0aDsKICAgICAgICBmb3JtLmVuY3R5cGUgPSAiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkIjsKICAgICAgICBpZiAobmV3V2luZG93KSBmb3JtLnRhcmdldCA9ICJfYmxhbmsiOwoKICAgICAgICB2YXIgdG9rZW4gPSAkKCJtZXRhW25hbWU9J19jc3JmJ10iKS5hdHRyKCJjb250ZW50Iik7CiAgICAgICAgdmFyIHBhcmFtZXRlciA9ICQoIm1ldGFbbmFtZT0nX2NzcmZfcGFyYW1ldGVyJ10iKS5hdHRyKCJjb250ZW50Iik7CiAgICAgICAgcGFyYW1zW3BhcmFtZXRlcl0gPSB0b2tlbjsKICAgICAgICBmb3IgKGNvbnN0IGtleSBpbiBwYXJhbXMpIHsKICAgICAgICAgICAgaWYgKHBhcmFtcy5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7CiAgICAgICAgICAgICAgICBjb25zdCBoaWRkZW5GaWVsZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7CiAgICAgICAgICAgICAgICBoaWRkZW5GaWVsZC50eXBlID0gJ2hpZGRlbic7CiAgICAgICAgICAgICAgICBoaWRkZW5GaWVsZC5uYW1lID0ga2V5OwogICAgICAgICAgICAgICAgaGlkZGVuRmllbGQudmFsdWUgPSBwYXJhbXNba2V5XTsKICAgICAgICAgICAgICAgIGZvcm0uYXBwZW5kQ2hpbGQoaGlkZGVuRmllbGQpOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoZm9ybSk7CiAgICAgICAgZm9ybS5zdWJtaXQoKTsKICAgIH0KCiAgICB2YXIgY29tcG9zZVBhcmFtcyA9IGZ1bmN0aW9uKG8pIHsKICAgICAgICByZXR1cm4gXy5tYXAoXy5wYWlycyhvKSwgZnVuY3Rpb24ocCl7cmV0dXJuIHAuam9pbignPScpfSApLmpvaW4oJyYnKQogICAgfTsKCiAgICB2YXIgY2FwaXRhbEl0ID0gZnVuY3Rpb24ocykgewogICAgICAgIHJldHVybiBzICYmIHNbMF0udG9VcHBlckNhc2UoKSArIHMuc2xpY2UoMSk7CiAgICB9OwoKICAgIHZhciBicmVha0l0ID0gZnVuY3Rpb24ocykgewogICAgICAgIHJldHVybiBzID8gcy5zcGxpdCgvKD89W0EtWl0pLykuam9pbignICcpIDogcwogICAgfTsKCiAgICB2YXIgZW5hYmxlX2xvYWRfYnV0dG9uID0gZnVuY3Rpb24oZWxlLCBlbmFibGVkKSB7CiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKGV2dCkgewogICAgICAgICAgICB2YXIgdGFyZ2V0RWxlID0gZWxlLmZpbmQoJy5nbHlwaGljb24nKTsKICAgICAgICAgICAgaWYgKGVuYWJsZWQpIHsKICAgICAgICAgICAgICAgICQodGFyZ2V0RWxlKS5hZGRDbGFzcygncmVmcmVzaC1hbmltYXRlJyk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAkKHRhcmdldEVsZSkucmVtb3ZlQ2xhc3MoJ3JlZnJlc2gtYW5pbWF0ZScpOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfTsKICAgIHZhciBzZXRJbkxvY2FsU3RvcmFnZSA9IGZ1bmN0aW9uKHByb3AsIGRhdGEpIHsKICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShwcm9wLCBkYXRhKTsKICAgIH07CgogICAgdmFyIGdldEZyb21Mb2NhbFN0b3JhZ2UgPSBmdW5jdGlvbihwcm9wKSB7CiAgICAgICAgcmV0dXJuIGxvY2FsU3RvcmFnZS5nZXRJdGVtKHByb3ApOwogICAgfTsKCiAgICB2YXIgc2V0SlNPTkluTG9jYWxTdG9yYWdlID0gZnVuY3Rpb24ocHJvcCwgZGF0YSkgewogICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKHByb3AsIEpTT04uc3RyaW5naWZ5KGRhdGEpKTsKICAgIH07CgogICAgdmFyIGdldEpTT05Gcm9tTG9jYWxTdG9yYWdlID0gZnVuY3Rpb24gKHByb3ApIHsKICAgICAgICByZXR1cm4gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbShwcm9wKSk7CiAgICB9OwoKICAgIHZhciBsb2NhbFN0b3JhZ2VVdGlsID0gewogICAgICAgIHNldFByb3AgOiBzZXRJbkxvY2FsU3RvcmFnZSwKICAgICAgICBnZXRQcm9wIDogZ2V0RnJvbUxvY2FsU3RvcmFnZSwKICAgICAgICBzZXRKU09OIDogc2V0SlNPTkluTG9jYWxTdG9yYWdlLAogICAgICAgIGdldEpTT04gOiBnZXRKU09ORnJvbUxvY2FsU3RvcmFnZQogICAgfTsKCiAgICB2YXIgZ2V0UXVlcnlTdHJpbmcgPSBmdW5jdGlvbigpIHsKICAgICAgICB2YXIga2V5ID0gZmFsc2UsIHJlcyA9IHt9LCBpdG0gPSBudWxsOwogICAgICAgIC8vIGdldCB0aGUgcXVlcnkgc3RyaW5nIHdpdGhvdXQgdGhlID8KICAgICAgICB2YXIgcXMgPSBsb2NhdGlvbi5zZWFyY2guc3Vic3RyaW5nKDEpOwogICAgICAgIC8vIGNoZWNrIGZvciB0aGUga2V5IGFzIGFuIGFyZ3VtZW50CiAgICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXS5sZW5ndGggPiAxKQogICAgICAgICAgICBrZXkgPSBhcmd1bWVudHNbMF07CiAgICAgICAgLy8gbWFrZSBhIHJlZ2V4IHBhdHRlcm4gdG8gZ3JhYiBrZXkvdmFsdWUKICAgICAgICB2YXIgcGF0dGVybiA9IC8oW14mPV0rKT0oW14mXSopL2c7CiAgICAgICAgLy8gbG9vcCB0aGUgaXRlbXMgaW4gdGhlIHF1ZXJ5IHN0cmluZywgZWl0aGVyCiAgICAgICAgLy8gZmluZCBhIG1hdGNoIHRvIHRoZSBhcmd1bWVudCwgb3IgYnVpbGQgYW4gb2JqZWN0CiAgICAgICAgLy8gd2l0aCBrZXkvdmFsdWUgcGFpcnMKICAgICAgICB3aGlsZSAoaXRtID0gcGF0dGVybi5leGVjKHFzKSkgewogICAgICAgICAgICBpZiAoa2V5ICE9PSBmYWxzZSAmJiBkZWNvZGVVUklDb21wb25lbnQoaXRtWzFdKSA9PT0ga2V5KQogICAgICAgICAgICAgICAgcmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudChpdG1bMl0pOwogICAgICAgICAgICBlbHNlIGlmIChrZXkgPT09IGZhbHNlKQogICAgICAgICAgICAgICAgcmVzW2RlY29kZVVSSUNvbXBvbmVudChpdG1bMV0pXSA9IGRlY29kZVVSSUNvbXBvbmVudChpdG1bMl0pOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIGtleSA9PT0gZmFsc2UgPyByZXMgOiBudWxsOwogICAgfTsKCiAgICByZXR1cm4gewogICAgICAgIHJlbmRlciA6IHJlbmRlciwKICAgICAgICBzdGFja2VkOiBzdGFja2VkLAogICAgICAgIGNvbXBvc2VVcmw6IGNvbXBvc2VVcmwsCiAgICAgICAgcG9zdFVybDogcG9zdFVybCwKICAgICAgICBjb21wb3NlUGFyYW1zOiBjb21wb3NlUGFyYW1zLAogICAgICAgIGNhcGl0YWxJdDogY2FwaXRhbEl0LAogICAgICAgIGJyZWFrSXQ6IGJyZWFrSXQsCiAgICAgICAgaGJzX3BhcnRpYWw6IGhic19wYXJ0aWFsLAogICAgICAgIGVuYWJsZV9sb2FkX2J1dHRvbjogZW5hYmxlX2xvYWRfYnV0dG9uLAogICAgICAgIGxvY2FsU3RvcmFnZVV0aWw6IGxvY2FsU3RvcmFnZVV0aWwsCiAgICAgICAgZ2V0UXVlcnlTdHJpbmc6IGdldFF1ZXJ5U3RyaW5nCiAgICB9Cn0pKCk7CgoKCnZhciBzaWduYWwgPSBzaWduYWwgfHwge30KCnNpZ25hbC5jYXNlRHJpbGxEb3duID0gKGZ1bmN0aW9uKCkgewoKICAgIHZhciBpbml0X2Nhc2VfZHJpbGxfZG93bl90YWJsZSA9IGZ1bmN0aW9uKHVybCwgY2FzZURldGFpbFVybCkgewoKICAgICAgICB2YXIgdGFibGUgPSAkKCcjY2FzZS1kcmlsbC1kb3duLXRhYmxlJykuRGF0YVRhYmxlKHsKICAgICAgICAgICAgbGFuZ3VhZ2U6IHsKICAgICAgICAgICAgICAgICJ1cmwiOiAiLi4vYXNzZXRzL2kxOG4vZGF0YVRhYmxlc18iICsgdXNlckxvY2FsZSArICIuanNvbiIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgImFqYXgiOiB7CiAgICAgICAgICAgICAgICAidXJsIjogdXJsLAogICAgICAgICAgICAgICAgImRhdGFTcmMiOiAiIgogICAgICAgICAgICB9LAoKICAgICAgICAgICAgImJMZW5ndGhDaGFuZ2UiOiB0cnVlLAogICAgICAgICAgICAiaURpc3BsYXlMZW5ndGgiOiA1MCwKICAgICAgICAgICAgImFMZW5ndGhNZW51IjogW1s1MCwgMTAwLCAyMDAsIDEwMDAsIC0xXSwgWzUwLCAxMDAsIDIwMCwgMTAwMCwgIkFsbCJdXSwKICAgICAgICAgICAgImFvQ29sdW1ucyI6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAibURhdGEiOiAiY2FzZU51bSIsCiAgICAgICAgICAgICAgICAgICAgIm1SZW5kZXIiOiBmdW5jdGlvbiAoZGF0YSwgdHlwZSwgcm93KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAnPGEgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9IicrIChjYXNlRGV0YWlsVXJsICsgJz8nICsgc2lnbmFsLnV0aWxzLmNvbXBvc2VQYXJhbXMoe2Nhc2VOdW1iZXI6IHJvdy5jYXNlTnVtLCB2ZXJzaW9uOiByb3cuY2FzZVZlcnNpb259KSkrJyI+JysiPHNwYW4gZGF0YS1maWVsZCA9J2Nhc2VOdW0nIGRhdGEtaWQ9JyIgKyByb3cuY2FzZU51bSArICInPiIgKwogICAgICAgICAgICAgICAgICAgICAgICAgICAgKHJvdy5jYXNlTnVtKSArICI8L3NwYW4+PHNwYW4gZGF0YS1maWVsZCA9J2Nhc2VWZXJzaW9uJyBkYXRhLWlkPSciICsgcm93LmNhc2VWZXJzaW9uICsgIic+IiArCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiPC9zcGFuPjwvYT4iCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBtRGF0YTogJ3Byb2R1Y3ROYW1lJwogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAibURhdGEiOiAiZ2VuZXJpY05hbWUiCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJtRGF0YSI6ICdwdCcKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIm1EYXRhIjogInNvYyIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIm1EYXRhIjogImxpc3RlZG5lc3MiCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJtRGF0YSI6ICJvdXRjb21lIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAibURhdGEiOiAic2VyaW91c25lc3MiCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJtRGF0YSI6ICJkZXRlcm1pbmVkQ2F1c2FsaXR5IgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAibURhdGEiOiAicmVwb3J0ZWRDYXVzYWxpdHkiCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICBdLAogICAgICAgICAgICBjb2x1bW5EZWZzOiBbewogICAgICAgICAgICAgICAgInRhcmdldHMiOiAnX2FsbCcsCiAgICAgICAgICAgICAgICAicmVuZGVyIjogJC5mbi5kYXRhVGFibGUucmVuZGVyLnRleHQoKQogICAgICAgICAgICB9XQogICAgICAgIH0pOwoKICAgICAgICByZXR1cm4gdGFibGU7CiAgICB9OwoKCiAgICB2YXIgYmluZF9kcmlsbF9kb3duX3RhYmxlID0gZnVuY3Rpb24oY2FzZURldGFpbFVybCkgewogICAgICAgICQoZG9jdW1lbnQpLm9uKCdjbGljaycsICcuY2FzZS1kcmlsbC1kb3duLWxpbmsnLCBmdW5jdGlvbiAoZXZ0KSB7CiAgICAgICAgICAgIC8vUHJlZGVudCBkZWZhdWx0IHdpbGwgbWFrZSBzdXJlIHRoYXQgZGVmYXVsdCBldmVudCBkb2VzIG5vdCBoYXBwZW4uCiAgICAgICAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpCgogICAgICAgICAgICB2YXIgc3JjRWxlID0gJChldnQudGFyZ2V0KQogICAgICAgICAgICAkKCcjY2FzZS1kcmlsbC1kb3duLW1vZGFsJykuYXR0cignZGF0YS11cmwnLCBzcmNFbGUuYXR0cignZGF0YS11cmwnKSkKICAgICAgICAgICAgJCgnI2Nhc2UtZHJpbGwtZG93bi1tb2RhbCcpLm1vZGFsKHt9KQogICAgICAgIH0pCgogICAgICAgICQoJyNjYXNlLWRyaWxsLWRvd24tbW9kYWwnKS5vbignc2hvd24uYnMubW9kYWwnLCBmdW5jdGlvbigpIHsKICAgICAgICAgICAgJCgnI2RyaWxsLWRvd24tdGFibGUtY29udGFpbmVyJykucmVtb3ZlKCcjY2FzZS1kcmlsbC1kb3duLXRhYmxlJykKICAgICAgICAgICAgdmFyIGRyaWxsX2Rvd25fdGFibGUgPSBzaWduYWwudXRpbHMucmVuZGVyKCdjYXNlX2RyaWxsX2Rvd25fdGFibGUnLCB7fSkKICAgICAgICAgICAgJCgnI2RyaWxsLWRvd24tdGFibGUtY29udGFpbmVyJykuaHRtbChkcmlsbF9kb3duX3RhYmxlKQogICAgICAgICAgICB2YXIgdXJsID0gJCgnI2Nhc2UtZHJpbGwtZG93bi1tb2RhbCcpLmF0dHIoJ2RhdGEtdXJsJykKICAgICAgICAgICAgdmFyIGNhc2VfZHJpbGxfZG93bl90YWJsZSA9IGluaXRfY2FzZV9kcmlsbF9kb3duX3RhYmxlKHVybCwgY2FzZURldGFpbFVybCkKICAgICAgICB9KQogICAgfQoKICAgIHJldHVybiB7CiAgICAgICAgaW5pdF9jYXNlX2RyaWxsX2Rvd25fdGFibGU6IGluaXRfY2FzZV9kcmlsbF9kb3duX3RhYmxlLAogICAgICAgIGJpbmRfZHJpbGxfZG93bl90YWJsZSA6ICBiaW5kX2RyaWxsX2Rvd25fdGFibGUKICAgIH0KfSkoKQoKdmFyIHNpZ25hbCA9IHNpZ25hbCB8fCB7fQoKc2lnbmFsLmFsZXJ0Q29tbWVudHMgPSAoZnVuY3Rpb24gKCkgewoKICAgIHZhciBsaXN0Q29tbWVudHMgPSBmdW5jdGlvbiAoY2FzZUpzb24pIHsKCiAgICAgICAgLy9Nb2RhbCBvYmplY3QKICAgICAgICB2YXIgY29tbWVudE1vZGFsID0gJCgnI2NvbW1lbnRNb2RhbCcpOwoKICAgICAgICAvL1BvcHVsYXRlIHRoZSBleGlzdGluZyBjb21tZW50cyBhbmQgYmluZCBldmVudHMgdG8gdGhlbS4KICAgICAgICBwb3B1bGF0ZUNvbW1lbnRzKGNvbW1lbnRNb2RhbCwgY2FzZUpzb24pOwoKICAgICAgICAvL1NldCB2YWx1ZXMgdG8gdGhlIG1vZGFsIGVsZW1lbnRzLgogICAgICAgIHZhciBjb21tZW50TWV0YUluZm8gPSAiIgogICAgICAgIGlmIChjYXNlSnNvbi5hbGVydFR5cGUgPT0gIkFnZ3JlZ2F0ZSBDYXNlIEFsZXJ0IikgewogICAgICAgICAgICBjb21tZW50TWV0YUluZm8gPSAnPHNwYW4gaWQ9InByb2R1Y3ROYW1lIj4nICsgY2FzZUpzb24ucHJvZHVjdE5hbWUgKyAnPC9zcGFuPiAtIDxzcGFuIGlkPSJldmVudE5hbWUiPicgKyBjYXNlSnNvbi5ldmVudE5hbWUgKyAnPC9zcGFuPicKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBjb21tZW50TWV0YUluZm8gPSAnPHNwYW4gaWQ9ImNhc2VOdW1iZXIiPicgKyBjYXNlSnNvbi5jYXNlTnVtYmVyICsgJzwvc3Bhbj4gLSA8c3BhbiBpZD0icHJvZHVjdEZhbWlseSI+JyArIGNhc2VKc29uLnByb2R1Y3RGYW1pbHkgKyAnPC9zcGFuPicKICAgICAgICB9CiAgICAgICAgY29tbWVudE1vZGFsLmZpbmQoIiNjb21tZW50LW1ldGEtaW5mbyIpLmh0bWwoY29tbWVudE1ldGFJbmZvKTsKICAgICAgICBjb21tZW50TW9kYWwuZmluZCgiI2FwcGxpY2F0aW9uIikuaHRtbChjYXNlSnNvbi5hbGVydFR5cGUpOwogICAgICAgIGNvbW1lbnRNb2RhbC5tb2RhbCgnc2hvdycpOwogICAgICAgIGJpbmRTYXZlQ29tbWVudChjb21tZW50TW9kYWwpOwogICAgfTsKCiAgICB2YXIgcG9wdWxhdGVDb21tZW50cyA9IGZ1bmN0aW9uIChjb21tZW50TW9kYWwsIGNhc2VKc29uLCBvblNpZ25hbFNjcmVlbikgewogICAgICAgIHZhciB1cGRhdGVkQ29tbWVudHMgPSAkKCIjY29tbWVudGJveCIpLnZhbCgpOwogICAgICAgICQuYWpheCh7CiAgICAgICAgICAgIHVybDogIi9zaWduYWwvYWxlcnRDb21tZW50L2xpc3RDb21tZW50cyIsCiAgICAgICAgICAgIGRhdGE6IGNhc2VKc29uLAogICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzdWx0KSB7CiAgICAgICAgICAgICAgICBpZiAocmVzdWx0KSB7CiAgICAgICAgICAgICAgICAgICAgY29tbWVudE1vZGFsLmZpbmQoIiNuby1jb21tZW50cyIpLmFkZENsYXNzKCJoaWRlIik7CiAgICAgICAgICAgICAgICAgICAgY29tbWVudE1vZGFsLmZpbmQoJyNjb21tZW50Ym94JykucmVtb3ZlQ2xhc3MoImhpZGUiKTsKICAgICAgICAgICAgICAgICAgICBjb21tZW50TW9kYWwuZmluZCgnLmFkZC1jb21tZW50cycpLmh0bWwoIlVwZGF0ZSIpOwogICAgICAgICAgICAgICAgICAgIGlmKHVwZGF0ZWRDb21tZW50cy5sZW5ndGggPj0gcmVzdWx0LmNvbW1lbnRzLmxlbmd0aCl7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbW1lbnRNb2RhbC5maW5kKCIjY29tbWVudGJveCIpLnZhbCh1cGRhdGVkQ29tbWVudHMpOwogICAgICAgICAgICAgICAgICAgIH1lbHNlewogICAgICAgICAgICAgICAgICAgICAgICBjb21tZW50TW9kYWwuZmluZCgiI2NvbW1lbnRib3giKS52YWwocmVzdWx0LmNvbW1lbnRzKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgY29tbWVudE1vZGFsLmZpbmQoIiNjb21tZW50SWQiKS52YWwocmVzdWx0LmlkKTsKICAgICAgICAgICAgICAgICAgICBjb21tZW50TW9kYWwuZmluZCgiLmNyZWF0ZWRCeSIpLnRleHQoIkxhc3QgTW9kaWZpZWQgYnkgIiArIHJlc3VsdC5tb2RpZmllZEJ5ICsgIiBvbiAiICsgcmVzdWx0LmRhdGVVcGRhdGVkKTsKICAgICAgICAgICAgICAgICAgICBjb21tZW50TW9kYWwuZmluZCgnLmFkZC1jb21tZW50cycpLnByb3AoImRpc2FibGVkIiwgdHJ1ZSk7CgogICAgICAgICAgICAgICAgfWVsc2UgaWYodHlwZW9mIGlzQ29tbWVudEFkZGVkICE9ICd1bmRlZmluZWQnICYmIGlzQ29tbWVudEFkZGVkICYmIG9uU2lnbmFsU2NyZWVuKXsKICAgICAgICAgICAgICAgICAgICBjb21tZW50TW9kYWwuZmluZCgiI2NvbW1lbnRJZCIpLnZhbCgnJyk7CiAgICAgICAgICAgICAgICAgICAgY29tbWVudE1vZGFsLmZpbmQoJy5hZGQtY29tbWVudHMnKS5odG1sKCJBZGQiKTsKICAgICAgICAgICAgICAgICAgICBjb21tZW50TW9kYWwuZmluZCgiI2NvbW1lbnRib3giKS52YWwoJycpOwogICAgICAgICAgICAgICAgICAgIGNvbW1lbnRNb2RhbC5maW5kKCIjbm8tY29tbWVudHMiKS5yZW1vdmVDbGFzcygiaGlkZSIpOwogICAgICAgICAgICAgICAgICAgIGNvbW1lbnRNb2RhbC5maW5kKCcuYWRkLWNvbW1lbnRzJykucHJvcCgiZGlzYWJsZWQiLCB0cnVlKTsKICAgICAgICAgICAgICAgICAgICBjb21tZW50TW9kYWwuZmluZCgiLmNyZWF0ZWRCeSIpLnRleHQoJycpOwoKICAgICAgICAgICAgICAgIH1lbHNlIGlmKHR5cGVvZiBpc0NvbW1lbnRBZGRlZCAhPSAndW5kZWZpbmVkJyAmJiBpc0NvbW1lbnRBZGRlZCl7CiAgICAgICAgICAgICAgICAgICAgY29tbWVudE1vZGFsLmZpbmQoIiNjb21tZW50SWQiKS52YWwoJycpOwogICAgICAgICAgICAgICAgICAgIGNvbW1lbnRNb2RhbC5maW5kKCcuYWRkLWNvbW1lbnRzJykuaHRtbCgiQWRkIik7CiAgICAgICAgICAgICAgICAgICAgY29tbWVudE1vZGFsLmZpbmQoIiNjb21tZW50Ym94IikudmFsKCcnKTsKICAgICAgICAgICAgICAgICAgICBjb21tZW50TW9kYWwuZmluZCgiI25vLWNvbW1lbnRzIikucmVtb3ZlQ2xhc3MoImhpZGUiKTsKICAgICAgICAgICAgICAgICAgICBjb21tZW50TW9kYWwuZmluZCgnLmFkZC1jb21tZW50cycpLnByb3AoImRpc2FibGVkIiwgdHJ1ZSk7CiAgICAgICAgICAgICAgICAgICAgY29tbWVudE1vZGFsLmZpbmQoJyNjb21tZW50Ym94JykuYWRkQ2xhc3MoImhpZGUiKTsKICAgICAgICAgICAgICAgICAgICBjb21tZW50TW9kYWwuZmluZCgiLmNyZWF0ZWRCeSIpLnRleHQoJycpOwogICAgICAgICAgICAgICAgfWVsc2V7CiAgICAgICAgICAgICAgICAgICAgY29tbWVudE1vZGFsLmZpbmQoIiNjb21tZW50SWQiKS52YWwoJycpOwogICAgICAgICAgICAgICAgICAgIGNvbW1lbnRNb2RhbC5maW5kKCIuY3JlYXRlZEJ5IikudGV4dCgnJyk7CiAgICAgICAgICAgICAgICAgICAgY29tbWVudE1vZGFsLmZpbmQoJy5hZGQtY29tbWVudHMnKS5odG1sKCJBZGQiKTsKICAgICAgICAgICAgICAgICAgICBjb21tZW50TW9kYWwuZmluZCgnLmFkZC1jb21tZW50cycpLnByb3AoImRpc2FibGVkIiwgdHJ1ZSk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgY29tbWVudE1vZGFsLmZpbmQoJyNjb21tZW50Ym94Jykub24oImtleXVwIiwgZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICAgIGlmKGNvbW1lbnRNb2RhbC5maW5kKCIjY29tbWVudElkIikudmFsKCk9PSIiICYmIGNvbW1lbnRNb2RhbC5maW5kKCcjY29tbWVudGJveCcpLnZhbCgpPT0iIikKICAgICAgICAgICAgICAgICAgICAgICAgY29tbWVudE1vZGFsLmZpbmQoJy5hZGQtY29tbWVudHMnKS5wcm9wKCJkaXNhYmxlZCIsIHRydWUpOwogICAgICAgICAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgICAgICBjb21tZW50TW9kYWwuZmluZCgnLmFkZC1jb21tZW50cycpLnByb3AoImRpc2FibGVkIiwgZmFsc2UpOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICB9LAogICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgY29uc29sZS5sb2coIlVuYWJsZSB0byBsb2FkIHByZXZpb3VzIGNvbW1lbnRzLiIpOwogICAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICB9OwoKICAgIHZhciBiaW5kU2F2ZUNvbW1lbnQgPSBmdW5jdGlvbiAoY29tbWVudE1vZGFsKSB7CgogICAgICAgIC8vQWRkIGNsaWNrIGV2ZW50IHRvIHRoZSBhZGQgY29tbWVudCBidXR0b24uCiAgICAgICAgY29tbWVudE1vZGFsLmZpbmQoIi5hZGQtY29tbWVudHMiKS51bmJpbmQoKS5jbGljayhmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHZhciBjYXNlSnNvbk9iakFycmF5ID0gW107CiAgICAgICAgICAgIHZhciBhcHBUeXBlID0gJCgiI2FwcGxpY2F0aW9uIikuaHRtbCgpOwogICAgICAgICAgICB2YXIgdmFsaWRhdGVkU2lnbmFsSWQgPSAkKCIjdmFsaWRhdGVkU2lnbmFsSWQiKS5odG1sKCk7CiAgICAgICAgICAgIHZhciB0b3BpY0lkID0gJCgiI3RvcGljSWQiKS5odG1sKCk7CgogICAgICAgICAgICBpZiAoYXBwVHlwZSA9PSAnJykgewogICAgICAgICAgICAgICAgYXBwVHlwZSA9IGNvbW1lbnRNb2RhbC5maW5kKCIjYXBwbGljYXRpb24iKS5odG1sKCk7CiAgICAgICAgICAgICAgICB2YWxpZGF0ZWRTaWduYWxJZCA9IGNvbW1lbnRNb2RhbC5maW5kKCIjdmFsaWRhdGVkU2lnbmFsSWQiKS5odG1sKCk7CiAgICAgICAgICAgICAgICB0b3BpY0lkID0gY29tbWVudE1vZGFsLmZpbmQoIiN0b3BpY0lkIikuaHRtbCgpCiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHZhciBjYXNlSnNvbk9iajsKICAgICAgICAgICAgdmFyIHVybDsKICAgICAgICAgICAgdmFyIGRhdGE7CiAgICAgICAgICAgIC8vQ2FzZSBKU09OLgogICAgICAgICAgICBjYXNlSnNvbk9iaiA9IHsKICAgICAgICAgICAgICAgICJhbGVydFR5cGUiOiBhcHBUeXBlLAogICAgICAgICAgICAgICAgInByb2R1Y3ROYW1lIjogY29tbWVudE1vZGFsLmZpbmQoIiNwcm9kdWN0TmFtZSIpLmh0bWwoKSwKICAgICAgICAgICAgICAgICJldmVudE5hbWUiOiBjb21tZW50TW9kYWwuZmluZCgiI2V2ZW50TmFtZSIpLmh0bWwoKSwKICAgICAgICAgICAgICAgICJjb21tZW50cyI6IGNvbW1lbnRNb2RhbC5maW5kKCIjY29tbWVudGJveCIpLnZhbCgpLAogICAgICAgICAgICAgICAgInZhbGlkYXRlZFNpZ25hbElkIjogdmFsaWRhdGVkU2lnbmFsSWQsCiAgICAgICAgICAgICAgICAiYXNzaWduZWRUbyI6IGNvbW1lbnRNb2RhbC5maW5kKCIjYXNzaWduZWRUbyIpLmh0bWwoKSwKICAgICAgICAgICAgICAgICJleGVjdXRlZENvbmZpZ0lkIjogY29tbWVudE1vZGFsLmZpbmQoIiNleGVjdXRlZENvbmZpZ0lkIikuaHRtbCgpLAogICAgICAgICAgICAgICAgImNvbmZpZ0lkIiA6IGNvbW1lbnRNb2RhbC5maW5kKCIjY29uZmlnSWQiKS5odG1sKCksCiAgICAgICAgICAgICAgICAidG9waWNJZCI6IGNvbW1lbnRNb2RhbC5maW5kKCIjdG9waWNJZCIpLmh0bWwoKSwKICAgICAgICAgICAgICAgICJwcm9kdWN0RmFtaWx5IjogY29tbWVudE1vZGFsLmZpbmQoIiNwcm9kRmFtaWx5IikuaHRtbCgpLAogICAgICAgICAgICAgICAgImNhc2VOdW1iZXIiOiBjb21tZW50TW9kYWwuZmluZCgiI2Nhc2VObyIpLmh0bWwoKSwKICAgICAgICAgICAgICAgICJwcm9kdWN0SWQiOiBwYXJzZUludChjb21tZW50TW9kYWwuZmluZCgiI3Byb2R1Y3RJZCIpLmh0bWwoKSksCiAgICAgICAgICAgICAgICAicHRDb2RlIjogcGFyc2VJbnQoY29tbWVudE1vZGFsLmZpbmQoIiNwdENvZGUiKS5odG1sKCkpCgogICAgICAgICAgICB9OwogICAgICAgICAgICBjYXNlSnNvbk9iakFycmF5LnB1c2goY2FzZUpzb25PYmopOwogICAgICAgICAgICBpZihjb21tZW50TW9kYWwuZmluZCgiI2NvbW1lbnRJZCIpLnZhbCgpKXsKICAgICAgICAgICAgICAgIHVybCA9ICIvc2lnbmFsL2FsZXJ0Q29tbWVudC91cGRhdGVDb21tZW50IjsKICAgICAgICAgICAgICAgIGRhdGEgPSB7CiAgICAgICAgICAgICAgICAgICAgImFsZXJ0VHlwZSI6IGFwcFR5cGUsCiAgICAgICAgICAgICAgICAgICAgImNvbW1lbnQiOiBjb21tZW50TW9kYWwuZmluZCgiI2NvbW1lbnRib3giKS52YWwoKSwKICAgICAgICAgICAgICAgICAgICAiaWQiOiBjb21tZW50TW9kYWwuZmluZCgiI2NvbW1lbnRJZCIpLnZhbCgpLAogICAgICAgICAgICAgICAgICAgICJleGVjdXRlZENvbmZpZ0lkIjogY29tbWVudE1vZGFsLmZpbmQoIiNleGVjdXRlZENvbmZpZ0lkIikuaHRtbCgpLAogICAgICAgICAgICAgICAgICAgICJ2YWxpZGF0ZWRTaWduYWxJZCI6IHZhbGlkYXRlZFNpZ25hbElkCiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICB9ZWxzZXsKICAgICAgICAgICAgICAgIHVybCA9ICIvc2lnbmFsL2FsZXJ0Q29tbWVudC9zYXZlQ29tbWVudCI7CiAgICAgICAgICAgICAgICBkYXRhID0geyJjYXNlSnNvbk9iakFycmF5IjogSlNPTi5zdHJpbmdpZnkoY2FzZUpzb25PYmpBcnJheSl9CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgICQuYWpheCh7CiAgICAgICAgICAgICAgICB1cmw6IHVybCwKICAgICAgICAgICAgICAgIGRhdGE6IGRhdGEsCiAgICAgICAgICAgICAgICB0eXBlOiAiUE9TVCIsCiAgICAgICAgICAgICAgICBhc3luYzogZmFsc2UsCiAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzdWx0KSB7CiAgICAgICAgICAgICAgICAgICAgaWYocmVzdWx0LnN1Y2Nlc3MpIHsKICAgICAgICAgICAgICAgICAgICAgICAgY29tbWVudE1vZGFsLmZpbmQoIiNpc1VwZGF0ZWQiKS52YWwoInRydWUiKTsKICAgICAgICAgICAgICAgICAgICAgICAgcG9wdWxhdGVDb21tZW50cyhjb21tZW50TW9kYWwsIGNhc2VKc29uT2JqQXJyYXlbMF0pOwogICAgICAgICAgICAgICAgICAgICAgICAkKCcjY29tbWVudGJveCcpLnZhbCgnJykuYmx1cigpCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIGVycm9yOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgfTsKCiAgICB2YXIgYmluZEVkaXRDb21tZW50ID0gZnVuY3Rpb24gKGNvbW1lbnRNb2RhbCkgewoKICAgICAgICBjb21tZW50TW9kYWwuZmluZCgiLnByZXZpb3VzLWNvbW1lbnRzIikuZmluZCgnLmVkaXQtY29tbWVudCcpLmNsaWNrKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgJCh0aGlzKS5wYXJlbnQoKS5maW5kKCIudXBkYXRlLWNvbW1lbnQiKS5yZW1vdmVDbGFzcygiaGlkZGVuIik7CiAgICAgICAgICAgICQodGhpcykucGFyZW50KCkuZmluZCgiLmNvbW1lbnQtYXJlYSIpLmF0dHIoJ2Rpc2FibGVkJywgZmFsc2UpOwogICAgICAgICAgICAkKHRoaXMpLmFkZENsYXNzKCJoaWRkZW4iKQogICAgICAgIH0pOwogICAgfTsKCiAgICB2YXIgYmluZERlbGV0ZUNvbW1lbnQgPSBmdW5jdGlvbiAoY29tbWVudE1vZGFsLCBjYXNlSnNvbikgewoKICAgICAgICBjb21tZW50TW9kYWwuZmluZCgiLnByZXZpb3VzLWNvbW1lbnRzIikuZmluZCgnLmRlbGV0ZS1jb21tZW50JykuY2xpY2soZnVuY3Rpb24gKCkgewogICAgICAgICAgICB2YXIgaWQgPSB7CiAgICAgICAgICAgICAgICAiaWQiOiAkKHRoaXMpLnBhcmVudCgpLmZpbmQoIi5jb21tZW50SWQiKS52YWwoKSwKICAgICAgICAgICAgICAgICJ2YWxpZGF0ZWRTaWduYWxJZCI6ICQoIiN2YWxpZGF0ZWRTaWduYWxJZCIpLnRleHQoKSwKICAgICAgICAgICAgICAgICJhZGhvY0FsZXJ0SWQiIDogY2FzZUpzb24uYWRob2NBbGVydElkCiAgICAgICAgICAgIH07CiAgICAgICAgICAgICQuYWpheCh7CiAgICAgICAgICAgICAgICB1cmw6ICIvc2lnbmFsL2FsZXJ0Q29tbWVudC9kZWxldGVDb21tZW50IiwKICAgICAgICAgICAgICAgIGRhdGE6IGlkLAogICAgICAgICAgICAgICAgYXN5bmM6IGZhbHNlLAogICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlc3VsdCkgewogICAgICAgICAgICAgICAgICAgIHBvcHVsYXRlQ29tbWVudHMoY29tbWVudE1vZGFsLCBjYXNlSnNvbik7CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CiAgICAgICAgfSk7CiAgICB9OwoKICAgIHZhciBiaW5kVXBkYXRlQ29tbWVudCA9IGZ1bmN0aW9uIChjb21tZW50TW9kYWwsIGNhc2VKc29uKSB7CgoKICAgICAgICBjb21tZW50TW9kYWwuZmluZCgiLnByZXZpb3VzLWNvbW1lbnRzIikuZmluZCgnLnVwZGF0ZS1jb21tZW50JykuY2xpY2soZnVuY3Rpb24gKCkgewoKICAgICAgICAgICAgJCh0aGlzKS5wYXJlbnQoKS5maW5kKCIuZ2x5cGhpY29uLXBlbmNpbCIpLnJlbW92ZUNsYXNzKCJoaWRkZW4iKTsKICAgICAgICAgICAgdmFyIGNvbW1lbnREYXRhID0gewogICAgICAgICAgICAgICAgImNvbW1lbnQiOiAkKHRoaXMpLnBhcmVudCgpLmZpbmQoIi5jb21tZW50LWFyZWEiKS52YWwoKSwKICAgICAgICAgICAgICAgICJpZCI6ICQodGhpcykucGFyZW50KCkuZmluZCgiLmNvbW1lbnRJZCIpLnZhbCgpLAogICAgICAgICAgICAgICAgInZhbGlkYXRlZFNpZ25hbElkIjogJCgiI3ZhbGlkYXRlZFNpZ25hbElkIikudGV4dCgpLAogICAgICAgICAgICAgICAgInRvcGljSWQiOiAkKCIjdG9waWNJZCIpLmh0bWwoKSwKICAgICAgICAgICAgICAgICJleGVjdXRlZENvbmZpZ0lkIjogY2FzZUpzb24uZXhlY3V0ZWRDb25maWdJZCwKICAgICAgICAgICAgICAgICJhZGhvY0FsZXJ0SWQiIDogY2FzZUpzb24uYWRob2NBbGVydElkCiAgICAgICAgICAgIH07CgogICAgICAgICAgICAkLmFqYXgoewogICAgICAgICAgICAgICAgdXJsOiAiL3NpZ25hbC9hbGVydENvbW1lbnQvdXBkYXRlQ29tbWVudCIsCiAgICAgICAgICAgICAgICBkYXRhOiBjb21tZW50RGF0YSwKICAgICAgICAgICAgICAgIGFzeW5jOiBmYWxzZSwKICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXN1bHQpIHsKCiAgICAgICAgICAgICAgICAgICAgcG9wdWxhdGVDb21tZW50cyhjb21tZW50TW9kYWwsIGNhc2VKc29uKTsKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICB9KTsKICAgIH07CgogICAgcmV0dXJuIHsKICAgICAgICBsaXN0X2NvbW1lbnRzOiBsaXN0Q29tbWVudHMsCiAgICAgICAgcG9wdWxhdGVfY29tbWVudHM6IHBvcHVsYXRlQ29tbWVudHMsCiAgICAgICAgc2F2ZV9jb21tZW50OiBiaW5kU2F2ZUNvbW1lbnQKICAgIH0KfSkoKTsKCgp2YXIgc2lnbmFsID0gc2lnbmFsIHx8IHt9OwoKc2lnbmFsLmFsZXJ0c191dGlscyA9IChmdW5jdGlvbigpIHsKICAgIHZhciBwcmlvcml0aWVzOwogICAgdmFyIHdvcmtmbG93U3RhdGVzOwoKICAgIHZhciBnZXRfcHJpb3JpdGllcyA9IGZ1bmN0aW9uKCkgewogICAgICAgICQuYWpheCh7CiAgICAgICAgICAgIHVybDogIi9zaWduYWwvd29ya2Zsb3cvcHJpb3JpdGllcyIsCiAgICAgICAgICAgIGFzeW5jOiBmYWxzZSwKICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24ocmVzdWx0KSB7CiAgICAgICAgICAgICAgICBwcmlvcml0aWVzID0gcmVzdWx0CiAgICAgICAgICAgIH0KICAgICAgICB9KTsKCiAgICAgICAgcmV0dXJuIHByaW9yaXRpZXMKICAgIH07CgogICAgdmFyIGdldF93b3JrZmxvd1N0YXRlcyA9IGZ1bmN0aW9uKGluaXREYXRhKSB7CiAgICAgICAgJC5hamF4KHsKICAgICAgICAgICAgdXJsOiAiL3NpZ25hbC93b3JrZmxvdy93b3JrZmxvd1N0YXRlIiwKICAgICAgICAgICAgYXN5bmM6IGZhbHNlLAogICAgICAgICAgICBkYXRhOiBpbml0RGF0YSwKICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24ocmVzdWx0KSB7CiAgICAgICAgICAgICAgICB3b3JrZmxvd1N0YXRlcyA9IHJlc3VsdAogICAgICAgICAgICB9CiAgICAgICAgfSk7CgogICAgICAgIHJldHVybiB3b3JrZmxvd1N0YXRlcwogICAgfTsKCiAgICB2YXIgcHJpb3JpdGllc19zZWxlY3Rpb25zID0gZnVuY3Rpb24oZGF0YSwgdHlwZSwgcm93KSB7CiAgICAgICAgdmFyIG5ld19zZWxlY3QgPSAnPGRpdj48c2VsZWN0IGNsYXNzPSJmb3JtLWNvbnRyb2wgYWRkLWN1cnNvciIgJyArCiAgICAgICAgICAgICdzdHlsZT0iaGVpZ2h0OiAzMHB4OyIgb25jaGFuZ2U9InVwZGF0ZVByaW9yaXR5KHRoaXMudmFsdWUsJyArIHJvdy5pZCArICcpIj4nOwogICAgICAgIHZhciBwcmlvcml0eSA9IHJvdy5wcmlvcml0eTsKCiAgICAgICAgdmFyIHRoZV9zZWxlY3QgPSBfLnJlZHVjZShwcmlvcml0aWVzLCBmdW5jdGlvbihtLCBwKXsKICAgICAgICAgICAgaWYgKHAudmFsdWUgPT0gcHJpb3JpdHkpCiAgICAgICAgICAgICAgICByZXR1cm4gbSArICc8b3B0aW9uIHZhbHVlPSInICsgcC52YWx1ZSArICciIHNlbGVjdGVkPiAnICsgcC5kaXNwbGF5TmFtZSArICc8L29wdGlvbj4nOwogICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICByZXR1cm4gbSArICc8b3B0aW9uIHZhbHVlPSInICsgcC52YWx1ZSArICciPicgKyBwLmRpc3BsYXlOYW1lICsgJzwvb3B0aW9uPicKICAgICAgICB9LCBuZXdfc2VsZWN0KTsKICAgICAgICB0aGVfc2VsZWN0ID0gdGhlX3NlbGVjdCArICc8L3NlbGVjdD48L2Rpdj4nOwogICAgICAgIHJldHVybiB0aGVfc2VsZWN0OwogICAgfTsKCiAgICB2YXIgd29ya2Zsb3dfc2VsZWN0aW9ucyA9IGZ1bmN0aW9uKGRhdGEsIHR5cGUsIHJvdykgewogICAgICAgIHZhciBuZXdfc2VsZWN0ID0gJzxkaXY+PHNlbGVjdCBjbGFzcz0iZm9ybS1jb250cm9sIGFkZC1jdXJzb3IiIHN0eWxlPSJoZWlnaHQ6IDMwcHg7IiBvbmNoYW5nZT0idXBkYXRlU3RhdHVzKHRoaXMudmFsdWUsJyArIHJvdy5pZCArICcpIj4nOwogICAgICAgIHZhciB3b3JrZmxvd1N0YXRlID0gcm93LndvcmtmbG93U3RhdGU7CgogICAgICAgIHZhciB0aGVfc2VsZWN0ID0gXy5yZWR1Y2Uod29ya2Zsb3dTdGF0ZXMsIGZ1bmN0aW9uKG0sIHdzKXsKICAgICAgICAgICAgaWYgKHdzLnZhbHVlID09IHdvcmtmbG93U3RhdGUpCiAgICAgICAgICAgICAgICByZXR1cm4gbSArICc8b3B0aW9uIHZhbHVlPSInICsgd3MudmFsdWUgKyAnIiBzZWxlY3RlZD4gJyArIHdzLmRpc3BsYXlOYW1lICsgJzwvb3B0aW9uPic7CiAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgIHJldHVybiBtICsgJzxvcHRpb24gdmFsdWU9IicgKyB3cy52YWx1ZSArICciPicgKyB3cy5kaXNwbGF5TmFtZSArICc8L29wdGlvbj4nCiAgICAgICAgfSwgbmV3X3NlbGVjdCk7CiAgICAgICAgdGhlX3NlbGVjdCA9IHRoZV9zZWxlY3QgKyAnPC9zZWxlY3Q+PC9kaXY+JzsKICAgICAgICByZXR1cm4gdGhlX3NlbGVjdDsKICAgIH07CgogICAgdmFyIGNvbXBvc2VfZWRpdF9zdGF0ZV9saW5rID0gZnVuY3Rpb24odmFsdWUsIHJvd0lkLCBmaWxlZE5hbWUpIHsKICAgICAgICByZXR1cm4gIjxzcGFuPiIgKyB2YWx1ZSArICI8L3NwYW4+IiArICI8YSBocmVmPScjJyBjbGFzcz0nZWRpdC1zdGF0ZScgPiIgKwogICAgICAgICAgICAiPGkgY2xhc3M9J2ZhIGZhLXNoYXJlLWFsdCBwdWxsLXJpZ2h0JyBkYXRhLWZpZWxkPSciICArIGZpbGVkTmFtZSArCiAgICAgICAgICAgICInIGRhdGEtaWQ9JyIgKyByb3dJZCArICInLz48L2E+IgogICAgfTsKCiAgICB2YXIgc3RhdGVfY2hhbmdlZCA9IGZ1bmN0aW9uKGV4dHJhX3ZhbHVlcykgewogICAgICAgICQoIiN2YWx1ZVNlbGVjdCIpLmNoYW5nZShmdW5jdGlvbihldnQpIHsKICAgICAgICAgICAgdmFyIGF2YWlsYWJsZV9leHRyYV92YWx1ZXMgPSBleHRyYV92YWx1ZXNbJCh2YWx1ZVNlbGVjdCkudmFsKCldCiAgICAgICAgfSkKICAgIH07CgogICAgLy9UT0RPIHRoaXMgaXMgYSB0ZW1wIHNvbHV0aW9uIGZvciB0aGUgSlNPTiBmb3JtYXQuIEl0IHNob3VsZCBjb21lIGZyb20gc2VydmVyIHNpZGUKICAgIC8vRnVuY3Rpb24gdGhhdCBjb252ZXJ0cyB0aGUganNvbiBpbm5lcmh0bWwgdG8gdGhlIGNzdiB2YWx1ZXMuCiAgICAvL0l0IGNvbnZlcnRzIHRoZSBwcm9wZXJ0aWVzIHdoaWNoIGFyZSBub3QgaWQuCiAgICB2YXIgc2hvd19qc29uX2FzX2NzdiA9IGZ1bmN0aW9uIChlbGVtZW50Q2xhc3MpIHsKICAgICAgICAkKCIuIiArIGVsZW1lbnRDbGFzcykuZWFjaChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICBpZiAoaXNOYU4oJCh0aGlzKS5odG1sKCkpKSB7CiAgICAgICAgICAgICAgICAgIHZhciBtb2RpZmllZFZhbCA9ICIiOwogICAgICAgICAgICAgICAgICB2YXIganNvblZhbCA9IEpTT04ucGFyc2UoJCh0aGlzKS5odG1sKCkpOwogICAgICAgICAgICAgICAgICBmb3IgKHZhciBvYmogaW4ganNvblZhbCkgewogICAgICAgICAgICAgICAgICAgICBpZiAoanNvblZhbC5oYXNPd25Qcm9wZXJ0eShvYmopKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIHByb3AgaW4ganNvblZhbFtvYmpdKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChqc29uVmFsW29ial0uaGFzT3duUHJvcGVydHkocHJvcCkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHByb3AgIT0gJ2lkJykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb2RpZmllZFZhbCA9IG1vZGlmaWVkVmFsICsganNvblZhbFtvYmpdW3Byb3BdICsgIiwiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAkKHRoaXMpLmh0bWwobW9kaWZpZWRWYWwuc2xpY2UoMCwgLTEpKQogICAgICAgICAgICAgIH0KICAgICAgICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICAgICAgICAvL0RvIG5vdGhpbmcKICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKGVycikKICAgICAgICAgICB9CiAgICAgICAgICAgJCh0aGlzKS5odG1sKCkKICAgICAgICB9KQogICAgfTsKCiAgICB2YXIgaW5pdF9tYXRjaGVkX2FsZXJ0c190YWJsZSA9IGZ1bmN0aW9uKHRhYmxlRWxlLCB1cmwpIHsKICAgICAgICB2YXIgdGFibGUgPSB0YWJsZUVsZS5EYXRhVGFibGUoewogICAgICAgICAgICAibGFuZ3VhZ2UiOiB7CiAgICAgICAgICAgICAgICAidXJsIjogIi9zaWduYWwvYXNzZXRzL2kxOG4vZGF0YVRhYmxlc18iICsgdXNlckxvY2FsZSArICIuanNvbiIKICAgICAgICAgICAgfSwKCiAgICAgICAgICAgIGFqYXg6IHsKICAgICAgICAgICAgICAgIHVybDogdXJsLAogICAgICAgICAgICAgICAgZGF0YVNyYzogJycsCiAgICAgICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24oeGhyLHN0YXR1cyxlcnJvcil7fQogICAgICAgICAgICB9LAoKICAgICAgICAgICAgYW9Db2x1bW5zOlsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBtRGF0YTogJ25hbWUnCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIG1EYXRhOiAncHJvZHVjdFNlbGVjdGlvbicKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgbURhdGE6ICd0b3BpYycKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgbURhdGE6ICdkZXRlY3RlZERhdGUnCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIG1EYXRhOiAnZGlzcG9zaXRpb24nCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIGRvbTogJycKICAgICAgICB9KTsKCiAgICAgICAgcmV0dXJuIHRhYmxlCiAgICB9OwoKICAgIHZhciBnZXRTaWduYWxOYW1lTGlzdCA9IGZ1bmN0aW9uKHNpZ25hbHNBbmRUb3BpY3MpIHsKICAgICAgICB2YXIgc2lnbmFsQW5kVG9waWNzID0gJyc7CiAgICAgICAgJC5lYWNoKHNpZ25hbHNBbmRUb3BpY3MsIGZ1bmN0aW9uKGksIG9iail7CiAgICAgICAgICAgIHZhciB1cmwgPSBzaWduYWxEZXRhaWxVcmwgKyAnP2lkPScgKyBvYmpbJ3NpZ25hbElkJ107CiAgICAgICAgICAgIHNpZ25hbEFuZFRvcGljcyA9IHNpZ25hbEFuZFRvcGljcyArICc8c3BhbiBjbGFzcz0iY2xpY2siPjxhIGhyZWY9IicgKyB1cmwgKyAnIj4nICsgb2JqWyduYW1lJ10gKyAnPC9hPjwvc3Bhbj4mbmJzcDsnCiAgICAgICAgICAgIHNpZ25hbEFuZFRvcGljcyA9IHNpZ25hbEFuZFRvcGljcyArICIsIgogICAgICAgIH0pOwogICAgICAgIGlmKHNpZ25hbEFuZFRvcGljcy5sZW5ndGggPiAxKQogICAgICAgICAgICByZXR1cm4gJzxkaXY+JyArIHNpZ25hbEFuZFRvcGljcy5zdWJzdHJpbmcoMCwgc2lnbmFsQW5kVG9waWNzLmxlbmd0aCAtIDEpICsgJzwvZGl2Pic7CiAgICAgICAgZWxzZQogICAgICAgICAgICByZXR1cm4gJy0nOwogICAgfTsKCiAgICAvLyBGb3Igc2hhcmVkIHdpdGggbW9kYWwKICAgIHZhciBpbml0aWFsaXplU2hhcmVXaXRoU2VsZWN0MiA9IGZ1bmN0aW9uKCl7CiAgICAgICAgJCgnI3NoYXJlV2l0aCcpLnNlbGVjdDIoKS5vbigiY2hhbmdlIiwgZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgJCgnI3NoYXJlV2l0aCcpLnBhcmVudCgpLnJlbW92ZUNsYXNzKCdoYXMtZXJyb3InKTsKICAgICAgICB9KTsKICAgIH07CgogICAgdmFyIGluaXRpYWxpemVTaGFyZVdpdGhWYWx1ZXMgPSBmdW5jdGlvbigpewogICAgICAgICQoJyNzaGFyZWRXaXRoTW9kYWwnKS5vbignc2hvdy5icy5tb2RhbCcsIGZ1bmN0aW9uKGUpIHsKICAgICAgICAgICAgdmFyIGV4ZWN1dGVkQ29uZmlnSWQgPSBlLnJlbGF0ZWRUYXJnZXQuaWQ7CiAgICAgICAgICAgICQoJyNleGVjdXRlZENvbmZpZ0lkJykudmFsKGV4ZWN1dGVkQ29uZmlnSWQpOwogICAgICAgICAgICAkKCcjc2hhcmVkV2l0aCcpLnBhcmVudCgpLnJlbW92ZUNsYXNzKCdoYXMtZXJyb3InKTsKCiAgICAgICAgICAgICQuYWpheCh7CiAgICAgICAgICAgICAgICBjYWNoZTogZmFsc2UsCiAgICAgICAgICAgICAgICB0eXBlOiAnR0VUJywKICAgICAgICAgICAgICAgIHVybDogZ2V0U2hhcmVkV2l0aCArICc/aWQ9JyArIGV4ZWN1dGVkQ29uZmlnSWQsCiAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbihyZXN1bHQpIHsKICAgICAgICAgICAgICAgICAgICB2YXIgdXNlcnMgPSAnJzsKICAgICAgICAgICAgICAgICAgICAkLmVhY2gocmVzdWx0LnVzZXJzLCBmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgICAgICAgICAgdXNlcnMgKz0gdGhpcy5uYW1lICsgJzxiciAvPicKICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICAkKCcjc2hhcmVkV2l0aFVzZXJMaXN0JykuaHRtbCh1c2Vycyk7CiAgICAgICAgICAgICAgICAgICAgdmFyIGdyb3VwcyA9ICcnOwogICAgICAgICAgICAgICAgICAgICQuZWFjaChyZXN1bHQuZ3JvdXBzLCBmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgICAgICAgICAgZ3JvdXBzICs9ICB0aGlzLm5hbWUgKyAnIDxiciAvPicKICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICAkKCcjc2hhcmVkV2l0aEdyb3VwTGlzdCcpLmh0bWwoZ3JvdXBzKTsKCiAgICAgICAgICAgICAgICAgICAgJC5lYWNoKHJlc3VsdC5hbGwsIGZ1bmN0aW9uKGksIGRhdGEpewogICAgICAgICAgICAgICAgICAgICAgICB2YXIgb3B0aW9uID0gbmV3IE9wdGlvbihkYXRhLm5hbWUsIGRhdGEuaWQsIHRydWUsIHRydWUpOwogICAgICAgICAgICAgICAgICAgICAgICAkKCcjc2hhcmVkV2l0aCcpLmFwcGVuZChvcHRpb24pLnRyaWdnZXIoJ2NoYW5nZScpOwogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIHNoYXJlZFdpdGhNb2RhbFNob3cgPSB0cnVlOwoKICAgICAgICB9KS5vbignaGlkZGVuLmJzLm1vZGFsJywgZnVuY3Rpb24oZSkgewogICAgICAgICAgICBzaGFyZWRXaXRoTW9kYWxTaG93ID0gZmFsc2U7CiAgICAgICAgICAgICQoJyNzaGFyZWRXaXRoJykudmFsKG51bGwpLnRyaWdnZXIoJ2NoYW5nZScpOwogICAgICAgICAgICAkKCcjc2hhcmVkV2l0aCcpLmZpbmQoJ29wdGlvbicpLnJlbW92ZSgpOwogICAgICAgIH0pOwogICAgfTsKCgogICAgcmV0dXJuIHsKICAgICAgICBnZXRfcHJpb3JpdGllczogZ2V0X3ByaW9yaXRpZXMsCiAgICAgICAgcHJpb3JpdGllc19zZWxlY3Rpb25zOiBwcmlvcml0aWVzX3NlbGVjdGlvbnMsCiAgICAgICAgZ2V0X3dvcmtmbG93U3RhdGVzOiBnZXRfd29ya2Zsb3dTdGF0ZXMsCiAgICAgICAgd29ya2Zsb3dfc2VsZWN0aW9uczogd29ya2Zsb3dfc2VsZWN0aW9ucywKICAgICAgICBjb21wb3NlX2VkaXRfc3RhdGVfbGluazogY29tcG9zZV9lZGl0X3N0YXRlX2xpbmssCiAgICAgICAgc3RhdGVfY2hhbmdlOiBzdGF0ZV9jaGFuZ2VkLAogICAgICAgIHNob3dfanNvbl9hc19jc3Y6IHNob3dfanNvbl9hc19jc3YsCiAgICAgICAgaW5pdF9tYXRjaGVkX2FsZXJ0c190YWJsZTogaW5pdF9tYXRjaGVkX2FsZXJ0c190YWJsZSwKICAgICAgICBnZXRTaWduYWxOYW1lTGlzdDogZ2V0U2lnbmFsTmFtZUxpc3QsCiAgICAgICAgaW5pdGlhbGl6ZVNoYXJlV2l0aFNlbGVjdDIgOiBpbml0aWFsaXplU2hhcmVXaXRoU2VsZWN0MiwKICAgICAgICBpbml0aWFsaXplU2hhcmVXaXRoVmFsdWVzOmluaXRpYWxpemVTaGFyZVdpdGhWYWx1ZXMKICAgIH0KfSkoKTsKCnZhciBzaWduYWwgPSBzaWduYWwgfHwge307CgpzaWduYWwubGlzdF91dGlscyA9IChmdW5jdGlvbiAoKSB7CiAgICB2YXIgZmxhZ19pdCA9IGZ1bmN0aW9uIChmbGFnLCBpZCkgewogICAgICAgIHZhciB0aGVIdG1sID0gJzxpIGNsYXNzPSJmYSBmYS1mbGFnLW8gdGV4dC1tdXRlZCByeC1saXN0LWZsYWciIGRhdGEtaWQ9IicgKyBpZCArICciPjwvaT4nCiAgICAgICAgaWYgKGZsYWcpIHsKICAgICAgICAgICAgdGhlSHRtbCA9ICc8aSBjbGFzcz0iZmEgZmEtZmxhZyB0ZXh0LXByaW1hcnkgcngtbGlzdC1mbGFnIiBkYXRhLWlkPSInICsgaWQgKyAnIj48L2k+JwogICAgICAgIH0KICAgICAgICByZXR1cm4gdGhlSHRtbAogICAgfTsKCiAgICB2YXIgZmxhZ19oYW5kbGVyID0gZnVuY3Rpb24gKGNvbnRyb2xsZXIsIGFjdGlvbikgewogICAgICAgICQoZG9jdW1lbnQpLm9uKCdjbGljaycsICcucngtbGlzdC1mbGFnJywgZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgdmFyIGVsZSA9IGUudGFyZ2V0OwogICAgICAgICAgICB2YXIgaWQgPSAkKGVsZSkuYXR0cignZGF0YS1pZCcpOwoKICAgICAgICAgICAgJC5hamF4KHsKICAgICAgICAgICAgICAgIHVybDogIi9zaWduYWwvIiArIGNvbnRyb2xsZXIgKyAiLyIgKyBhY3Rpb24gKyAiP2lkPSIgKyBpZCwKICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXN1bHQpIHsKICAgICAgICAgICAgICAgICAgICBpZiAocmVzdWx0LmZsYWdnZWQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgJChlbGUpLnJlbW92ZUNsYXNzKCdmYS1mbGFnLW8nKS5yZW1vdmVDbGFzcygndGV4dC1tdXRlZCcpOwogICAgICAgICAgICAgICAgICAgICAgICAkKGVsZSkuYWRkQ2xhc3MoJ2ZhLWZsYWcnKS5hZGRDbGFzcygndGV4dC1wcmltYXJ5Jyk7CiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgJChlbGUpLmFkZENsYXNzKCdmYS1mbGFnLW8nKS5hZGRDbGFzcygndGV4dC1tdXRlZCcpOwogICAgICAgICAgICAgICAgICAgICAgICAkKGVsZSkucmVtb3ZlQ2xhc3MoJ2ZhLWZsYWcnKS5yZW1vdmVDbGFzcygndGV4dC1wcmltYXJ5JykKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pCiAgICAgICAgfSkKICAgIH07CgogICAgdmFyIHByaW9yaXR5X2xpbmsgPSBmdW5jdGlvbiAocHJpb3JpdHksIGlkKSB7CiAgICAgICAgdmFyIGljb25fdXJsID0gY29tcG9zZV9wcmlvcml0eV9pY29uKHByaW9yaXR5KTsKICAgICAgICByZXR1cm4gJzxhIGhyZWY9IiMiIGNsYXNzPSJjaGFuZ2UtcHJpb3JpdHkiPjxpbWcgZGF0YS1maWVsZD0icHJpb3JpdHkiIGRhdGEtaW5mbz0icm93IiBkYXRhLWlkPSInICsKICAgICAgICAgICAgaWQgKyAnIiBkYXRhLXZhbHVlPSInICsgcHJpb3JpdHkgKyAnIiBzcmM9IicgKyBpY29uX3VybCArICciLz48L2E+JwogICAgfTsKCiAgICB2YXIgY29tcG9zZV9wcmlvcml0eV9pY29uID0gZnVuY3Rpb24gKHByaW9yaXR5KSB7CiAgICAgICAgdmFyIGljb25fdXJsID0gIi9zaWduYWwvYXNzZXRzL2ljb25zL2RlZmF1bHRfcHJpb3JpdHkucG5nIjsKCiAgICAgICAgaWYgKF8uY29udGFpbnMoWydoaWdoJywgJ2xvdycsICdtZWRpdW0nXSwgcHJpb3JpdHkudG9Mb3dlckNhc2UoKSkpIHsKICAgICAgICAgICAgaWNvbl91cmwgPSAiL3NpZ25hbC9hc3NldHMvaWNvbnMvIiArIHByaW9yaXR5LnRvTG93ZXJDYXNlKCkgKyAiX3ByaW9yaXR5LnBuZyI7CiAgICAgICAgfQogICAgICAgIHJldHVybiBpY29uX3VybDsKICAgIH07CgogICAgdmFyIGNoYW5nZV9wcmlvcml0eSA9IGZ1bmN0aW9uIChwcmlvcml0eUVsZSwgcHJpb3JpdHkpIHsKICAgICAgICB2YXIgaWNvbl91cmwgPSBjb21wb3NlX3ByaW9yaXR5X2ljb24ocHJpb3JpdHkpOwogICAgICAgICQocHJpb3JpdHlFbGUpLmF0dHIoInNyYyIsIGljb25fdXJsKTsKICAgICAgICAkKHByaW9yaXR5RWxlKS5hdHRyKCJkYXRhLXZhbHVlIiwgcHJpb3JpdHkpOwogICAgfTsKCiAgICB2YXIgY2hhbmdlX3ByaW9yaXR5VGVzdCA9IGZ1bmN0aW9uIChwcmlvcml0eUVsZSwgcHJpb3JpdHkpIHsKICAgICAgICAkKHByaW9yaXR5RWxlKS5hdHRyKCJkYXRhLXZhbHVlIiwgcHJpb3JpdHkpOwogICAgfTsKCiAgICBjaGFuZ2VfcHJpb3JpdHlUZXN0CgogICAgdmFyIGZpbmRfZmllbGQgPSBmdW5jdGlvbiAodGFibGVfcm93X2VsZSwgYXR0cl9uYW1lKSB7CiAgICAgICAgcmV0dXJuICQodGFibGVfcm93X2VsZSkuZmluZCgiW2RhdGEtYXR0cmlidXRlLW5hbWU9JyIgKyBhdHRyX25hbWUgKyAiJ10iKQogICAgfTsKCiAgICB2YXIgc2V0X3ZhbHVlID0gZnVuY3Rpb24gKHRhYmxlX3Jvd19lbGUsIGF0dHJfbmFtZSwgaWQsIGRhdGFfZnVuLCBhcHBfbmFtZSkgewogICAgICAgIHZhciBlbGUgPSBmaW5kX2ZpZWxkKHRhYmxlX3Jvd19lbGUsIGF0dHJfbmFtZSk7CiAgICAgICAgZWxlLmh0bWwoZGF0YV9mdW4oaWQsIGFwcF9uYW1lKSk7CiAgICB9OwoKICAgIHZhciBnZXRfZHVlX2luID0gZnVuY3Rpb24gKGlkLCBhcHBfbmFtZSkgewogICAgICAgIHZhciBkdWVJbiA9IDA7CiAgICAgICAgJC5hamF4KHsKICAgICAgICAgICAgdXJsOiAiL3NpZ25hbC9hbGVydC9kdWVJbj9hbGVydElkPSIgKyBpZCArICImYXBwTmFtZT0iICsgYXBwX25hbWUsCiAgICAgICAgICAgIGFzeW5jOiBmYWxzZSwKICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICAgICAgICAgIGR1ZUluID0gZGF0YS5yZXN1bHQ7CiAgICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgICByZXR1cm4gZHVlSW4KICAgIH07CgogICAgdmFyIGR1ZV9pbl9jb21wID0gZnVuY3Rpb24gKHZhbHVlKSB7CiAgICAgICAgaWYgKHZhbHVlIDw9IDApIHsKICAgICAgICAgICAgcmV0dXJuICI8ZGl2IGRhdGEtYXR0cmlidXRlLW5hbWU9J2R1ZUluJyBzdHlsZSA9ICdjb2xvcjpyZWQnPiIgKyB2YWx1ZSArICI8L2Rpdj4iOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHJldHVybiAiPGRpdiBkYXRhLWF0dHJpYnV0ZS1uYW1lPSdkdWVJbic+IiArIHZhbHVlICsgIjwvZGl2PiI7CiAgICAgICAgfQogICAgfTsKCiAgICB2YXIgYXNzaWduZWRfdG9fY29tcCA9IGZ1bmN0aW9uIChpZCwgYXNzaWduZWRUbykgewogICAgICAgIHZhciBodG1sID0gJzxkaXYgY2xhc3M9ImFzc2lnbmVkVG9Db250YWluZXIiPjxzZWxlY3QgY2xhc3M9ImFzc2lnbmVkVG9TZWxlY3QgZm9ybS1jb250cm9sIHNlbGVjdDIiPjwvc2VsZWN0PjxpIGNsYXNzPSJtZGkgbWRpLXNwaW4gbWRpLWxvYWRpbmcgYXNzaWduVG9Qcm9jZXNzaW5nIiBzdHlsZT0iZGlzcGxheTogbm9uZSI+PC9pPjwvZGl2Pic7CiAgICAgICAgcmV0dXJuIGh0bWwKICAgIH07CgogICAgdmFyIHRydW5jYXRlVGV4dEFuZFNob3dUb29sdGlwID0gZnVuY3Rpb24gKGN1dG9mZiwgd29yZGJyZWFrLCBlc2NhcGVIdG1sKSB7CiAgICAgICAgdmFyIGVzYyA9IGZ1bmN0aW9uICh0KSB7CiAgICAgICAgICAgIHJldHVybiB0CiAgICAgICAgICAgICAgICAucmVwbGFjZSgvJi9nLCAnJmFtcDsnKQogICAgICAgICAgICAgICAgLnJlcGxhY2UoLzwvZywgJyZsdDsnKQogICAgICAgICAgICAgICAgLnJlcGxhY2UoLz4vZywgJyZndDsnKQogICAgICAgICAgICAgICAgLnJlcGxhY2UoLyIvZywgJyZxdW90OycpOwogICAgICAgIH07CgogICAgICAgIHJldHVybiBmdW5jdGlvbiAoZCwgdHlwZSwgcm93KSB7CiAgICAgICAgICAgIC8vIE9yZGVyLCBzZWFyY2ggYW5kIHR5cGUgZ2V0IHRoZSBvcmlnaW5hbCBkYXRhCiAgICAgICAgICAgIGlmICh0eXBlICE9PSAnZGlzcGxheScpIHsKICAgICAgICAgICAgICAgIHJldHVybiBkOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAodHlwZW9mIGQgIT09ICdudW1iZXInICYmIHR5cGVvZiBkICE9PSAnc3RyaW5nJykgewogICAgICAgICAgICAgICAgcmV0dXJuIGQ7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGQgPSBkLnRvU3RyaW5nKCk7IC8vIGNhc3QgbnVtYmVycwoKICAgICAgICAgICAgaWYgKGQubGVuZ3RoIDw9IGN1dG9mZikgewogICAgICAgICAgICAgICAgcmV0dXJuIGVzYyhkKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgdmFyIHNob3J0ZW5lZCA9IGQuc3Vic3RyKDAsIGN1dG9mZiAtIDEpOwoKICAgICAgICAgICAgLy8gRmluZCB0aGUgbGFzdCB3aGl0ZSBzcGFjZSBjaGFyYWN0ZXIgaW4gdGhlIHN0cmluZwogICAgICAgICAgICBpZiAod29yZGJyZWFrKSB7CiAgICAgICAgICAgICAgICBzaG9ydGVuZWQgPSBzaG9ydGVuZWQucmVwbGFjZSgvXHMoW15cc10qKSQvLCAnJyk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC8vIFByb3RlY3QgYWdhaW5zdCB1bmNvbnRyb2xsZWQgSFRNTCBpbnB1dAogICAgICAgICAgICBpZiAoZXNjYXBlSHRtbCkgewogICAgICAgICAgICAgICAgc2hvcnRlbmVkID0gZXNjKHNob3J0ZW5lZCk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHJldHVybiAnPHNwYW4gY2xhc3M9ImVsbGlwc2lzIiB0aXRsZT0iJyArIGVzYyhkKSArICciPicgKyBzaG9ydGVuZWQgKyAnJiM4MjMwOzwvc3Bhbj4nOwogICAgICAgIH07CiAgICB9OwoKICAgIHZhciBhZGRfZmlsdGVycyA9IGZ1bmN0aW9uICh0YWJsZSwgZmlsdGVycywgZmlsdGVyX3RvZ2dsZV9idF9jb250YWluZXIpIHsKCiAgICAgICAgdmFyIHlhZGNmX2ZpbHRlcnMgPSBfLmZpbHRlcihmaWx0ZXJzLCBmdW5jdGlvbiAoZikgewogICAgICAgICAgICBpZiAoZlsxXSAhPSAnY3VzdG9taXplZCcpIHsKICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgICAgICB9CiAgICAgICAgfSk7CgogICAgICAgIHZhciBjdXN0X2ZpbHRlcnMgPSBfLmRpZmZlcmVuY2UoZmlsdGVycywgeWFkY2ZfZmlsdGVycyk7CgogICAgICAgIHlhZGNmLmluaXQodGFibGUsIF8ubWFwKHlhZGNmX2ZpbHRlcnMsIGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICAgIGlmIChpdGVtWzJdID09IHRydWUpCiAgICAgICAgICAgICAgICByZXR1cm4ge2NvbHVtbl9udW1iZXI6IGl0ZW1bMF0sIGZpbHRlcl90eXBlOiBpdGVtWzFdLCBmaWx0ZXJfcmVzZXRfYnV0dG9uX3RleHQ6ICd4J307CiAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgIHJldHVybiB7Y29sdW1uX251bWJlcjogaXRlbVswXSwgZmlsdGVyX3R5cGU6IGl0ZW1bMV0sIGZpbHRlcl9yZXNldF9idXR0b25fdGV4dDogZmFsc2V9OwogICAgICAgIH0pKTsKCiAgICAgICAgaWYgKGZpbHRlcl90b2dnbGVfYnRfY29udGFpbmVyKSB7CiAgICAgICAgICAgIGFkZF9maWx0ZXJfdG9nZ2xlX2J1dHRvbignaWR4eHh4eHgnLCBmaWx0ZXJfdG9nZ2xlX2J0X2NvbnRhaW5lcik7CiAgICAgICAgfQoKICAgICAgICBpZiAoY3VzdF9maWx0ZXJzKSB7CiAgICAgICAgICAgIF8uZWFjaChjdXN0X2ZpbHRlcnMsIGZ1bmN0aW9uIChmKSB7CiAgICAgICAgICAgICAgICAkKHRhYmxlLmNvbHVtbihmWzBdKS5oZWFkZXIoKSkuYXBwZW5kKGNyZWF0ZV9zdGFja2VkX2ZpbHRlcihmWzBdKSk7CiAgICAgICAgICAgIH0pOwogICAgICAgIH0KICAgIH07CgogICAgdmFyIGNyZWF0ZV9zdGFja2VkX2ZpbHRlciA9IGZ1bmN0aW9uIChpZHgpIHsKICAgICAgICByZXR1cm4gJCgiPGlucHV0IHR5cGU9J3RleHQnIGRhdGEtaW5kZXg9JyIgKyBpZHggKyAiJyBjbGFzcz0nY29sdW1uLWZpbHRlcicgcGxhY2Vob2xkZXI9J1R5cGUgdG8gZmlsdGVyJz4iICsKICAgICAgICAgICAgIjxpbnB1dCB0eXBlPSd0ZXh0JyBkYXRhLWluZGV4PSciICsgaWR4ICsgIicgY2xhc3M9J2NvbHVtbi1maWx0ZXInIHBsYWNlaG9sZGVyPSdUeXBlIHRvIGZpbHRlcic+Iik7CiAgICB9OwoKICAgIHZhciBhZGRfZmlsdGVyX3RvZ2dsZV9idXR0b24gPSBmdW5jdGlvbiAodGFibGVfaWQsIGNvbnRhaW5lcikgewogICAgICAgICQoJy55YWRjZi1maWx0ZXItd3JhcHBlciwgLmNvbHVtbi1maWx0ZXInKS5oaWRlKCk7CiAgICAgICAgJCgnLmNvbHVtbi1maWx0ZXInKS5jbGljayhmdW5jdGlvbiAoZXZ0KSB7CiAgICAgICAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfSk7CiAgICAgICAgJCgnLmNvbHVtbi1maWx0ZXInKS5vbigna2V5dXAnLCBmdW5jdGlvbiAoZXZ0KSB7CiAgICAgICAgICAgIC8vIFBlcmZvcm0gc2VhcmNoCiAgICAgICAgICAgIHZhciBpbmRleCA9ICQodGhpcykuZGF0YSgnaW5kZXgnKTsKICAgICAgICAgICAgJCh0YWJsZV9pZCkuRGF0YVRhYmxlKCkuY29sdW1uKGluZGV4KS5zZWFyY2goJCh0aGlzKS52YWwoKSkuZHJhdygpOwogICAgICAgIH0pOwogICAgICAgIHZhciBmaWx0ZXJUb2dnbGUgPSAiPGkgY2xhc3M9J3RhYmxlLWZpbHRlci10b2dnbGUgZ2x5cGhpY29uIGdseXBoaWNvbi1maWx0ZXInIGRhdGEtdGFibGU9JyIgKyB0YWJsZV9pZCArCiAgICAgICAgICAgICInIG9uY2xpY2s9J3NpZ25hbC5saXN0X3V0aWxzLmhhbmRsZV9maWx0ZXJfdG9nZ2xlJyBkYXRhLXNob3ctZmlsdGVyPSd0cnVlJz48L2k+IjsKICAgICAgICB2YXIgdG9nZ2xlX2J1dHRvbiA9ICQucGFyc2VIVE1MKGZpbHRlclRvZ2dsZSk7CiAgICAgICAgaWYgKCEoXy5pc1VuZGVmaW5lZChjb250YWluZXIpICYmIF8uaXNOdWxsKGNvbnRhaW5lcikpKSB7CiAgICAgICAgICAgIGNvbnRhaW5lci5hcHBlbmQodG9nZ2xlX2J1dHRvbik7CiAgICAgICAgfQoKICAgICAgICAkKGRvY3VtZW50KS5vbignZmlsdGVyLXRvZ2dsZS1pbml0JywgZnVuY3Rpb24gKGV2dCkgewogICAgICAgICAgICAkKCcudGFibGUtZmlsdGVyLXRvZ2dsZScpLmNsaWNrKGZ1bmN0aW9uIChldnQpIHsKICAgICAgICAgICAgICAgIHZhciBoaWRlX3Nob3dfZml0bGVyID0gZnVuY3Rpb24gKHRhYmxlSWQsIGhpZGVPclNob3cpIHsKICAgICAgICAgICAgICAgICAgICBpZiAoaGlkZU9yU2hvdyA9PT0gZmFsc2UpIHsKICAgICAgICAgICAgICAgICAgICAgICAgJCh0YWJsZUlkICsgJ193cmFwcGVyIC55YWRjZi1maWx0ZXItd3JhcHBlciwuY29sdW1uLWZpbHRlcicpLmhpZGUoKTsKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAkKHRhYmxlSWQgKyAnX3dyYXBwZXIgLnlhZGNmLWZpbHRlci13cmFwcGVyLC5jb2x1bW4tZmlsdGVyJykuc2hvdygpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH07CgogICAgICAgICAgICAgICAgdmFyIHRhcmdldEZpbHRlclRvZ2dsZSA9ICQoZXZ0LnRhcmdldCk7CiAgICAgICAgICAgICAgICB2YXIgdGFibGVJZCA9IHRhcmdldEZpbHRlclRvZ2dsZS5kYXRhKCd0YWJsZScpOwogICAgICAgICAgICAgICAgdmFyIHNob3dGaWx0ZXIgPSB0YXJnZXRGaWx0ZXJUb2dnbGUuZGF0YSgnc2hvdy1maWx0ZXInKTsKICAgICAgICAgICAgICAgIGlmIChzaG93RmlsdGVyID09PSAndHJ1ZScpIHsKICAgICAgICAgICAgICAgICAgICB0YXJnZXRGaWx0ZXJUb2dnbGUuZGF0YSgnc2hvd0ZpbHRlcicsICdmYWxzZScpOwogICAgICAgICAgICAgICAgICAgIGhpZGVfc2hvd19maXRsZXIodGFibGVJZCwgZmFsc2UpOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICB0YXJnZXRGaWx0ZXJUb2dnbGUuZGF0YSgnc2hvd0ZpbHRlcicsICd0cnVlJyk7CiAgICAgICAgICAgICAgICAgICAgaGlkZV9zaG93X2ZpdGxlcih0YWJsZUlkLCB0cnVlKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CiAgICAgICAgfSk7CgogICAgICAgICQoZG9jdW1lbnQpLnRyaWdnZXIoJ2ZpbHRlci10b2dnbGUtaW5pdCcpOwogICAgICAgIHJldHVybiAkKHRvZ2dsZV9idXR0b24pOwogICAgfTsKCiAgICB2YXIgaGFuZGxlX2ZpbHRlcl90b2dnbGUgPSBmdW5jdGlvbiAoZXZ0KSB7CiAgICAgICAgJCh0aGlzKS5hdHRyKCd0YXJnZXQtdGFibGUnKTsKICAgIH07CgogICAgcmV0dXJuIHsKICAgICAgICBmbGFnX2l0OiBmbGFnX2l0LAogICAgICAgIGZsYWdfaGFuZGxlcjogZmxhZ19oYW5kbGVyLAogICAgICAgIHByaW9yaXR5X2xpbms6IHByaW9yaXR5X2xpbmssCiAgICAgICAgY2hhbmdlX3ByaW9yaXR5OiBjaGFuZ2VfcHJpb3JpdHksCiAgICAgICAgZmluZF9maWVsZDogZmluZF9maWVsZCwKICAgICAgICBzZXRfdmFsdWU6IHNldF92YWx1ZSwKICAgICAgICBnZXRfZHVlX2luOiBnZXRfZHVlX2luLAogICAgICAgIGR1ZV9pbl9jb21wOiBkdWVfaW5fY29tcCwKICAgICAgICBhc3NpZ25lZF90b19jb21wOiBhc3NpZ25lZF90b19jb21wLAogICAgICAgIHRydW5jYXRlVGV4dEFuZFNob3dUb29sdGlwOiB0cnVuY2F0ZVRleHRBbmRTaG93VG9vbHRpcCwKICAgICAgICBhZGRfZmlsdGVyczogYWRkX2ZpbHRlcnMsCiAgICAgICAgaGFuZGxlX2ZpbHRlcl90b2dnbGU6IGhhbmRsZV9maWx0ZXJfdG9nZ2xlLAogICAgICAgIGFkZF9maWx0ZXJfdG9nZ2xlX2J1dHRvbjogYWRkX2ZpbHRlcl90b2dnbGVfYnV0dG9uCiAgICB9Cn0pKCk7CkhhbmRsZWJhcnMucmVnaXN0ZXJIZWxwZXIoJ2kxOG4nLAogICAgZnVuY3Rpb24oc3RyKXsKICAgICAgICByZXR1cm4gKCAodHlwZW9mIGkxOG4pICE9PSAndW5kZWZpbmVkJyA/IHN0ciA6IHN0cikKICAgIH0KKTsKCkhhbmRsZWJhcnMucmVnaXN0ZXJIZWxwZXIoJ3NlbGVjdCcsIGZ1bmN0aW9uKG5hbWUsIHNlbGVjdGVkVmFsdWUsIG9wdGlvbnMsIGRpc3BfZmllbGQsIHZhbHVlX2ZpZWxkKSB7CiAgICB2YXIgb3V0ID0gIjxzZWxlY3QgY2xhc3M9J2Zvcm0tY29udHJvbCBzZWxlY3RCb3gnIGlkPVwnIiArIG5hbWUgKyAiXCcgbmFtZT0iICsgbmFtZSArICI+XG4iOwogICAgXy5lYWNoKG9wdGlvbnMsIGZ1bmN0aW9uKHYpIHsKICAgICAgICBvdXQgKz0gIjxvcHRpb24gdmFsdWU9JyIgKyB2W3ZhbHVlX2ZpZWxkXSArICInIiArCiAgICAgICAgICAgICh2W3ZhbHVlX2ZpZWxkXSA9PSBzZWxlY3RlZFZhbHVlW3ZhbHVlX2ZpZWxkXSA/ICIgc2VsZWN0ZWQgIiA6ICIiKSArICIgPiIgKwogICAgICAgICAgICBlc2NhcGVIVE1MKHZbZGlzcF9maWVsZF0pICsgIjwvb3B0aW9uPlxuIgogICAgfSk7CiAgICBvdXQgKz0gIjwvc2VsZWN0PiI7CgogICAgcmV0dXJuIG5ldyBIYW5kbGViYXJzLlNhZmVTdHJpbmcob3V0KQp9KTsKCkhhbmRsZWJhcnMucmVnaXN0ZXJQYXJ0aWFsKCdkYXRlX3BpY2tlcl90ZW1wbGF0ZScsIHNpZ25hbC51dGlscy5oYnNfcGFydGlhbCgnZGF0ZV9waWNrZXJfdGVtcGxhdGUnKSk7CgovL0hhbmRsZWJhciBoZWxwZXIgdG8gaW1pdGF0ZSB0aGUgaWYgY29uZGl0aW9ucwpIYW5kbGViYXJzLnJlZ2lzdGVySGVscGVyKCdpZl9lcScsIGZ1bmN0aW9uKGEsIGIsIG9wdHMpIHsKICAgIGlmIChhID09IGIpIHsKICAgICAgICByZXR1cm4gb3B0cy5mbih0aGlzKTsKICAgIH0KfSk7CgovL0hhbmRsZWJhciBoZWxwZXIgdG8gaW1pdGF0ZSB0aGUgaWYuLmVsc2UgY29uZGl0aW9ucwpIYW5kbGViYXJzLnJlZ2lzdGVySGVscGVyKCdpZl9lbHNlX2VxJywgZnVuY3Rpb24oYSwgYiwgb3B0cykgewogICAgaWYgKGEgPT0gYikgewogICAgICAgIHJldHVybiBvcHRzLmZuKHRoaXMpOwogICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gb3B0cy5pbnZlcnNlKHRoaXMpOwogICAgfQp9KTsKdmFyIHNob3dUb3BpY1dpZGdldCA9IGZ1bmN0aW9uICgpIHsKICAgICQoIiN0b3BpYyIpLnNlbGVjdDIoewogICAgICAgIHRhZ3M6IHRydWUsCiAgICAgICAgcGxhY2Vob2xkZXI6ICJTZWxlY3QgdG9waWMiLAogICAgICAgIGFsbG93Q2xlYXI6IHRydWUsCiAgICAgICAgd2lkdGg6ICIxMDAlIiwKICAgICAgICBjcmVhdGVUYWc6IGZ1bmN0aW9uIChwYXJhbXMpIHsKICAgICAgICAgICAgdmFyIHRlcm0gPSAkLnRyaW0ocGFyYW1zLnRlcm0pOwogICAgICAgICAgICBpZiAodGVybSAhPSAiIikgewogICAgICAgICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgICAgICAgICBpZDogdGVybSwKICAgICAgICAgICAgICAgICAgICB0ZXh0OiB0ZXJtCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIG51bGwKICAgICAgICB9CiAgICB9KTsKfTsKLy89IHJlcXVpcmUgYXBwL3B2cy9jb21tb24vcnhfY29tbW9uLmpzCi8vPSByZXF1aXJlIGFwcC9wdnMvY29tbW9uL3J4X2xpc3RfdXRpbHMuanMKLy89IHJlcXVpcmUgYXBwL3B2cy9jb21tb24vcnhfaGFuZGxlYmFyX2V4dC5qcwovLz0gcmVxdWlyZSBhcHAvcHZzL3RvcGljL2F0dGFjaEFsZXJ0VG9Ub3BpYy5qcwoKdmFyIHNpZ25hbCA9IHNpZ25hbCB8fCB7fTsKCnZhciB0b3BpY0RhdGE7CnZhciBjb2x1bW5TZXE7CnZhciBpc1ZpZXdJbnN0YW5jZSA9IDE7CnZhciBzaWduYWxBbGVydFR5cGUgPSB7CiAgICBTSU5HTEVfQ0FTRV9BTEVSVDogIlNpbmdsZSBDYXNlIEFsZXJ0IiwKICAgIEFHR1JFR0FURV9BTEVSVDogIkFnZ3JlZ2F0ZSBDYXNlIEFsZXJ0IiwKICAgIEVWREFTX0FMRVJUOiAiRXZkYXMgQWxlcnQiLAogICAgQURIT0NfQUxFUlQ6ICJBZC1Ib2MgQWxlcnQiLAogICAgTElURVJBVFVSRV9TRUFSQ0hfQUxFUlQ6ICJMaXRlcmF0dXJlIFNlYXJjaCBBbGVydCIKfQoKc2lnbmFsLmFsZXJ0UmV2aWV3ID0gKGZ1bmN0aW9uICgpIHsKCiAgICB2YXIgaWRzID0gW107CiAgICB2YXIgcm93cyA9IFtdOwoKICAgIHZhciBhcHBseUJ1c2luZXNzUnVsZXMgPSBmdW5jdGlvbiAocm93LCBkYXRhKSB7CiAgICAgICAgLy9BcHBseSB0aGUgZXVkcmEgcnVsZXMuCiAgICAgICAgaWYgKGRhdGEuZm9ybWF0KSB7CiAgICAgICAgICAgIHZhciBvYmogPSBKU09OLnBhcnNlKGRhdGEuZm9ybWF0KTsKICAgICAgICAgICAgdmFyIHRleHRPYmo7CiAgICAgICAgICAgICQuZWFjaChvYmoudGV4dC50YywgZnVuY3Rpb24gKGluZGV4LCBkYXRhKSB7CiAgICAgICAgICAgICAgICB0ZXh0T2JqID0gJChyb3cpLmZpbmQoJy4nICsgZGF0YSk7CiAgICAgICAgICAgICAgICB0ZXh0T2JqLmNzcygnY29sb3InLCBvYmoudGV4dC5jb2xvcik7CiAgICAgICAgICAgICAgICBpZiAob2JqLnRleHQuYm9sZCkgewogICAgICAgICAgICAgICAgICAgIHRleHRPYmouY3NzKCdmb250LXdlaWdodCcsICc5MDAnKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGlmIChvYmoudGV4dC5pdGFsaWMpIHsKICAgICAgICAgICAgICAgICAgICB0ZXh0T2JqLmNzcygnZm9udC1zdHlsZScsICdpdGFsaWMnKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGlmIChvYmoudGV4dC51bmRlcmxpbmUpIHsKICAgICAgICAgICAgICAgICAgICB0ZXh0T2JqLmNzcygndGV4dC1kZWNvcmF0aW9uJywgJ3VuZGVybGluZScpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICAgICAgJC5lYWNoKG9iai5jZWxsLnRjLCBmdW5jdGlvbiAoaW5kZXgsIGRhdGEpIHsKICAgICAgICAgICAgICAgICQocm93KS5maW5kKCcuJyArIGRhdGEpLnBhcmVudHMoJ3RkJykuY3NzKCdiYWNrZ3JvdW5kLWNvbG9yJywgb2JqLmNlbGwuY29sb3IpOwogICAgICAgICAgICB9KTsKICAgICAgICB9CiAgICB9OwoKICAgIHZhciBlbmFibGVNZW51VG9vbHRpcHMgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgJCgiLmdyaWQtbWVudS10b29sdGlwIikubW91c2VvdmVyKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgdmFyICR0aGlzID0gJCh0aGlzKTsKICAgICAgICAgICAgdmFyIHRvb2x0aXBUZXh0ID0gJHRoaXMuYXR0cigiZGF0YS10aXRsZSIpOwogICAgICAgICAgICAkdGhpcy50b29sdGlwKHsKICAgICAgICAgICAgICAgIHRpdGxlOiB0b29sdGlwVGV4dCwKICAgICAgICAgICAgICAgIHBsYWNlbWVudDogImJvdHRvbSIKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICR0aGlzLnRvb2x0aXAoJ3Nob3cnKTsKICAgICAgICB9KTsKICAgIH07CgogICAgdmFyIHNvcnRJY29uSGFuZGxlciA9IGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgdGhBcnJheSA9ICQoJyNhbGVydHNEZXRhaWxzVGFibGUnKS5EYXRhVGFibGUoKS5jb2x1bW5zKCkuaGVhZGVyKCk7CiAgICAgICAgaWYgKGlzVmlld0luc3RhbmNlKSB7CiAgICAgICAgICAgIHZhciBjb2x1bW5OYW1lOwogICAgICAgICAgICB2YXIgaW5kZXhPZkNvbHVtbiA9IDA7CiAgICAgICAgICAgIGNvbHVtblNlcS5ldmVyeShmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICB2YXIgc2VxID0gY29sdW1uU2VxW2luZGV4T2ZDb2x1bW5dLnNlcTsKICAgICAgICAgICAgICAgIGlmIChpbmRleCA9PSBzZXEpIHsKICAgICAgICAgICAgICAgICAgICBjb2x1bW5OYW1lID0gY29sdW1uU2VxW2luZGV4T2ZDb2x1bW5dLm5hbWU7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgaW5kZXhPZkNvbHVtbisrOwogICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICB2YXIgY29sdW1uSW5kZXggPSAkKCcjYWxlcnRzRGV0YWlsc1RhYmxlJykuZmluZCgidGhbZGF0YS1maWVsZD0iICsgY29sdW1uTmFtZSArICJdIikuYXR0cignZGF0YS1jb2x1bW4taW5kZXgnKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBjb2x1bW5JbmRleCA9IGluZGV4OwogICAgICAgIH0KICAgICAgICAkLmVhY2godGhBcnJheSwgZnVuY3Rpb24gKGN1cnJlbnRJbmRleCwgZWxlbWVudCkgewogICAgICAgICAgICBpZiAoZWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoJ3NvcnRpbmdfYXNjJykpIHsKICAgICAgICAgICAgICAgIGVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgnc29ydGluZ19hc2MnKTsKICAgICAgICAgICAgICAgIGVsZW1lbnQuY2xhc3NMaXN0LmFkZCgic29ydGluZyIpOwogICAgICAgICAgICB9IGVsc2UgaWYgKGVsZW1lbnQuY2xhc3NMaXN0LmNvbnRhaW5zKCdzb3J0aW5nX2Rlc2MnKSkgewogICAgICAgICAgICAgICAgZWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKCdzb3J0aW5nX2Rlc2MnKTsKICAgICAgICAgICAgICAgIGVsZW1lbnQuY2xhc3NMaXN0LmFkZCgic29ydGluZyIpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChjdXJyZW50SW5kZXggPT0gY29sdW1uSW5kZXggJiYgIWVsZW1lbnQuY2xhc3NMaXN0LmNvbnRhaW5zKCdzb3J0aW5nX2Rpc2FibGVkJykpIHsKICAgICAgICAgICAgICAgIGlmIChkaXIgPT0gJ2FzYycpIHsKICAgICAgICAgICAgICAgICAgICBlbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoJ3NvcnRpbmcnKTsKICAgICAgICAgICAgICAgICAgICBlbGVtZW50LmNsYXNzTGlzdC5hZGQoInNvcnRpbmdfYXNjIik7CiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGRpciA9PSAnZGVzYycpIHsKICAgICAgICAgICAgICAgICAgICBlbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoJ3NvcnRpbmcnKTsKICAgICAgICAgICAgICAgICAgICBlbGVtZW50LmNsYXNzTGlzdC5hZGQoInNvcnRpbmdfZGVzYyIpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICB9OwoKICAgIC8qKgogICAgICogVGhlIHJlc2V0IG1vZGFsIHNjcmVlbiBmdW5jdGlvbiB3aGljaCByZXNldHMgdGhlIHBhc3N3b3JkIGRpdiBpbiB0aGUgd29ya2Zsb3cgbW9kYWwgc2NyZWVuLgogICAgICogVGhpcyBpcyBpbnRlcm5hbCBmdW5jdGlvbiB0byBiZSBjYWxsZWQgaW50ZXJuYWxseSBpbiB0aGlzIG9iamVjdCBzY29wZS4KICAgICAqLwogICAgdmFyIHJlc2V0TW9kYWxTY3JlZW4gPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgLy9DbGVhbiB1cCB0aGUgdGhlIGRpc3Bvc2l0aW9ucyBmaWVsZHMuCiAgICAgICAgJCgnI2VkaXQtc3RhdGUtbW9kYWwnKS5maW5kKCcjZXh0cmEtdmFsdWUtc2VsZWN0JykuaHRtbCgiPG9wdGlvbj48L29wdGlvbj4iKTsKICAgICAgICAvL0hpZGUgdGhlIHBhc3N3b3JkCiAgICAgICAgJCgnI2VkaXQtc3RhdGUtbW9kYWwnKS5maW5kKCcjcGFzc3dvcmREaXYnKS5hZGRDbGFzcygnaGlkZScpOwogICAgICAgICQoJyNlZGl0LXN0YXRlLW1vZGFsJykuZmluZCgnI2lzUGFzc3dvcmRFbmFibGVkJykudmFsKDApOwogICAgfQoKICAgIHZhciBzaG93UGFzc3dvcmRGaWVsZCA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAkKCcjZWRpdC1zdGF0ZS1tb2RhbCcpLmZpbmQoJyNwYXNzd29yZERpdicpLnJlbW92ZUNsYXNzKCdoaWRlJyk7CiAgICAgICAgJCgnI2VkaXQtc3RhdGUtbW9kYWwnKS5maW5kKCcjaXNQYXNzd29yZEVuYWJsZWQnKS52YWwoMSk7CiAgICB9CgogICAgdmFyIGNoYW5nZVdvcmtmbG93RWRpdFNjcmVlbiA9IGZ1bmN0aW9uIChhdmFpbGFibGVWYWx1ZXMsIHRhcmdldFZhbCkgewoKICAgICAgICB2YXIgYXZhaWxhYmxlVmFsT2JqID0gXy5maW5kV2hlcmUoYXZhaWxhYmxlVmFsdWVzLCB7dmFsdWU6IHRhcmdldFZhbH0pOwoKICAgICAgICBpZiAodHlwZW9mIGF2YWlsYWJsZVZhbE9iaiAhPSAndW5kZWZpbmVkJyAmJiBhdmFpbGFibGVWYWxPYmopIHsKICAgICAgICAgICAgaWYgKGF2YWlsYWJsZVZhbE9iai5hcHByb3ZhbFJlcXVpcmVkKSB7CiAgICAgICAgICAgICAgICBzaG93UGFzc3dvcmRGaWVsZCgpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmVzZXRNb2RhbFNjcmVlbigpOwogICAgICAgICAgICB9CgogICAgICAgICAgICAvL0NsZWFuIHVwIHRoZSB0aGUgZGlzcG9zaXRpb25zIGZpZWxkcwogICAgICAgICAgICAkKCcjZWRpdC1zdGF0ZS1tb2RhbCcpLmZpbmQoJyNleHRyYS12YWx1ZS1zZWxlY3QnKS5odG1sKCcnKQoKICAgICAgICAgICAgLy9GaWxsIHVwIHRoZSBkaXNwb3NpdGlvbnMgaW4gdGhlIGNvbWJvCiAgICAgICAgICAgICQoJyNlZGl0LXN0YXRlLW1vZGFsJykuZmluZCgnI2V4dHJhLXZhbHVlLXNlbGVjdCcpLmh0bWwoZ2V0RGlzcG9zaXRpb25PcHRpb25zKGF2YWlsYWJsZVZhbE9iaikpCiAgICAgICAgfQogICAgfQoKICAgIHZhciBnZXREaXNwb3NpdGlvbk9wdGlvbnMgPSBmdW5jdGlvbiAoYXZhaWxhYmxlVmFsT2JqKSB7CiAgICAgICAgdmFyIGRpc3Bvc2l0aW9uU3RyID0gIjxvcHRpb24+PC9vcHRpb24+IjsKICAgICAgICBfLmVhY2goYXZhaWxhYmxlVmFsT2JqLmRpc3Bvc2l0aW9ucywgZnVuY3Rpb24gKGRpc3Bvc2l0aW9uKSB7CiAgICAgICAgICAgIGRpc3Bvc2l0aW9uU3RyID0gZGlzcG9zaXRpb25TdHIgKwogICAgICAgICAgICAgICAgIjxvcHRpb24gdmFsdWU9XCIiICsgZGlzcG9zaXRpb24udmFsdWUgKyAiXCI+IiArIGRpc3Bvc2l0aW9uLmRpc3BsYXlOYW1lICsgIjwvb3B0aW9uPiIKICAgICAgICB9KQogICAgICAgIHJldHVybiBkaXNwb3NpdGlvblN0cgogICAgfQoKICAgIHZhciBhdXRoZW50aWNhdGVVc2VyID0gZnVuY3Rpb24gKCkgewogICAgICAgIHZhciByZXR1cm5WYWwgPSBmYWxzZQogICAgICAgIHZhciBwYXNzd29yZEpzb24gPSB7CiAgICAgICAgICAgICJwYXNzd29yZCI6ICQoJyNlZGl0LXN0YXRlLW1vZGFsJykuZmluZCgnI3Bhc3N3b3JkQXV0aGVudGljYXRpb24nKS52YWwoKQogICAgICAgIH0KCiAgICAgICAgdmFyIGF1dGhVcmwgPSAnL3NpZ25hbC91c2VyL2F1dGhlbnRpY2F0ZScKCiAgICAgICAgJC5hamF4KHsKICAgICAgICAgICAgdXJsOiBhdXRoVXJsLAogICAgICAgICAgICBkYXRhOiBwYXNzd29yZEpzb24sCiAgICAgICAgICAgIGFzeW5jOiBmYWxzZSwKICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlc3VsdCkgewogICAgICAgICAgICAgICAgaWYgKHJlc3VsdC5hdXRob3JpemVkKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuVmFsID0gdHJ1ZQogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm5WYWwgPSBmYWxzZQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgcmV0dXJuVmFsID0gZmFsc2UKICAgICAgICAgICAgfQogICAgICAgIH0pOwogICAgICAgIHJldHVybiByZXR1cm5WYWwKICAgIH0KCiAgICB2YXIgdG9nZ2xlRXJyb3JOb3RpZmljYXRpb24gPSBmdW5jdGlvbiAoYWN0aW9uKSB7CiAgICAgICAgaWYgKGFjdGlvbiA9PSAnaGlkZScpIHsKICAgICAgICAgICAgJCgnI2VkaXQtc3RhdGUtbW9kYWwgLmVycm9yTm90aWZpY2F0aW9uJykuYWRkQ2xhc3MoJ2hpZGUnKTsKICAgICAgICAgICAgJCgnI2VkaXQtc3RhdGUtbW9kYWwnKS5maW5kKCcuZXJyb3JNZXNzYWdlJykuaHRtbCgnJyk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgJCgnI2VkaXQtc3RhdGUtbW9kYWwgLmVycm9yTm90aWZpY2F0aW9uJykucmVtb3ZlQ2xhc3MoJ2hpZGUnKQogICAgICAgICAgICAkKCcjZWRpdC1zdGF0ZS1tb2RhbCcpLmZpbmQoJy5lcnJvck1lc3NhZ2UnKS5odG1sKCcgQXV0aGVudGljYXRpb24gRmFpbGVkIScpOwogICAgICAgIH0KICAgIH07CgogICAgdmFyIG9wZW5DYXNlSGlzdG9yeU1vZGFsID0gZnVuY3Rpb24gKCkgewoKICAgICAgICAvL0JpbmQgdGhlIGNsaWNrIGV2ZW50IG9uIHRoZSBjYXNlIGhpc3RvcnkgaWNvbi4KICAgICAgICAkKGRvY3VtZW50KS5vbignY2xpY2snLCAnLmNhc2UtaGlzdG9yeS1pY29uJywgZnVuY3Rpb24gKGV2ZW50KSB7CiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgICAgIHZhciBwYXJlbnRfcm93ID0gJChldmVudC50YXJnZXQpLmNsb3Nlc3QoJ3RyJyk7CiAgICAgICAgICAgIHZhciBzZWxlY3RlZFJvd0luZGV4ID0gJCh0aGlzKS5jbG9zZXN0KCd0cicpLmluZGV4KCk7CiAgICAgICAgICAgIGlmIChpc0Fic3RyYWN0Vmlld09yQ2FzZVZpZXcoc2VsZWN0ZWRSb3dJbmRleCkpIHsKICAgICAgICAgICAgICAgIHNlbGVjdGVkUm93SW5kZXggPSBzZWxlY3RlZFJvd0luZGV4IC8gMgogICAgICAgICAgICB9CiAgICAgICAgICAgIHZhciBpc1NpZ25hbCA9ICQodGhpcykuZGF0YSgnc2lnbmFsJyk7CgogICAgICAgICAgICB2YXIgcm93T2JqZWN0ID0ge307CiAgICAgICAgICAgIGlmICghaXNTaWduYWwpIHsKICAgICAgICAgICAgICAgIHJvd09iamVjdCA9IHRhYmxlLnJvd3Moc2VsZWN0ZWRSb3dJbmRleCkuZGF0YSgpWzBdOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcm93T2JqZWN0ID0gdGFibGVTaW5nbGVSZXZpZXcucm93KCQodGhpcykucGFyZW50cygndHInKSkuZGF0YSgpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHZhciBjYXNlTnVtYmVyID0gcm93T2JqZWN0LmNhc2VOdW1iZXI7CiAgICAgICAgICAgIHZhciBwcm9kdWN0RmFtaWx5ID0gcm93T2JqZWN0LnByb2R1Y3RGYW1pbHk7CiAgICAgICAgICAgIHZhciBjYXNlVmVyc2lvbiA9IHJvd09iamVjdC5jYXNlVmVyc2lvbjsKICAgICAgICAgICAgdmFyIHByb2R1Y3ROYW1lID0gcm93T2JqZWN0LnByb2R1Y3ROYW1lOwogICAgICAgICAgICB2YXIgcHQgPSByb3dPYmplY3QucHJpbWFyeUV2ZW50OwogICAgICAgICAgICB2YXIgYWxlcnRDb25maWdJZCA9IHJvd09iamVjdC5hbGVydENvbmZpZ0lkOwoKICAgICAgICAgICAgdmFyIGNhc2VIaXN0b3J5TW9kYWwgPSAkKCcjY2FzZUhpc3RvcnlNb2RhbCcpOwogICAgICAgICAgICBjYXNlSGlzdG9yeU1vZGFsLmZpbmQoIiNjYXNlTnVtYmVyIikuaHRtbChjYXNlTnVtYmVyKTsKICAgICAgICAgICAgY2FzZUhpc3RvcnlNb2RhbC5maW5kKCIjcHJvZHVjdEZhbWlseSIpLmh0bWwocHJvZHVjdEZhbWlseSk7CiAgICAgICAgICAgIGNhc2VIaXN0b3J5TW9kYWwuZmluZCgiI2Nhc2VWZXJzaW9uIikudmFsKGNhc2VWZXJzaW9uKTsKICAgICAgICAgICAgY2FzZUhpc3RvcnlNb2RhbC5maW5kKCIjcHJvZHVjdE5hbWUiKS52YWwocHJvZHVjdE5hbWUpOwogICAgICAgICAgICBjYXNlSGlzdG9yeU1vZGFsLmZpbmQoIiNhbGVydENvbmZpZ0lkIikudmFsKGFsZXJ0Q29uZmlnSWQpOwogICAgICAgICAgICBjYXNlSGlzdG9yeU1vZGFsLmZpbmQoIiNwdCIpLnZhbChwdCk7CiAgICAgICAgICAgIGNhc2VIaXN0b3J5TW9kYWwubW9kYWwoJ3Nob3cnKTsKCiAgICAgICAgICAgIGlmKHR5cGVvZiBzaW5nbGVDYXNlVXBkYXRlSnVzdGlmaWNhdGlvblVybCAhPSAndW5kZWZpbmVkJykKICAgICAgICAgICAgICAgIHVwZGF0ZUp1c3RpZmljYXRpb25VcmwgPSBzaW5nbGVDYXNlVXBkYXRlSnVzdGlmaWNhdGlvblVybDsKCiAgICAgICAgICAgIHNpZ25hbC5jYXNlSGlzdG9yeVRhYmxlLmluaXRfY2FzZV9oaXN0b3J5X3RhYmxlKGNhc2VIaXN0b3J5VXJsKTsKICAgICAgICAgICAgc2lnbmFsLmNhc2VIaXN0b3J5VGFibGUuaW5pdF9jYXNlX2hpc3RvcnlfdGFibGVfc3VzcGVjdChjYXNlSGlzdG9yeVN1c3BlY3RVcmwpOwogICAgICAgIH0pOwogICAgfTsKCiAgICB2YXIgb3BlbkFsZXJ0Q29tbWVudE1vZGFsID0gZnVuY3Rpb24gKGFsZXJ0VHlwZSwgYXBwbGljYXRpb25OYW1lKSB7CgogICAgICAgIC8vTW9kYWwgb2JqZWN0CiAgICAgICAgdmFyIGNvbW1lbnRNb2RhbCA9ICQoJyNjb21tZW50TW9kYWwnKTsKICAgICAgICAkKGRvY3VtZW50KS5vbignY2xpY2snLCAnLmNvbW1lbnQtaWNvbicsIGZ1bmN0aW9uIChldmVudCkgewogICAgICAgICAgICB2YXIgJHRoaXMgPSB0aGlzOwogICAgICAgICAgICB2YXIgZGF0YUluZm87CiAgICAgICAgICAgIHZhciBpc0Nhc2VEZXRhaWw7CiAgICAgICAgICAgIHZhciBhcHBUeXBlOwogICAgICAgICAgICB2YXIgdmFsaWRhdGVkU2lnbmFsSWQ7CiAgICAgICAgICAgIHZhciBjb21tZW50QWxlcnRUeXBlID0gJCgkdGhpcykuZGF0YSgnbmFtZScpOwogICAgICAgICAgICB2YXIgaXNTaWduYWwgPSAkKCR0aGlzKS5kYXRhKCdzaWduYWwnKTsKCiAgICAgICAgICAgIGlmIChjb21tZW50QWxlcnRUeXBlICE9PSB1bmRlZmluZWQpIHsKICAgICAgICAgICAgICAgIGFsZXJ0VHlwZSA9IGNvbW1lbnRBbGVydFR5cGU7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsKICAgICAgICAgICAgdmFyIGNhc2VKc29uQXJyYXkgPSBbXTsKICAgICAgICAgICAgZGF0YUluZm8gPSAkKGV2ZW50LnRhcmdldCkuYXR0cignZGF0YS1pbmZvJyk7CiAgICAgICAgICAgIGlzQ2FzZURldGFpbCA9ICQoZXZlbnQudGFyZ2V0KS5hdHRyKCdkYXRhLWNvbW1lbnQnKTsKCiAgICAgICAgICAgIGFwcFR5cGUgPSAkKCIjYXBwbGljYXRpb24iKS5odG1sKCk7CiAgICAgICAgICAgIGlmIChhcHBUeXBlID09PSAnJykgewogICAgICAgICAgICAgICAgYXBwVHlwZSA9IGNvbW1lbnRNb2RhbC5maW5kKCIjYXBwbGljYXRpb24iKS5odG1sKCk7CiAgICAgICAgICAgICAgICB2YWxpZGF0ZWRTaWduYWxJZCA9IGNvbW1lbnRNb2RhbC5maW5kKCIjdmFsaWRhdGVkU2lnbmFsSWQiKS5odG1sKCkKICAgICAgICAgICAgfQoKICAgICAgICAgICAgdmFyIHNlbGVjdGVkUm93Q291bnQ7CiAgICAgICAgICAgIGlmICgkKCcjZGV0YWlsZWQtdmlldy1jaGVja2JveCcpLmlzKCc6Y2hlY2tlZCcpKSB7CiAgICAgICAgICAgICAgICBzZWxlY3RlZFJvd0NvdW50ID0gJCgndGFibGUjYWxlcnRzRGV0YWlsc1RhYmxlIC5jb3B5LXNlbGVjdDpjaGVja2VkJykubGVuZ3RoOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgc2VsZWN0ZWRSb3dDb3VudCA9ICQoJ3RhYmxlLkRURkNfQ2xvbmVkIC5jb3B5LXNlbGVjdDpjaGVja2VkJykubGVuZ3RoOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChzZWxlY3RlZFJvd0NvdW50ID4gMSAmJiAkKCR0aGlzKS5jbG9zZXN0KCd0cicpLmZpbmQoIi5jb3B5LXNlbGVjdCIpLnByb3AoImNoZWNrZWQiKSkgewogICAgICAgICAgICAgICAgdmFyIHRleHRUb0Rpc3BsYXk7CiAgICAgICAgICAgICAgICBzd2l0Y2ggKGFwcGxpY2F0aW9uTmFtZSkgewogICAgICAgICAgICAgICAgICAgIGNhc2UgJ1NpbmdsZSBDYXNlIEFsZXJ0JzoKICAgICAgICAgICAgICAgICAgICAgICAgdGV4dFRvRGlzcGxheSA9ICdDYXNlJzsKICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgICAgY2FzZSAnQWdncmVnYXRlIENhc2UgQWxlcnQnOgogICAgICAgICAgICAgICAgICAgICAgICB0ZXh0VG9EaXNwbGF5ID0gJ1BFQyc7CiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICAgIGNhc2UgJ0VWREFTIEFsZXJ0JzoKICAgICAgICAgICAgICAgICAgICAgICAgdGV4dFRvRGlzcGxheSA9ICdQRUMnOwogICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICBjYXNlICdMaXRlcmF0dXJlIFNlYXJjaCBBbGVydCc6CiAgICAgICAgICAgICAgICAgICAgICAgIHRleHRUb0Rpc3BsYXkgPSAnQXJ0aWNsZSc7CiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgJChjb21tZW50TW9kYWwpLmZpbmQoJ2Rpdi5idWxrT3B0aW9uc1NlY3Rpb24nKS5zaG93KCk7CiAgICAgICAgICAgICAgICAkKGNvbW1lbnRNb2RhbCkuZmluZCgnZGl2LmJ1bGtPcHRpb25zU2VjdGlvbiBzcGFuLmFsZXJ0VHlwZVRleHQnKS5odG1sKHRleHRUb0Rpc3BsYXkpOwogICAgICAgICAgICAgICAgJChjb21tZW50TW9kYWwpLmZpbmQoJ2Rpdi5idWxrT3B0aW9uc1NlY3Rpb24gc3Bhbi5jb3VudCcpLmh0bWwoc2VsZWN0ZWRSb3dDb3VudCk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAkKGNvbW1lbnRNb2RhbCkuZmluZCgnZGl2LmJ1bGtPcHRpb25zU2VjdGlvbicpLmhpZGUoKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgJCgnZGl2LmJ1bGtPcHRpb25zU2VjdGlvbiBpbnB1dFtuYW1lPWJ1bGtPcHRpb25zXScpLnVuYmluZCgpLm9uKCdjaGFuZ2UnLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICBzd2l0Y2ggKCQodGhpcykudmFsKCkpIHsKICAgICAgICAgICAgICAgICAgICBjYXNlICdhbGxTZWxlY3RlZCc6CiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2VKc29uQXJyYXkgPSBbXTsKICAgICAgICAgICAgICAgICAgICAgICAgaW5pdGlhdGVTaW5nbGVCdWxrUm93Q29tbWVudFByb2Nlc3MoY2FzZUpzb25BcnJheSwgY29tbWVudE1vZGFsLCBhbGVydFR5cGUsIGlzQ2FzZURldGFpbCwgaXNTaWduYWwpOwogICAgICAgICAgICAgICAgICAgICAgICBiaW5kQWRkQ29tbWVudHMoY29tbWVudE1vZGFsLCBjYXNlSnNvbkFycmF5LCAiYnVsayIsIGFsZXJ0VHlwZSwgdmFsaWRhdGVkU2lnbmFsSWQsIGlzQ2FzZURldGFpbCk7CiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICAgIGNhc2UgJ2N1cnJlbnQnOgogICAgICAgICAgICAgICAgICAgICAgICBjYXNlSnNvbkFycmF5ID0gW107CiAgICAgICAgICAgICAgICAgICAgICAgIGluaXRpYXRlU2luZ2xlUm93Q29tbWVudFByb2Nlc3MoJHRoaXMsIGNhc2VKc29uQXJyYXksIGNvbW1lbnRNb2RhbCwgYWxlcnRUeXBlLCBpc0Nhc2VEZXRhaWwsIGlzU2lnbmFsKTsKICAgICAgICAgICAgICAgICAgICAgICAgYmluZEFkZENvbW1lbnRzKGNvbW1lbnRNb2RhbCwgY2FzZUpzb25BcnJheSwgInJvdyIsIGFsZXJ0VHlwZSwgdmFsaWRhdGVkU2lnbmFsSWQsIGlzQ2FzZURldGFpbCk7CiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGlmIChkYXRhSW5mbyA9PT0gInJvdyIpIHsKICAgICAgICAgICAgICAgIGluaXRpYXRlU2luZ2xlUm93Q29tbWVudFByb2Nlc3MoJHRoaXMsIGNhc2VKc29uQXJyYXksIGNvbW1lbnRNb2RhbCwgYWxlcnRUeXBlLCBpc0Nhc2VEZXRhaWwsIGlzU2lnbmFsKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgY29tbWVudE1vZGFsLm1vZGFsKCdzaG93Jyk7CiAgICAgICAgICAgIGJpbmRBZGRDb21tZW50cyhjb21tZW50TW9kYWwsIGNhc2VKc29uQXJyYXksIGRhdGFJbmZvLCBhbGVydFR5cGUsIHZhbGlkYXRlZFNpZ25hbElkLCBpc0Nhc2VEZXRhaWwsICR0aGlzKQogICAgICAgIH0pCiAgICB9OwoKICAgIHZhciBiaW5kQWRkQ29tbWVudHMgPSBmdW5jdGlvbiAoY29tbWVudE1vZGFsLCBjYXNlSnNvbkFycmF5LCBkYXRhSW5mbywgYWxlcnRUeXBlLCB2YWxpZGF0ZWRTaWduYWxJZCwgaXNDYXNlRGV0YWlsLCBjdXJyZW50Um93KSB7CiAgICAgICAgY29tbWVudE1vZGFsLmZpbmQoIi5hZGQtY29tbWVudHMiKS51bmJpbmQoKS5jbGljayhmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHZhciBjYXNlSnNvbjsKICAgICAgICAgICAgdmFyIGNhc2VKc29uT2JqOwogICAgICAgICAgICB2YXIgZGF0YTsKICAgICAgICAgICAgdmFyIHVybDsKICAgICAgICAgICAgdmFyICR0aGlzID0gdGhpczsKICAgICAgICAgICAgdmFyIGNhc2VKc29uT2JqQXJyYXkgPSBbXTsKICAgICAgICAgICAgaWYgKGRhdGFJbmZvID09PSAicm93IikgewogICAgICAgICAgICAgICAgY2FzZUpzb24gPSBjYXNlSnNvbkFycmF5WzBdOwoKICAgICAgICAgICAgICAgIGlmIChjb21tZW50TW9kYWwuZmluZCgiI2NvbW1lbnRJZCIpLnZhbCgpKSB7CiAgICAgICAgICAgICAgICAgICAgZGF0YSA9IHsKICAgICAgICAgICAgICAgICAgICAgICAgImFsZXJ0VHlwZSI6IGFsZXJ0VHlwZSwKICAgICAgICAgICAgICAgICAgICAgICAgImNvbW1lbnQiOiBjb21tZW50TW9kYWwuZmluZCgiI2NvbW1lbnRib3giKS52YWwoKSwKICAgICAgICAgICAgICAgICAgICAgICAgImlkIjogY29tbWVudE1vZGFsLmZpbmQoIiNjb21tZW50SWQiKS52YWwoKSwKICAgICAgICAgICAgICAgICAgICAgICAgInZhbGlkYXRlZFNpZ25hbElkIjogdmFsaWRhdGVkU2lnbmFsSWQsCiAgICAgICAgICAgICAgICAgICAgICAgICJ0b3BpY0lkIjogJCgiI3RvcGljSWQiKS5odG1sKCksCiAgICAgICAgICAgICAgICAgICAgICAgICJleGVjdXRlZENvbmZpZ0lkIjogY2FzZUpzb24uZXhlY3V0ZWRDb25maWdJZCwKICAgICAgICAgICAgICAgICAgICAgICAgImFkaG9jQWxlcnRJZCI6IGNhc2VKc29uLmFkaG9jQWxlcnRJZCwKICAgICAgICAgICAgICAgICAgICAgICAgImNvbmZpZ0lkIjogY2FzZUpzb24uY29uZmlnSWQsCiAgICAgICAgICAgICAgICAgICAgICAgICJsaXRlcmF0dXJlQWxlcnRJZCI6IGNhc2VKc29uLmxpdGVyYXR1cmVBbGVydElkCiAgICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgICAgICBpZihkYXRhLmNvbW1lbnQ9PSIiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHVybCA9ICIvc2lnbmFsL2FsZXJ0Q29tbWVudC9kZWxldGVDb21tZW50IjsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHVybCA9ICIvc2lnbmFsL2FsZXJ0Q29tbWVudC91cGRhdGVDb21tZW50IjsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIHVybCA9ICIvc2lnbmFsL2FsZXJ0Q29tbWVudC9zYXZlQ29tbWVudCI7CgogICAgICAgICAgICAgICAgICAgIGNhc2VKc29uT2JqID0gewogICAgICAgICAgICAgICAgICAgICAgICAiYWxlcnRUeXBlIjogYWxlcnRUeXBlLAogICAgICAgICAgICAgICAgICAgICAgICAicHJvZHVjdE5hbWUiOiBjYXNlSnNvbi5wcm9kdWN0TmFtZSwKICAgICAgICAgICAgICAgICAgICAgICAgImV2ZW50TmFtZSI6IGNhc2VKc29uLmV2ZW50TmFtZSwKICAgICAgICAgICAgICAgICAgICAgICAgInB0IjogY2FzZUpzb24ucHQsCiAgICAgICAgICAgICAgICAgICAgICAgICJjb21tZW50cyI6IGNvbW1lbnRNb2RhbC5maW5kKCIjY29tbWVudGJveCIpLnZhbCgpLAogICAgICAgICAgICAgICAgICAgICAgICAiY2FzZU51bWJlciI6IGNhc2VKc29uLmNhc2VOdW1iZXIsCiAgICAgICAgICAgICAgICAgICAgICAgICJwcm9kdWN0RmFtaWx5IjogY2FzZUpzb24ucHJvZHVjdEZhbWlseSwKICAgICAgICAgICAgICAgICAgICAgICAgInZhbGlkYXRlZFNpZ25hbElkIjogdmFsaWRhdGVkU2lnbmFsSWQsCiAgICAgICAgICAgICAgICAgICAgICAgICJ0b3BpY0lkIjogY29tbWVudE1vZGFsLmZpbmQoIiN0b3BpY0lkIikuaHRtbCgpLAogICAgICAgICAgICAgICAgICAgICAgICAiYXNzaWduZWRUbyI6IGNhc2VKc29uLmFzc2lnbmVkVG8sCiAgICAgICAgICAgICAgICAgICAgICAgICJhZGhvY0FsZXJ0SWQiOiBjYXNlSnNvbi5hZGhvY0FsZXJ0SWQsCiAgICAgICAgICAgICAgICAgICAgICAgICJleGVjdXRlZENvbmZpZ0lkIjogY2FzZUpzb24uZXhlY3V0ZWRDb25maWdJZCwKICAgICAgICAgICAgICAgICAgICAgICAgInByb2R1Y3RJZCI6IGNhc2VKc29uLnByb2R1Y3RJZCwKICAgICAgICAgICAgICAgICAgICAgICAgInB0Q29kZSI6IGNhc2VKc29uLnB0Q29kZSwKICAgICAgICAgICAgICAgICAgICAgICAgImNvbmZpZ0lkIjogY2FzZUpzb24uY29uZmlnSWQsCiAgICAgICAgICAgICAgICAgICAgICAgICJsaXRlcmF0dXJlQWxlcnRJZCI6IGNhc2VKc29uLmxpdGVyYXR1cmVBbGVydElkLAogICAgICAgICAgICAgICAgICAgICAgICAiYXJ0aWNsZUlkIjogY2FzZUpzb24uYXJ0aWNsZUlkCiAgICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgICAgICBjYXNlSnNvbk9iakFycmF5LnB1c2goY2FzZUpzb25PYmopOwogICAgICAgICAgICAgICAgICAgIGRhdGEgPSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2VKc29uT2JqQXJyYXk6IEpTT04uc3RyaW5naWZ5KGNhc2VKc29uT2JqQXJyYXkpCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgdXJsID0gIi9zaWduYWwvYWxlcnRDb21tZW50L3NhdmVDb21tZW50IjsKICAgICAgICAgICAgICAgIHZhciBzZWxlY3RlZFJvd0NvdW50OwogICAgICAgICAgICAgICAgaWYgKCQoJyNkZXRhaWxlZC12aWV3LWNoZWNrYm94JykuaXMoJzpjaGVja2VkJykpIHsKICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZFJvd0NvdW50ID0gJCgndGFibGUjYWxlcnRzRGV0YWlsc1RhYmxlIC5jb3B5LXNlbGVjdDpjaGVja2VkJykubGVuZ3RoOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZFJvd0NvdW50ID0gJCgndGFibGUuRFRGQ19DbG9uZWQgLmNvcHktc2VsZWN0OmNoZWNrZWQnKS5sZW5ndGg7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBmb3IgKHZhciBpbmRleCA9IDA7IGluZGV4IDwgc2VsZWN0ZWRSb3dDb3VudDsgaW5kZXgrKykgewogICAgICAgICAgICAgICAgICAgIHZhbGlkYXRlZFNpZ25hbElkID0gJCgiI3ZhbGlkYXRlZFNpZ25hbElkIikuaHRtbCgpOwogICAgICAgICAgICAgICAgICAgIGNhc2VKc29uID0gY2FzZUpzb25BcnJheVtpbmRleF07CgogICAgICAgICAgICAgICAgICAgIC8vQ2FzZSBKU09OLgogICAgICAgICAgICAgICAgICAgIGNhc2VKc29uT2JqID0gewogICAgICAgICAgICAgICAgICAgICAgICAiYWxlcnRUeXBlIjogYWxlcnRUeXBlLAogICAgICAgICAgICAgICAgICAgICAgICAicHJvZHVjdE5hbWUiOiBjYXNlSnNvbi5wcm9kdWN0TmFtZSwKICAgICAgICAgICAgICAgICAgICAgICAgImV2ZW50TmFtZSI6IGNhc2VKc29uLmV2ZW50TmFtZSwKICAgICAgICAgICAgICAgICAgICAgICAgInB0IjogY2FzZUpzb24ucHQsCiAgICAgICAgICAgICAgICAgICAgICAgICJjb21tZW50cyI6IGNvbW1lbnRNb2RhbC5maW5kKCIjY29tbWVudGJveCIpLnZhbCgpLAogICAgICAgICAgICAgICAgICAgICAgICAiY2FzZU51bWJlciI6IGNhc2VKc29uLmNhc2VOdW1iZXIsCiAgICAgICAgICAgICAgICAgICAgICAgICJwcm9kdWN0RmFtaWx5IjogY2FzZUpzb24ucHJvZHVjdEZhbWlseSwKICAgICAgICAgICAgICAgICAgICAgICAgInZhbGlkYXRlZFNpZ25hbElkIjogdmFsaWRhdGVkU2lnbmFsSWQsCiAgICAgICAgICAgICAgICAgICAgICAgICJ0b3BpY0lkIjogY29tbWVudE1vZGFsLmZpbmQoIiN0b3BpY0lkIikuaHRtbCgpLAogICAgICAgICAgICAgICAgICAgICAgICAiYXNzaWduZWRUbyI6IGNhc2VKc29uLmFzc2lnbmVkVG8sCiAgICAgICAgICAgICAgICAgICAgICAgICJhZGhvY0FsZXJ0SWQiOiBjYXNlSnNvbi5hZGhvY0FsZXJ0SWQsCiAgICAgICAgICAgICAgICAgICAgICAgICJwcm9kdWN0SWQiOiBjYXNlSnNvbi5wcm9kdWN0SWQsCiAgICAgICAgICAgICAgICAgICAgICAgICJwdENvZGUiOiBjYXNlSnNvbi5wdENvZGUsCiAgICAgICAgICAgICAgICAgICAgICAgICJjb25maWdJZCI6IGNhc2VKc29uLmNvbmZpZ0lkLAogICAgICAgICAgICAgICAgICAgICAgICAibGl0ZXJhdHVyZUFsZXJ0SWQiOiBjYXNlSnNvbi5saXRlcmF0dXJlQWxlcnRJZCwKICAgICAgICAgICAgICAgICAgICAgICAgImFydGljbGVJZCI6IGNhc2VKc29uLmFydGljbGVJZCwKICAgICAgICAgICAgICAgICAgICAgICAgImV4ZWN1dGVkQ29uZmlnSWQiOiBjYXNlSnNvbi5leGVjdXRlZENvbmZpZ0lkCiAgICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgICAgICBjYXNlSnNvbk9iakFycmF5LnB1c2goY2FzZUpzb25PYmopCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBkYXRhID0gewogICAgICAgICAgICAgICAgICAgIGNhc2VKc29uT2JqQXJyYXk6IEpTT04uc3RyaW5naWZ5KGNhc2VKc29uT2JqQXJyYXkpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC8vU2F2ZSBjb21tZW50IGNhbGwKICAgICAgICAgICAgJC5hamF4KHsKICAgICAgICAgICAgICAgIHVybDogdXJsLAogICAgICAgICAgICAgICAgZGF0YTogZGF0YSwKICAgICAgICAgICAgICAgIHR5cGU6ICJQT1NUIiwKICAgICAgICAgICAgICAgIGFzeW5jOiBmYWxzZSwKICAgICAgICAgICAgICAgIGJlZm9yZVNlbmQ6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgICBjb21tZW50TW9kYWwuZmluZCgiaS5pc1Byb2Nlc3NpbmciKS5zaG93KCk7CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlc3VsdCkgewogICAgICAgICAgICAgICAgICAgIGNvbW1lbnRNb2RhbC5maW5kKCJpLmlzUHJvY2Vzc2luZyIpLmhpZGUoKTsKICAgICAgICAgICAgICAgICAgICAvL1BvcHVsYXRlIHRoZSBjb21tZW50cyBhZ2FpbiBpZiBzaW5nbGUgY29tbWVudCBpcyBhZGRlZC4KICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGlzQ2FzZURldGFpbCAhPT0gJ3VuZGVmaW5lZCcpIHsKICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpOwogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGlmIChkYXRhSW5mbyA9PT0gInJvdyIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgc2lnbmFsLmFsZXJ0Q29tbWVudHMucG9wdWxhdGVfY29tbWVudHMoY29tbWVudE1vZGFsLCBjYXNlSnNvbik7CiAgICAgICAgICAgICAgICAgICAgICAgICQoJyNjb21tZW50Ym94JykudmFsKCcnKS5ibHVyKCk7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXRhLmNvbW1lbnQgIT0gIiIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNob3dDb21tZW50SWNvbihjdXJyZW50Um93KSA7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZW1vdmVDb21tZW50SWNvbihjdXJyZW50Um93KSA7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgY29tbWVudE1vZGFsLm1vZGFsKCJoaWRlIik7CiAgICAgICAgICAgICAgICAgICAgICAgICQoJ2JvZHknKS5yZW1vdmVDbGFzcygnbW9kYWwtb3BlbicpOwogICAgICAgICAgICAgICAgICAgICAgICAkKCcubW9kYWwtYmFja2Ryb3AnKS5yZW1vdmUoKTsKICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGNoZWNrYm94U2VsZWN0b3I7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkKCcjZGV0YWlsZWQtdmlldy1jaGVja2JveCcpLmlzKCc6Y2hlY2tlZCcpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGVja2JveFNlbGVjdG9yID0gJ3RhYmxlI2FsZXJ0c0RldGFpbHNUYWJsZSAuY29weS1zZWxlY3Q6Y2hlY2tlZCc7CiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGVja2JveFNlbGVjdG9yID0gJ3RhYmxlLkRURkNfQ2xvbmVkIC5jb3B5LXNlbGVjdDpjaGVja2VkJzsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAkLmVhY2goJChjaGVja2JveFNlbGVjdG9yKSwgZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvd0NvbW1lbnRJY29uKHRoaXMpOwogICAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgJC5Ob3RpZmljYXRpb24ubm90aWZ5KCdzdWNjZXNzJywgJ3RvcCByaWdodCcsICJTdWNjZXNzIiwgIkNvbW1lbnRzIGFkZGVkIHN1Y2Nlc3NmdWxseS4iLCB7YXV0b0hpZGVEZWxheTogMTAwMDB9KTsKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICB9KQogICAgfTsKCiAgICB2YXIgaW5pdGlhdGVTaW5nbGVSb3dDb21tZW50UHJvY2VzcyA9IGZ1bmN0aW9uICgkdGhpcywgY2FzZUpzb25BcnJheSwgY29tbWVudE1vZGFsLCBhbGVydFR5cGUsIGlzQ2FzZURldGFpbCwgaXNTaWduYWwpIHsKICAgICAgICB2YXIgYWRob2NBbGVydElkOwogICAgICAgIHZhciBsaXRlcmF0dXJlQWxlcnRJZDsKICAgICAgICB2YXIgYXJ0aWNsZUlkOwoKICAgICAgICB2YXIgcm93T2JqZWN0ID0ge307CiAgICAgICAgaWYgKChhbGVydFR5cGUgPT09ICdBZ2dyZWdhdGUgQ2FzZSBBbGVydCcgfHwgYWxlcnRUeXBlID09PSAnU2luZ2xlIENhc2UgQWxlcnQnIHx8IGFsZXJ0VHlwZSA9PT0gJ0VWREFTIEFsZXJ0JyB8fCBhbGVydFR5cGUgPT09ICdMaXRlcmF0dXJlIFNlYXJjaCBBbGVydCcpICYmICFpc1NpZ25hbCkgewogICAgICAgICAgICB2YXIgc2VsZWN0ZWRSb3dJbmRleCA9ICQoJHRoaXMpLmNsb3Nlc3QoJ3RyJykuaW5kZXgoKTsKICAgICAgICAgICAgaWYgKGlzQWJzdHJhY3RWaWV3T3JDYXNlVmlldyhzZWxlY3RlZFJvd0luZGV4KSkgewogICAgICAgICAgICAgICAgc2VsZWN0ZWRSb3dJbmRleCA9IHNlbGVjdGVkUm93SW5kZXggLyAyCiAgICAgICAgICAgIH0KICAgICAgICAgICAgcm93T2JqZWN0ID0gdGFibGUucm93KHNlbGVjdGVkUm93SW5kZXgpLmRhdGEoKTsKICAgICAgICB9IGVsc2UgaWYgKGFsZXJ0VHlwZSA9PT0gJ0FnZ3JlZ2F0ZSBDYXNlIEFsZXJ0JykgewogICAgICAgICAgICByb3dPYmplY3QgPSB0YWJsZUFnZ1Jldmlldy5yb3coJCgkdGhpcykucGFyZW50cygndHInKSkuZGF0YSgpOwogICAgICAgIH0gZWxzZSBpZiAoYWxlcnRUeXBlID09PSAnTGl0ZXJhdHVyZSBTZWFyY2ggQWxlcnQnKSB7CiAgICAgICAgICAgIHJvd09iamVjdCA9IHRhYmxlTGl0ZXJhdHVyZVJldmlldy5yb3coJCgkdGhpcykucGFyZW50cygndHInKSkuZGF0YSgpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHJvd09iamVjdCA9IHRhYmxlU2luZ2xlUmV2aWV3LnJvdygkKCR0aGlzKS5wYXJlbnRzKCd0cicpKS5kYXRhKCk7CiAgICAgICAgfQoKICAgICAgICB2YXIgY2FzZU51bWJlciA9IHJvd09iamVjdC5jYXNlTnVtYmVyOwogICAgICAgIHZhciBwcm9kdWN0RmFtaWx5ID0gcm93T2JqZWN0LnByb2R1Y3RGYW1pbHk7CiAgICAgICAgdmFyIGNhc2VWZXJzaW9uID0gcm93T2JqZWN0LmNhc2VWZXJzaW9uOwogICAgICAgIHZhciBwcm9kdWN0TmFtZSA9IHJvd09iamVjdC5wcm9kdWN0TmFtZTsKICAgICAgICB2YXIgZXZlbnROYW1lID0gcm93T2JqZWN0LnByZWZlcnJlZFRlcm07CiAgICAgICAgdmFyIHB0ID0gcm93T2JqZWN0LnB0OwogICAgICAgIHZhciBhc3NpZ25lZFRvID0gcm93T2JqZWN0LmFzc2lnbmVkVG8uaWQ7CiAgICAgICAgdmFyIGFzc2lnbmVkVG9Vc2VyID0gcm93T2JqZWN0LmFzc2lnbmVkVG9Vc2VyLmlkOwogICAgICAgIHZhciBwcm9kdWN0SWQgPSByb3dPYmplY3QucHJvZHVjdElkOwogICAgICAgIHZhciBwdENvZGUgPSByb3dPYmplY3QucHRDb2RlOwogICAgICAgIHZhciBjb25maWdJZCA9IHJvd09iamVjdC5hbGVydENvbmZpZ0lkOwogICAgICAgIHZhciBleGVjdXRlZENvbmZpZ0lkID0gcm93T2JqZWN0LmV4ZWNDb25maWdJZDsKCiAgICAgICAgaWYgKGFsZXJ0VHlwZSA9PT0gc2lnbmFsQWxlcnRUeXBlLkFESE9DX0FMRVJUKSB7CiAgICAgICAgICAgIGFkaG9jQWxlcnRJZCA9IHJvd09iamVjdC5pZDsKICAgICAgICB9IGVsc2UgaWYgKGFsZXJ0VHlwZSA9PT0gc2lnbmFsQWxlcnRUeXBlLkxJVEVSQVRVUkVfU0VBUkNIX0FMRVJUKSB7CiAgICAgICAgICAgIGxpdGVyYXR1cmVBbGVydElkID0gcm93T2JqZWN0LmlkOwogICAgICAgICAgICBhcnRpY2xlSWQgPSByb3dPYmplY3QuYXJ0aWNsZUlkCiAgICAgICAgfQogICAgICAgIHZhciBjYXNlSnNvbiA9IHsKICAgICAgICAgICAgImFsZXJ0VHlwZSI6IGFsZXJ0VHlwZSwKICAgICAgICAgICAgInByb2R1Y3RGYW1pbHkiOiBwcm9kdWN0RmFtaWx5LAogICAgICAgICAgICAiY2FzZU51bWJlciI6IGNhc2VOdW1iZXIsCiAgICAgICAgICAgICJwcm9kdWN0TmFtZSI6IHByb2R1Y3ROYW1lLAogICAgICAgICAgICAiZXZlbnROYW1lIjogZXZlbnROYW1lLAogICAgICAgICAgICAicHQiOiBwdCwKICAgICAgICAgICAgInB0Q29kZSI6IHB0Q29kZSwKICAgICAgICAgICAgInByb2R1Y3RJZCI6IHByb2R1Y3RJZCwKICAgICAgICAgICAgImFzc2lnbmVkVG8iOiBhc3NpZ25lZFRvID8gYXNzaWduZWRUbyA6IGFzc2lnbmVkVG9Vc2VyLAogICAgICAgICAgICAiZXhlY3V0ZWRDb25maWdJZCI6IGV4ZWN1dGVkQ29uZmlnSWQsCiAgICAgICAgICAgICJjb25maWdJZCI6IGNvbmZpZ0lkLAogICAgICAgICAgICAiYWRob2NBbGVydElkIjogYWRob2NBbGVydElkLAogICAgICAgICAgICAibGl0ZXJhdHVyZUFsZXJ0SWQiOiBsaXRlcmF0dXJlQWxlcnRJZCwKICAgICAgICAgICAgImFydGljbGVJZCI6IGFydGljbGVJZAogICAgICAgIH07CgogICAgICAgIGNhc2VKc29uQXJyYXkucHVzaChjYXNlSnNvbik7CiAgICAgICAgdmFyIGNvbW1lbnRNZXRhSW5mbyA9ICIiOwoKICAgICAgICBpZiAoY2FzZUpzb24uYWxlcnRUeXBlID09PSBzaWduYWxBbGVydFR5cGUuQUdHUkVHQVRFX0FMRVJUIHx8IGNhc2VKc29uLmFsZXJ0VHlwZSA9PT0gc2lnbmFsQWxlcnRUeXBlLkVWREFTX0FMRVJUKSB7CiAgICAgICAgICAgIGlmICh0eXBlb2YgKGNhc2VKc29uLmV2ZW50TmFtZSkgPT09ICJ1bmRlZmluZWQiIHx8IHR5cGVvZiAoY2FzZUpzb24ucHJvZHVjdE5hbWUpID09PSAidW5kZWZpbmVkIikgewogICAgICAgICAgICAgICAgY29tbWVudE1ldGFJbmZvID0gIiIKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGNvbW1lbnRNZXRhSW5mbyA9ICc8c3BhbiBpZD0icHJvZHVjdE5hbWUiPicgKyBjYXNlSnNvbi5wcm9kdWN0TmFtZSArICc8L3NwYW4+IC0gPHNwYW4gaWQ9ImV2ZW50TmFtZSI+JyArIGNhc2VKc29uLmV2ZW50TmFtZSArICc8L3NwYW4+JyArICc8c3BhbiBjbGFzcz0iaGlkZGVuIiBpZD0icHJvZHVjdElkIj4nICsgY2FzZUpzb24ucHJvZHVjdElkICsgJzwvc3Bhbj4nICsKICAgICAgICAgICAgICAgICAgICAnPHNwYW4gY2xhc3M9ImhpZGRlbiIgaWQ9InB0Q29kZSI+JyArIGNhc2VKc29uLnB0Q29kZSArICc8L3NwYW4+JwogICAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgaWYgKHR5cGVvZiAoY2FzZUpzb24uY2FzZU51bWJlcikgPT09ICJ1bmRlZmluZWQiIHx8IHR5cGVvZiAoY2FzZUpzb24ucHJvZHVjdEZhbWlseSkgPT09ICJ1bmRlZmluZWQiKSB7CiAgICAgICAgICAgICAgICBjb21tZW50TWV0YUluZm8gPSAiIgogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgY29tbWVudE1ldGFJbmZvID0gJzxzcGFuIGlkPSJjYXNlTnVtYmVyIj4nICsgY2FzZUpzb24uY2FzZU51bWJlciArICc8L3NwYW4+IC0gPHNwYW4gaWQ9InByb2R1Y3RGYW1pbHkiPicgKyBjYXNlSnNvbi5wcm9kdWN0RmFtaWx5ICsgJzwvc3Bhbj4nCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgY29tbWVudE1vZGFsLmZpbmQoIiNjb21tZW50LW1ldGEtaW5mbyIpLmh0bWwoY29tbWVudE1ldGFJbmZvKTsKICAgICAgICBjb21tZW50TW9kYWwuZmluZCgiI2Fzc2lnbmVkVG8iKS5odG1sKGFzc2lnbmVkVG8pOwogICAgICAgIGNvbW1lbnRNb2RhbC5maW5kKCIjY29uZmlnSWQiKS5odG1sKGNvbmZpZ0lkKTsKICAgICAgICBjb21tZW50TW9kYWwuZmluZCgiI2FwcGxpY2F0aW9uIikuaHRtbChjYXNlSnNvbi5hbGVydFR5cGUpOwoKICAgICAgICAvL1BvcHVsYXRlIHRoZSBleGlzdGluZyBjb21tZW50cyBhbmQgYmluZCBldmVudHMgdG8gdGhlbSBpbiBjYXNlIG9mIHNpbmdsZSBjb21tZW50LgogICAgICAgIGlmICh0eXBlb2YgaXNDYXNlRGV0YWlsICE9PSAndW5kZWZpbmVkJykgewogICAgICAgICAgICAkKCcjbG9hZGluZ0NvbW1lbnRzJykuaHRtbCgnJykKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBzaWduYWwuYWxlcnRDb21tZW50cy5wb3B1bGF0ZV9jb21tZW50cyhjb21tZW50TW9kYWwsIGNhc2VKc29uKTsKICAgICAgICB9CiAgICAgICAgJCgiI2NvbW1lbnRNb2RhbCIpLm9uKCdoaWRkZW4uYnMubW9kYWwnLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICQoJyNjb21tZW50Ym94JykudmFsKCcnKTsKICAgICAgICAgICAgJCgnLmFkZC1jb21tZW50cycpLmh0bWwoJ0FkZCcpOwogICAgICAgICAgICAkKCIuY3JlYXRlZEJ5IikudGV4dCgnJyk7CiAgICAgICAgfSkKICAgIH07CgogICAgdmFyIGluaXRpYXRlU2luZ2xlQnVsa1Jvd0NvbW1lbnRQcm9jZXNzID0gZnVuY3Rpb24gKGNhc2VKc29uQXJyYXksIGNvbW1lbnRNb2RhbCwgYWxlcnRUeXBlLCBpc0Nhc2VEZXRhaWwsIGlzU2lnbmFsKSB7CiAgICAgICAgdmFyIGluZGV4U2V0ID0gbmV3IFNldCgpOwogICAgICAgIHZhciBjaGVja2JveFNlbGVjdG9yOwogICAgICAgIGlmICgkKCcjZGV0YWlsZWQtdmlldy1jaGVja2JveCcpLmlzKCc6Y2hlY2tlZCcpKSB7CiAgICAgICAgICAgIGNoZWNrYm94U2VsZWN0b3IgPSAndGFibGUjYWxlcnRzRGV0YWlsc1RhYmxlIC5jb3B5LXNlbGVjdDpjaGVja2VkJzsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBjaGVja2JveFNlbGVjdG9yID0gJ3RhYmxlLkRURkNfQ2xvbmVkIC5jb3B5LXNlbGVjdDpjaGVja2VkJzsKICAgICAgICB9CiAgICAgICAgJC5lYWNoKCQoY2hlY2tib3hTZWxlY3RvciksIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgdmFyIHNlbGVjdGVkUm93SW5kZXggPSAkKHRoaXMpLmNsb3Nlc3QoJ3RyJykuaW5kZXgoKTsKICAgICAgICAgICAgaWYgKGlzQWJzdHJhY3RWaWV3T3JDYXNlVmlldyhzZWxlY3RlZFJvd0luZGV4KSkKICAgICAgICAgICAgICAgIHNlbGVjdGVkUm93SW5kZXggPSBzZWxlY3RlZFJvd0luZGV4IC8gMjsKICAgICAgICAgICAgaW5kZXhTZXQuYWRkKChzZWxlY3RlZFJvd0luZGV4KSk7CiAgICAgICAgfSk7CiAgICAgICAgaW5kZXhTZXQuZm9yRWFjaChmdW5jdGlvbiAoaW5kZXgpIHsKICAgICAgICAgICAgdmFyIGFkaG9jQWxlcnRJZDsKICAgICAgICAgICAgdmFyIGxpdGVyYXR1cmVBbGVydElkOwogICAgICAgICAgICB2YXIgYXJ0aWNsZUlkOwogICAgICAgICAgICB2YXIgcm93T2JqZWN0ID0ge307CiAgICAgICAgICAgIGlmICgoYWxlcnRUeXBlID09PSAnQWdncmVnYXRlIENhc2UgQWxlcnQnIHx8IGFsZXJ0VHlwZSA9PT0gJ1NpbmdsZSBDYXNlIEFsZXJ0JyB8fCBhbGVydFR5cGUgPT09ICdFVkRBUyBBbGVydCcgfHwgYWxlcnRUeXBlID09PSAnTGl0ZXJhdHVyZSBTZWFyY2ggQWxlcnQnKSAmJiAhaXNTaWduYWwpIHsKICAgICAgICAgICAgICAgIHJvd09iamVjdCA9IHRhYmxlLnJvd3MoaW5kZXgpLmRhdGEoKVswXTsKICAgICAgICAgICAgfSBlbHNlIGlmIChhbGVydFR5cGUgPT09ICdBZ2dyZWdhdGUgQ2FzZSBBbGVydCcpIHsKICAgICAgICAgICAgICAgIHJvd09iamVjdCA9IHRhYmxlQWdnUmV2aWV3LnJvd3MoaW5kZXgpLmRhdGEoKVswXTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHJvd09iamVjdCA9IHRhYmxlU2luZ2xlUmV2aWV3LnJvd3MoaW5kZXgpLmRhdGEoKVswXTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgdmFyIGNhc2VOdW1iZXIgPSByb3dPYmplY3QuY2FzZU51bWJlcjsKICAgICAgICAgICAgdmFyIHByb2R1Y3RGYW1pbHkgPSByb3dPYmplY3QucHJvZHVjdEZhbWlseTsKICAgICAgICAgICAgdmFyIGNhc2VWZXJzaW9uID0gcm93T2JqZWN0LmNhc2VWZXJzaW9uOwogICAgICAgICAgICB2YXIgcHJvZHVjdE5hbWUgPSByb3dPYmplY3QucHJvZHVjdE5hbWU7CiAgICAgICAgICAgIHZhciBldmVudE5hbWUgPSByb3dPYmplY3QucHJlZmVycmVkVGVybTsKICAgICAgICAgICAgdmFyIHB0ID0gcm93T2JqZWN0LnB0OwogICAgICAgICAgICB2YXIgYXNzaWduZWRUbyA9IHJvd09iamVjdC5hc3NpZ25lZFRvLmlkOwogICAgICAgICAgICB2YXIgcHJvZHVjdElkID0gcm93T2JqZWN0LnByb2R1Y3RJZDsKICAgICAgICAgICAgdmFyIHB0Q29kZSA9IHJvd09iamVjdC5wdENvZGU7CiAgICAgICAgICAgIHZhciBjb25maWdJZCA9IHJvd09iamVjdC5hbGVydENvbmZpZ0lkOwogICAgICAgICAgICB2YXIgZXhlY3V0ZWRDb25maWdJZCA9IHJvd09iamVjdC5leGVjQ29uZmlnSWQ7CgogICAgICAgICAgICBpZiAoYWxlcnRUeXBlID09PSBzaWduYWxBbGVydFR5cGUuQURIT0NfQUxFUlQpIHsKICAgICAgICAgICAgICAgIGFkaG9jQWxlcnRJZCA9IHJvd09iamVjdC5pZDsKICAgICAgICAgICAgfSBlbHNlIGlmIChhbGVydFR5cGUgPT09IHNpZ25hbEFsZXJ0VHlwZS5MSVRFUkFUVVJFX1NFQVJDSF9BTEVSVCkgewogICAgICAgICAgICAgICAgbGl0ZXJhdHVyZUFsZXJ0SWQgPSByb3dPYmplY3QuaWQ7CiAgICAgICAgICAgICAgICBhcnRpY2xlSWQgPSByb3dPYmplY3QuYXJ0aWNsZUlkCiAgICAgICAgICAgIH0KICAgICAgICAgICAgdmFyIGNhc2VKc29uID0gewogICAgICAgICAgICAgICAgImFsZXJ0VHlwZSI6IGFsZXJ0VHlwZSwKICAgICAgICAgICAgICAgICJwcm9kdWN0RmFtaWx5IjogcHJvZHVjdEZhbWlseSwKICAgICAgICAgICAgICAgICJjYXNlTnVtYmVyIjogY2FzZU51bWJlciwKICAgICAgICAgICAgICAgICJwcm9kdWN0TmFtZSI6IHByb2R1Y3ROYW1lLAogICAgICAgICAgICAgICAgImV2ZW50TmFtZSI6IGV2ZW50TmFtZSwKICAgICAgICAgICAgICAgICJwdCI6IHB0LAogICAgICAgICAgICAgICAgInB0Q29kZSI6IHB0Q29kZSwKICAgICAgICAgICAgICAgICJwcm9kdWN0SWQiOiBwcm9kdWN0SWQsCiAgICAgICAgICAgICAgICAiYXNzaWduZWRUbyI6IGFzc2lnbmVkVG8sCiAgICAgICAgICAgICAgICAiZXhlY3V0ZWRDb25maWdJZCI6IGV4ZWN1dGVkQ29uZmlnSWQsCiAgICAgICAgICAgICAgICAiY29uZmlnSWQiOiBjb25maWdJZCwKICAgICAgICAgICAgICAgICJhZGhvY0FsZXJ0SWQiOiBhZGhvY0FsZXJ0SWQsCiAgICAgICAgICAgICAgICAibGl0ZXJhdHVyZUFsZXJ0SWQiOiBsaXRlcmF0dXJlQWxlcnRJZCwKICAgICAgICAgICAgICAgICJhcnRpY2xlSWQiOiBhcnRpY2xlSWQKICAgICAgICAgICAgfTsKICAgICAgICAgICAgY2FzZUpzb25BcnJheS5wdXNoKGNhc2VKc29uKQogICAgICAgIH0pOwoKICAgICAgICAvL1NldCB2YWx1ZXMgdG8gdGhlIG1vZGFsIGVsZW1lbnRzLgogICAgICAgIGNvbW1lbnRNb2RhbC5maW5kKCIjbG9hZGluZ0NvbW1lbnRzIikuaGlkZSgpOwogICAgICAgIGNvbW1lbnRNb2RhbC5maW5kKCIjY29tbWVudC1tZXRhLWluZm8iKS5odG1sKCIiKTsKICAgICAgICBjb21tZW50TW9kYWwuZmluZCgiLnByZXZpb3VzLWNvbW1lbnRzIikuaHRtbCgiIik7CiAgICAgICAgY29tbWVudE1vZGFsLmZpbmQoIiNjb21tZW50SWQiKS52YWwoJycpOwogICAgICAgIGNvbW1lbnRNb2RhbC5maW5kKCIuY3JlYXRlZEJ5IikudGV4dCgnJyk7CiAgICAgICAgaWYgKGNvbW1lbnRNb2RhbC5maW5kKCcuYWRkLWNvbW1lbnRzJykuaHRtbCgpICE9ICdVcGRhdGUnKSB7CiAgICAgICAgICAgIGNvbW1lbnRNb2RhbC5maW5kKCcuYWRkLWNvbW1lbnRzJykuaHRtbCgiQWRkIik7CiAgICAgICAgfQogICAgICAgIGNvbW1lbnRNb2RhbC5maW5kKCcuYWRkLWNvbW1lbnRzJykucHJvcCgiZGlzYWJsZWQiLCBmYWxzZSk7CiAgICAgICAgY29tbWVudE1vZGFsLmZpbmQoJyNjb21tZW50Ym94Jykub24oImtleXVwIiwgZnVuY3Rpb24gKCkgewogICAgICAgICAgICBpZiAoY29tbWVudE1vZGFsLmZpbmQoJyNjb21tZW50Ym94JykudmFsKCkubGVuZ3RoID4gMCkgewogICAgICAgICAgICAgICAgY29tbWVudE1vZGFsLmZpbmQoJy5hZGQtY29tbWVudHMnKS5wcm9wKCJkaXNhYmxlZCIsIGZhbHNlKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGNvbW1lbnRNb2RhbC5maW5kKCcuYWRkLWNvbW1lbnRzJykucHJvcCgiZGlzYWJsZWQiLCB0cnVlKTsKICAgICAgICAgICAgfQogICAgICAgIH0pOwogICAgfTsKCiAgICB2YXIgcmVzdGFydFJldmlldyA9IGZ1bmN0aW9uIChjYXNlUmV2aWV3UHJldmlvdXNVcmwpIHsKCiAgICAgICAgLy9FdmVudCB3aGVuIHJldmlldyByZXN0YXJ0IGlzIGNsaWNrZWQuCiAgICAgICAgJChkb2N1bWVudCkub24oJ2NsaWNrJywgJy5jYXNlLXJlc3RhcnQtcmV2aWV3JywgZnVuY3Rpb24gKGV2ZW50KSB7CiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgICAgIHZhciBwYXJlbnRfcm93ID0gJChldmVudC50YXJnZXQpLmNsb3Nlc3QoJ3RyJyk7CiAgICAgICAgICAgIHZhciBjYXNlTnVtYmVyID0gcGFyZW50X3Jvdy5maW5kKCdzcGFuW2RhdGEtZmllbGQ9ImNhc2VOdW1iZXIiXScpLmF0dHIoImRhdGEtaWQiKTsKICAgICAgICAgICAgdmFyIGZvbGxvd1VwTnVtYmVyID0gcGFyZW50X3Jvdy5maW5kKCdzcGFuW2RhdGEtZmllbGQ9ImZvbGxvd1VwTnVtYmVyIl0nKS5hdHRyKCJkYXRhLWlkIik7CiAgICAgICAgICAgIHZhciBjYXNlVmVyc2lvbiA9IHBhcmVudF9yb3cuZmluZCgnc3BhbltkYXRhLWZpZWxkPSJjYXNlVmVyc2lvbiJdJykuYXR0cigiZGF0YS1pZCIpOwogICAgICAgICAgICB2YXIgcHJvZHVjdEZhbWlseSA9IHBhcmVudF9yb3cuZmluZCgnaW5wdXRbZGF0YS1maWVsZD0icHJvZHVjdEZhbWlseSJdJykuYXR0cigiZGF0YS1pZCIpOwogICAgICAgICAgICB2YXIgZm9sbG93VXBNb2RhbCA9ICQoJyNmb2xsb3dVcE1vZGFsJyk7CiAgICAgICAgICAgIGZvbGxvd1VwTW9kYWwubW9kYWwoJ3Nob3cnKTsKICAgICAgICAgICAgZm9sbG93VXBNb2RhbC5maW5kKCIucHJldmlvdXMtZm9sbG93VXAiKS51bmJpbmQoKS5jbGljayhmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICB2YXIgZ2V0UHJldmlvdXNTdGF0ZSA9IGNhc2VSZXZpZXdQcmV2aW91c1VybCArICI/Y2FzZU51bWJlcj0iICsgY2FzZU51bWJlciArCiAgICAgICAgICAgICAgICAgICAgIiZjYXNlVmVyc2lvbj0iICsgY2FzZVZlcnNpb24gKyAiJnByb2R1Y3RGYW1pbHk9IiArIHByb2R1Y3RGYW1pbHkgKyAiJmZvbGxvd1VwTnVtYmVyPSIgKyBmb2xsb3dVcE51bWJlcjsKICAgICAgICAgICAgICAgICQuYWpheCh7CiAgICAgICAgICAgICAgICAgICAgdXJsOiBnZXRQcmV2aW91c1N0YXRlLAogICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXN1bHQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgcGFyZW50X3Jvdy5maW5kKCdzcGFuW2RhdGEtZmllbGQ9IndvcmtmbG93U3RhdGUiXScpLnRleHQocmVzdWx0LnByZXZpb3VzU3RhdGUpOwogICAgICAgICAgICAgICAgICAgICAgICBwYXJlbnRfcm93LmZpbmQoJ3NwYW5bZGF0YS1maWVsZD0iZGlzcG9zaXRpb24iXScpLnRleHQocmVzdWx0LnByZXZpb3VzRGlzcG9zaXRpb24pOwogICAgICAgICAgICAgICAgICAgICAgICBwYXJlbnRfcm93LmZpbmQoJ3NwYW5bZGF0YS1maWVsZD0iaW5mby1zaWduIl0nKS5hZGRDbGFzcygiaGlkZGVuIik7CiAgICAgICAgICAgICAgICAgICAgICAgIGZvbGxvd1VwTW9kYWwubW9kYWwoJ2Rlc3Ryb3knKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICB9KQogICAgICAgIH0pOwogICAgfTsKCiAgICB2YXIgb3BlblNpbWlsYXJDYXNlc01vZGFsID0gZnVuY3Rpb24gKGNhc2VJbmZvVXJsKSB7CgogICAgICAgIC8vRXZlbnQgdHJpZ2dlcmVkIHdoZW4gc2ltaWxhciBjYXNlcyBjb3VudCBpcyBjbGlja2VkLgogICAgICAgICQoZG9jdW1lbnQpLm9uKCdjbGljaycsICcuc2ltaWxhci1jYXNlcycsIGZ1bmN0aW9uIChldmVudCkgewoKICAgICAgICAgICAgdmFyIHNpbWlsYXJDYXNlTW9kYWwgPSAkKCcjc2ltaWxhckNhc2VNb2RhbCcpOwogICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOwoKICAgICAgICAgICAgdmFyIHBhcmVudF9yb3cgPSAkKGV2ZW50LnRhcmdldCkuY2xvc2VzdCgidHIiKTsKCiAgICAgICAgICAgIC8vRmV0Y2ggdGhlIHZhbHVlcyBvZiB0aGUgZXZlbnQuCiAgICAgICAgICAgIHZhciBldmVudFZhbCA9ICQoZXZlbnQudGFyZ2V0KS5hdHRyKCdkYXRhLWV2ZW50LXZhbCcpOwogICAgICAgICAgICB2YXIgZXZlbnRUeXBlID0gJChldmVudC50YXJnZXQpLmF0dHIoJ2RhdGEtZmllbGQnKTsKICAgICAgICAgICAgdmFyIGV4ZWN1dGVkQ29uZmlnSWQgPSAkKGV2ZW50LnRhcmdldCkuYXR0cigiZGF0YS1pZCIpOwogICAgICAgICAgICB2YXIgcHQgPSAkKGV2ZW50LnRhcmdldCkuYXR0cigiZGF0YS1wdCIpOwogICAgICAgICAgICB2YXIgZXZlbnRDb2RlOwogICAgICAgICAgICBpZiAoZXZlbnRUeXBlKSB7CiAgICAgICAgICAgICAgICBldmVudENvZGUgPSAoZXZlbnRUeXBlLnNwbGl0KCJfY29kZSIpWzBdKTsKICAgICAgICAgICAgICAgIGV2ZW50VHlwZSA9IGV2ZW50VHlwZS5zcGxpdCgiXyIpWzJdOwogICAgICAgICAgICB9CgogICAgICAgICAgICB2YXIgY2FzZU51bWJlciA9IHBhcmVudF9yb3cuZmluZCgnc3BhbltkYXRhLWZpZWxkPSJjYXNlTnVtYmVyIl0nKS5hdHRyKCJkYXRhLWlkIik7CiAgICAgICAgICAgIHZhciBjYXNlVmVyc2lvbiA9IHBhcmVudF9yb3cuZmluZCgnc3BhbltkYXRhLWZpZWxkPSJjYXNlVmVyc2lvbiJdJykuYXR0cigiZGF0YS1pZCIpOwoKICAgICAgICAgICAgLy9TaG93IG1vZGFsIGFuZCBzZXQgaXRzIHZhbHVlcy4KICAgICAgICAgICAgc2ltaWxhckNhc2VNb2RhbC5tb2RhbCgnc2hvdycpOwogICAgICAgICAgICBzaW1pbGFyQ2FzZU1vZGFsLmZpbmQoIiNldmVudFR5cGUiKS5odG1sKGV2ZW50VHlwZSk7CiAgICAgICAgICAgIHNpbWlsYXJDYXNlTW9kYWwuZmluZCgiI2V2ZW50VmFsIikuaHRtbChldmVudFZhbCk7CiAgICAgICAgICAgIHNpbWlsYXJDYXNlTW9kYWwuZmluZCgiI2Nhc2VOdW1iZXJJbmZvIikudmFsKGNhc2VOdW1iZXIpOwogICAgICAgICAgICBzaW1pbGFyQ2FzZU1vZGFsLmZpbmQoIiNleGVjdXRlZENvbmZpZ0lkIikudmFsKGV4ZWN1dGVkQ29uZmlnSWQpOwogICAgICAgICAgICBzaW1pbGFyQ2FzZU1vZGFsLmZpbmQoIiNjYXNlQ3VycmVudFZlcnNpb24iKS52YWwoY2FzZVZlcnNpb24pOwogICAgICAgICAgICBzaW1pbGFyQ2FzZU1vZGFsLmZpbmQoIiNldmVudENvZGUiKS52YWwoZXZlbnRDb2RlKTsKICAgICAgICAgICAgc2ltaWxhckNhc2VNb2RhbC5maW5kKCIjZXZlbnRDb2RlVmFsIikudmFsKGV2ZW50VmFsKTsKICAgICAgICAgICAgLy9NYWtlIHRoZSBtb2RhbCB0YWJsZSBhcyBkYXRhdGFibGUKCiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgc2lnbmFsLnNpbWlsYXJDYXNlVGFibGUuaW5pdF9zaW1pbGFyX2Nhc2VfdGFibGUoY2FzZUluZm9VcmwpCiAgICAgICAgICAgIH0sIDEwMCk7CiAgICAgICAgfSk7CiAgICB9OwoKICAgIHZhciBvcGVuQXR0YWNobWVudE1vZGFsID0gZnVuY3Rpb24gKCkgewogICAgICAgICQoZG9jdW1lbnQpLm9uKCdjbGljaycsICcuc2hvdy1hdHRhY2htZW50LWljb24nLCBmdW5jdGlvbiAoZXZlbnQpIHsKICAgICAgICAgICAgdmFyICR0aGlzID0gdGhpczsKICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsKICAgICAgICAgICAgdmFyIHBhcmVudF9yb3cgPSAkKGV2ZW50LnRhcmdldCkuY2xvc2VzdCgndHInKTsKICAgICAgICAgICAgdmFyIGFsZXJ0SWQgPSBwYXJlbnRfcm93LmZpbmQoJ2FbZGF0YS1maWVsZD0iYXR0YWNobWVudCJdJykuYXR0cigiZGF0YS1pZCIpOwogICAgICAgICAgICB2YXIgY2FzZUNvbnRyb2xsZXIgPSBwYXJlbnRfcm93LmZpbmQoJ2FbZGF0YS1maWVsZD0iYXR0YWNobWVudCJdJykuYXR0cigiZGF0YS1jb250cm9sbGVyIik7CiAgICAgICAgICAgIHZhciB1cmwgPSAiL3NpZ25hbC8iICsgY2FzZUNvbnRyb2xsZXIgKyAiL3VwbG9hZCI7CiAgICAgICAgICAgIHZhciBnZXRBdHRhY2htZW50VXJsID0gIi9zaWduYWwvIiArIGNhc2VDb250cm9sbGVyICsgIi9mZXRjaEF0dGFjaG1lbnQ/YWxlcnRJZD0iICsgYWxlcnRJZDsKICAgICAgICAgICAgJCgnI3Nob3dBdHRhY2htZW50TW9kYWwgI2F0dGFjaG1lbnRGb3JtICNhdHRhY2htZW50Rm9ybUlkJykuYXR0cigndmFsdWUnLCBhbGVydElkKTsKICAgICAgICAgICAgdmFyIGNhc2VIaXN0b3J5TW9kYWwgPSAkKCcjc2hvd0F0dGFjaG1lbnRNb2RhbCcpOwogICAgICAgICAgICBjYXNlSGlzdG9yeU1vZGFsLm1vZGFsKCdzaG93Jyk7CiAgICAgICAgICAgICQoIiNzaG93QXR0YWNobWVudE1vZGFsIGZvcm0jYXR0YWNobWVudEZvcm0iKS51bmJpbmQoJ3N1Ym1pdCcpLm9uKCdzdWJtaXQnLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICB2YXIgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEodGhpcyk7CiAgICAgICAgICAgICAgICB2YXIgJHRoaXMgPSAkKHRoaXMpOwogICAgICAgICAgICAgICAgaWYgKCR0aGlzLmZpbmQoJy5hdHRhY2htZW50LWZpbGUnKS52YWwoKSkgewogICAgICAgICAgICAgICAgICAgICR0aGlzLmZpbmQoIi51cGxvYWQiKS5hdHRyKCJkaXNhYmxlZCIsIHRydWUpOwogICAgICAgICAgICAgICAgICAgICQuYWpheCh7CiAgICAgICAgICAgICAgICAgICAgICAgIHVybDogdXJsLAogICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAiUE9TVCIsCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IGZvcm1EYXRhLAogICAgICAgICAgICAgICAgICAgICAgICBhc3luYzogZmFsc2UsCiAgICAgICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICR0aGlzLmZpbmQoJy5hdHRhY2htZW50LWZpbGUnKS52YWwoJycpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvd0F0dGFjaG1lbnRJY29uKHBhcmVudF9yb3cpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgJCgnI3Nob3dBdHRhY2htZW50TW9kYWwgI2F0dGFjaG1lbnQtdGFibGUnKS5EYXRhVGFibGUoKS5hamF4LnJlbG9hZCgpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgJHRoaXMuZmluZCgiLnVwbG9hZCIpLmF0dHIoImRpc2FibGVkIiwgZmFsc2UpOwogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICBjYWNoZTogZmFsc2UsCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnRUeXBlOiBmYWxzZSwKICAgICAgICAgICAgICAgICAgICAgICAgcHJvY2Vzc0RhdGE6IGZhbHNlCiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICAkKCcjc2hvd0F0dGFjaG1lbnRNb2RhbCAjYXR0YWNobWVudC10YWJsZScpLkRhdGFUYWJsZSh7CiAgICAgICAgICAgICAgICBkZXN0cm95OiB0cnVlLAogICAgICAgICAgICAgICAgc2VhcmNoaW5nOiBmYWxzZSwKICAgICAgICAgICAgICAgIHNQYWdpbmF0aW9uVHlwZTogImJvb3RzdHJhcCIsCiAgICAgICAgICAgICAgICByZXNwb25zaXZlOiBmYWxzZSwKICAgICAgICAgICAgICAgIGxhbmd1YWdlOiB7CiAgICAgICAgICAgICAgICAgICAgInVybCI6ICIuLi9hc3NldHMvaTE4bi9kYXRhVGFibGVzXyIgKyB1c2VyTG9jYWxlICsgIi5qc29uIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJhamF4IjogewogICAgICAgICAgICAgICAgICAgICJ1cmwiOiBnZXRBdHRhY2htZW50VXJsLAogICAgICAgICAgICAgICAgICAgICJkYXRhU3JjIjogIiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBmbkRyYXdDYWxsYmFjazogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICAgICQoJy5yZW1vdmUtYXR0YWNobWVudCcpLmNsaWNrKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBhdHRhY2htZW50Um93ID0gJChlLnRhcmdldCkuY2xvc2VzdCgndHInKTsKICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGF0dGFjaG1lbnRJZCA9IGF0dGFjaG1lbnRSb3cuZmluZCgnc3BhbltkYXRhLWZpZWxkPSJyZW1vdmVBdHRhY2htZW50Il0nKS5hdHRyKCJkYXRhLWF0dGFjaG1lbnRJZCIpOwogICAgICAgICAgICAgICAgICAgICAgICB2YXIgcmVtb3ZlVXJsID0gJy9zaWduYWwvJyArIGNhc2VDb250cm9sbGVyICsgJy9kZWxldGVBdHRhY2htZW50P2F0dGFjaG1lbnRJZD0nICsgYXR0YWNobWVudElkOwogICAgICAgICAgICAgICAgICAgICAgICAkLmFqYXgoewogICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogIlBPU1QiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiByZW1vdmVVcmwsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiB7YWxlcnRJZDogYWxlcnRJZH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYoJCgnLnJlbW92ZS1hdHRhY2htZW50JykubGVuZ3RoID09PTEgKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbW92ZUF0dGFjaG1lbnRJY29uKCR0aGlzKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCcjc2hvd0F0dGFjaG1lbnRNb2RhbCAjYXR0YWNobWVudC10YWJsZScpLkRhdGFUYWJsZSgpLmFqYXgucmVsb2FkKCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkLk5vdGlmaWNhdGlvbi5ub3RpZnkoJ2Vycm9yJywgJ3RvcCByaWdodCcsICJFcnJvciIsICJBbGwgc2VsZWN0ZWQgc2FmZXR5IG9ic2VydmF0aW9ucyBtdXN0IGJlIGluIHNhbWUgZGlzcG9zaXRpb24gZm9yIHBlcmZvcm1pbmcgdGhlIGJ1bGsgdXBkYXRlLiIsIHthdXRvSGlkZURlbGF5OiAxMDAwMH0pOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgImFvQ29sdW1ucyI6IFsKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICJtRGF0YSI6ICJuYW1lIiwKICAgICAgICAgICAgICAgICAgICAgICAgIm1SZW5kZXIiOiBmdW5jdGlvbiAoZGF0YSwgdHlwZSwgcm93KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJzxhIGhyZWY9Ii9zaWduYWwvYXR0YWNobWVudGFibGUvZG93bmxvYWQ/aWQ9JyArIHJvdy5pZCArICciPicgKyBlc2NhcGVIVE1MKHJvdy5uYW1lKSArICc8L2E+JwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICAgICAgICAibURhdGEiOiAiZGVzY3JpcHRpb24iLAogICAgICAgICAgICAgICAgICAgICAgICAiY2xhc3NOYW1lIjogJ2NlbGwtYnJlYWsnLAogICAgICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgICAgICAgIm1EYXRhIjogInRpbWVTdGFtcCIKICAgICAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgICAgICAgICJtRGF0YSI6ICJtb2RpZmllZEJ5IgogICAgICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgICAgICAgIm1EYXRhIjogImlkIiwKICAgICAgICAgICAgICAgICAgICAgICAgIm1SZW5kZXIiOiBmdW5jdGlvbiAoZGF0YSwgdHlwZSwgcm93KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJzxzcGFuIHRhYmluZGV4PSIwIiB0aXRsZT0iUmVtb3ZlIEF0dGFjaG1lbnQiICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyIiBjbGFzcz0iZ2x5cGhpY29uIGdseXBoaWNvbi1yZW1vdmUgcmVtb3ZlLWF0dGFjaG1lbnQiIGRhdGEtZmllbGQ9InJlbW92ZUF0dGFjaG1lbnQiIGRhdGEtYXR0YWNobWVudElkPScgKyByb3cuaWQgKyAnPjwvc3Bhbj4nCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgImJMZW5ndGhDaGFuZ2UiOiBmYWxzZSwKICAgICAgICAgICAgICAgIGNvbHVtbkRlZnM6IFt7CiAgICAgICAgICAgICAgICAgICAgInRhcmdldHMiOiAnX2FsbCcsCiAgICAgICAgICAgICAgICAgICAgInJlbmRlciI6ICQuZm4uZGF0YVRhYmxlLnJlbmRlci50ZXh0KCkKICAgICAgICAgICAgICAgIH1dCiAgICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgfTsKCiAgICB2YXIgYmluZEdyaWREeW5hbWljRmlsdGVycyA9IGZ1bmN0aW9uIChmaWx0ZXJzRGF0YSwgcHJlZml4LCBpZCkgewogICAgICAgIC8vQWRkIGZpbHRlcnMgdG8gdGhlIGRhdGEgdGFibGUuCiAgICAgICAgdmFyIGRhdGFUYWJsZXNfbGVuZ3RoID0gJCgnLmRhdGFUYWJsZXNfbGVuZ3RoJyk7CiAgICAgICAgZGF0YVRhYmxlc19sZW5ndGguYWRkQ2xhc3MoJ2NvbC1zbS0xMicpOwogICAgICAgIGRhdGFUYWJsZXNfbGVuZ3RoLnBhcmVudCgpLnJlbW92ZUNsYXNzKCJjb2wteHMtMiIpOwogICAgICAgIGFwcGxpY2F0aW9uTmFtZSA9PSBBTEVSVF9DT05GSUdfVFlQRS5BREhPQ19BTEVSVCA/IGRhdGFUYWJsZXNfbGVuZ3RoLnBhcmVudCgiOm5vdCgnLmRhdGFUYWJsZXNfd3JhcHBlcicpIikuYWRkQ2xhc3MoImNvbC14cy05IikgOiBkYXRhVGFibGVzX2xlbmd0aC5wYXJlbnQoIjpub3QoJy5kYXRhVGFibGVzX3dyYXBwZXInKSIpLmFkZENsYXNzKCJjb2wteHMtMTAiKTsKICAgICAgICBkYXRhVGFibGVzX2xlbmd0aC5wYXJlbnQoIjpub3QoJy5kYXRhVGFibGVzX3dyYXBwZXInKSIpLm5leHQoKS5yZW1vdmVDbGFzcygiY29sLXhzLTEwIik7CiAgICAgICAgYXBwbGljYXRpb25OYW1lID09IEFMRVJUX0NPTkZJR19UWVBFLkFESE9DX0FMRVJUID8gZGF0YVRhYmxlc19sZW5ndGgucGFyZW50KCI6bm90KCcuZGF0YVRhYmxlc193cmFwcGVyJykiKS5uZXh0KCkuYWRkQ2xhc3MoImNvbC14cy0zIikgOiBkYXRhVGFibGVzX2xlbmd0aC5wYXJlbnQoIjpub3QoJy5kYXRhVGFibGVzX3dyYXBwZXInKSIpLm5leHQoKS5hZGRDbGFzcygiY29sLXhzLTIiKTsKICAgICAgICBkYXRhVGFibGVzX2xlbmd0aC5maW5kKCJsYWJlbCIpLmFkZENsYXNzKCdjb2wteHMtMicpOwogICAgICAgIGRhdGFUYWJsZXNfbGVuZ3RoLmVhY2goZnVuY3Rpb24gKCkgewogICAgICAgICAgICB2YXIgZHRCdXR0b25zID0gJzxkaXYgY2xhc3M9ImRhdGFUYWJsZS10b3AtZGlzcG9zaXRpb24gY29sLXhzLTEwIj4nOwogICAgICAgICAgICAkLmVhY2goZmlsdGVyc0RhdGEsIGZ1bmN0aW9uIChpbmRleCwgb2JqKSB7CiAgICAgICAgICAgICAgICBpZiAob2JqLmNsb3NlZCB8fCBvYmouaXNDbG9zZWQpIHsKICAgICAgICAgICAgICAgICAgICBkdEJ1dHRvbnMgKz0gJzxkaXYgY2xhc3M9ImNoZWNrYm94IGNoZWNrYm94LXByaW1hcnkgY2hlY2tib3gtaW5saW5lIG0tbC0zIGNoZWNrYm94LXBvcy1hYnMiPic7CiAgICAgICAgICAgICAgICAgICAgZHRCdXR0b25zICs9ICc8aW5wdXQgaWQ9ImZpbHRlcicgKyBpbmRleCArICciIHR5cGU9ImNoZWNrYm94IiBjbGFzcz0iZHluYW1pYy1maWx0ZXJzIiBuYW1lPSJyZWxhdGVkUmVzdWx0cyIgZGF0YS1jbG9zZWQ9IicgKyBvYmouaXNDbG9zZWQgKyAnIiB2YWx1ZT0iJyArIG9iai52YWx1ZSArICciIC8+IDxsYWJlbCBjbGFzcz0ibS1yLTMwIiAgZm9yPSJmaWx0ZXInICsgaW5kZXggKyAnIj4nICsgb2JqLnZhbHVlICsgJzwvbGFiZWw+PC9kaXY+JwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBkdEJ1dHRvbnMgKz0gJzxkaXYgY2xhc3M9ImNoZWNrYm94IGNoZWNrYm94LXByaW1hcnkgY2hlY2tib3gtaW5saW5lIG0tbC0zIGNoZWNrYm94LXBvcy1hYnMiPic7CiAgICAgICAgICAgICAgICAgICAgZHRCdXR0b25zICs9ICc8aW5wdXQgaWQ9ImZpbHRlcicgKyBpbmRleCArICciIHR5cGU9ImNoZWNrYm94IiBjbGFzcz0iZHluYW1pYy1maWx0ZXJzIiBuYW1lPSJyZWxhdGVkUmVzdWx0cyIgZGF0YS1jbG9zZWQ9IicgKyBvYmouaXNDbG9zZWQgKyAnIiBjaGVja2VkPSJjaGVja2VkIiB2YWx1ZT0iJyArIG9iai52YWx1ZSArICciIC8+IDxsYWJlbCBjbGFzcz0ibS1yLTMwIiBmb3I9ImZpbHRlcicgKyBpbmRleCArICciPicgKyBvYmoudmFsdWUgKyAnPC9sYWJlbD48L2Rpdj4nCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICBkdEJ1dHRvbnMgKz0gJzwvZGl2Pic7CiAgICAgICAgICAgIGR0QnV0dG9ucyA9IGR0QnV0dG9ucyArICc8L2Rpdj4nOwogICAgICAgICAgICBpZiAodGhpcy5pZCAhPT0gJ2FyY2hpdmVkQWxlcnRzVGFibGVfbGVuZ3RoJyAmJiB0aGlzLmlkICE9PSAnYWN0aXZpdGllc1RhYmxlX2xlbmd0aCcpCiAgICAgICAgICAgICAgICAkKHRoaXMpLmFwcGVuZChkdEJ1dHRvbnMpOwogICAgICAgICAgICAkKGRvY3VtZW50KS5vbignY2xpY2snLCAnLmR5bmFtaWMtZmlsdGVycycsIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIHZhciBhbGVydERldGFpbHNUYWJsZTsKICAgICAgICAgICAgICAgIHZhciBmcmVxU2VsZWN0ZWQgPSAiIjsKICAgICAgICAgICAgICAgIGlmICgkKCIjZnJlcXVlbmN5TmFtZXMiKSkgewogICAgICAgICAgICAgICAgICAgIGZyZXFTZWxlY3RlZCA9ICQoIiNmcmVxdWVuY3lOYW1lcyIpLnZhbCgpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgdmFyIGZpbHRlckFycmF5ID0gW107CiAgICAgICAgICAgICAgICB2YXIgZmlsdGVyVmFsdWVzID0gW107CiAgICAgICAgICAgICAgICAkKCcuZHluYW1pYy1maWx0ZXJzJykuZWFjaChmdW5jdGlvbiAoaW5kZXgpIHsKICAgICAgICAgICAgICAgICAgICBpZiAoJCh0aGlzKS5pcygnOmNoZWNrZWQnKSkgewogICAgICAgICAgICAgICAgICAgICAgICBmaWx0ZXJWYWx1ZXMucHVzaCgkKHRoaXMpLnZhbCgpKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgZmlsdGVyQXJyYXkucHVzaCgkKHRoaXMpLmlzKCc6Y2hlY2tlZCcpKTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbShwcmVmaXggKyAiZmlsdGVyc19zdG9yZSIsIEpTT04uc3RyaW5naWZ5KGZpbHRlckFycmF5KSk7CiAgICAgICAgICAgICAgICBzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKHByZWZpeCArICJmaWx0ZXJzX3ZhbHVlIiwgSlNPTi5zdHJpbmdpZnkoZmlsdGVyVmFsdWVzKSk7CiAgICAgICAgICAgICAgICBzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKHByZWZpeCArICJpZCIsIGlkKTsKICAgICAgICAgICAgICAgIHZhciB1cmw7CiAgICAgICAgICAgICAgICBpZiAoYXBwbGljYXRpb25OYW1lID09ICdMaXRlcmF0dXJlIFNlYXJjaCBBbGVydCcpIHsKICAgICAgICAgICAgICAgICAgICBhbGVydERldGFpbHNUYWJsZSA9ICQoJyNhbGVydHNEZXRhaWxzVGFibGUnKS5EYXRhVGFibGUoKTsKICAgICAgICAgICAgICAgICAgICB1cmwgPSBsaXN0Q29uZmlnVXJsICsgIj9maWx0ZXJzPSIgKyBmaWx0ZXJWYWx1ZXMuam9pbigiLCIpCiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIGFsZXJ0RGV0YWlsc1RhYmxlID0gJCgnI2FsZXJ0c0RldGFpbHNUYWJsZScpLkRhdGFUYWJsZSgpOwogICAgICAgICAgICAgICAgICAgIHVybCA9IGxpc3RDb25maWdVcmwgKyAiJmZyZXF1ZW5jeT0iICsgZnJlcVNlbGVjdGVkICsgIiZpc0ZpbHRlclJlcXVlc3Q9dHJ1ZSZmaWx0ZXJzPSIgKyBKU09OLnN0cmluZ2lmeShmaWx0ZXJWYWx1ZXMpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgYWxlcnREZXRhaWxzVGFibGUuYWpheC51cmwodXJsKS5sb2FkKCkKICAgICAgICAgICAgfSk7CiAgICAgICAgfSk7CgogICAgfTsKCiAgICB2YXIgaXNBbGVydFBlcnNpc3RlZEluU2Vzc2lvblN0b3JhZ2UgPSBmdW5jdGlvbiAocHJlZml4KSB7CiAgICAgICAgdmFyIGMgPSBzaWduYWwudXRpbHMuZ2V0UXVlcnlTdHJpbmcoImNvbmZpZ0lkIik7CiAgICAgICAgcmV0dXJuIGMgPyBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKHByZWZpeCArICJpZCIpID09IGMgOiBmYWxzZQogICAgfTsKCiAgICB2YXIgcmVtb3ZlRmlsdGVyc0Zyb21TZXNzaW9uU3RvcmFnZSA9IGZ1bmN0aW9uIChwcmVmaXgpIHsKICAgICAgICBzZXNzaW9uU3RvcmFnZS5yZW1vdmVJdGVtKHByZWZpeCArICJmaWx0ZXJzX3N0b3JlIik7CiAgICAgICAgc2Vzc2lvblN0b3JhZ2UucmVtb3ZlSXRlbShwcmVmaXggKyAiZmlsdGVyc192YWx1ZSIpOwogICAgICAgIHNlc3Npb25TdG9yYWdlLnJlbW92ZUl0ZW0ocHJlZml4ICsgImlkIik7CiAgICB9OwoKICAgIHZhciBvcGVuU2F2ZVZpZXdNb2RhbCA9IGZ1bmN0aW9uIChmaWx0ZXJJbmRleCwgYXBwbGljYXRpb25OYW1lLCB2aWV3SWQpIHsKICAgICAgICB2YXIgc3lzdGVtRGVmYXVsdCA9IFsiU3lzdGVtIFZpZXciXTsKICAgICAgICB2YXIgdmlld0luZm87CgogICAgICAgIC8vc2F2aW5nIG5ldyB2aWV3CiAgICAgICAgJCgiLnNhdmVWaWV3IikudW5iaW5kKCdjbGljaycpOwogICAgICAgICQoJy5zYXZlVmlldycpLm9uKCdjbGljaycsIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgdmlld0luZm8gPSBnZW5lcmF0ZVZpZXdJbmZvKGZpbHRlckluZGV4KTsKCiAgICAgICAgICAgICQoJyNzYXZlLXZpZXctbW9kYWwgI3ZpZXdfZmlsdGVycycpLnZhbChKU09OLnN0cmluZ2lmeSh2aWV3SW5mby5maWx0ZXJNYXApKTsKICAgICAgICAgICAgJCgnI3NhdmUtdmlldy1tb2RhbCAjdmlld19jb2x1bW5MaXN0JykudmFsKHZpZXdJbmZvLm5vdFZpc2libGVDb2x1bW4pOwogICAgICAgICAgICAkKCcjc2F2ZS12aWV3LW1vZGFsICN2aWV3X2FsZXJ0VHlwZScpLnZhbChhcHBsaWNhdGlvbk5hbWUpOwogICAgICAgICAgICAkKCcjc2F2ZS12aWV3LW1vZGFsICN2aWV3X3NvcnRpbmcnKS52YWwoSlNPTi5zdHJpbmdpZnkodmlld0luZm8uc29ydGVkQ29sdW1uKSk7CiAgICAgICAgICAgICQoJyNzYXZlLXZpZXctbW9kYWwgI3ZpZXdfYWR2YW5jZWRfZmlsdGVyJykudmFsKHZpZXdJbmZvLmFkdmFuY2VkRmlsdGVyKTsKICAgICAgICAgICAgJCgnI3NhdmUtdmlldy1tb2RhbCAjY3VycmVudF92aWV3X2lkJykudmFsKHZpZXdJZCk7CiAgICAgICAgICAgICQoJyNzYXZlLXZpZXctbW9kYWwgLnNhdmVfYnV0dG9ucycpLnNob3coKTsKICAgICAgICAgICAgJCgnI3NhdmUtdmlldy1tb2RhbCcpLm1vZGFsKCdzaG93Jyk7CiAgICAgICAgfSkKCiAgICAgICAgLy91cGRhdGluZyBleGlzdGluZyB2aWV3CiAgICAgICAgJCgiLnVwZGF0ZVZpZXciKS51bmJpbmQoJ2NsaWNrJyk7CiAgICAgICAgJCgnLnVwZGF0ZVZpZXcnKS5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHZpZXdJbmZvID0gZ2VuZXJhdGVWaWV3SW5mbyhmaWx0ZXJJbmRleCk7CiAgICAgICAgICAgIGlmICgkLmluQXJyYXkoJCgnLnZpZXdTZWxlY3QgOnNlbGVjdGVkJykudGV4dCgpLnJlcGxhY2UoIihkZWZhdWx0KSIsICIiKS50cmltKCksIHN5c3RlbURlZmF1bHQpICE9IC0xKSB7CiAgICAgICAgICAgICAgICAkKCcjc2F2ZS12aWV3LW1vZGFsICN2aWV3X2ZpbHRlcnMnKS52YWwoSlNPTi5zdHJpbmdpZnkodmlld0luZm8uZmlsdGVyTWFwKSk7CiAgICAgICAgICAgICAgICAkKCcjc2F2ZS12aWV3LW1vZGFsICN2aWV3X2NvbHVtbkxpc3QnKS52YWwodmlld0luZm8ubm90VmlzaWJsZUNvbHVtbik7CiAgICAgICAgICAgICAgICAkKCcjc2F2ZS12aWV3LW1vZGFsICN2aWV3X2FsZXJ0VHlwZScpLnZhbChhcHBsaWNhdGlvbk5hbWUpOwogICAgICAgICAgICAgICAgJCgnI3NhdmUtdmlldy1tb2RhbCAjdmlld19zb3J0aW5nJykudmFsKEpTT04uc3RyaW5naWZ5KHZpZXdJbmZvLnNvcnRlZENvbHVtbikpOwogICAgICAgICAgICAgICAgJCgnI3NhdmUtdmlldy1tb2RhbCAjdmlld19hZHZhbmNlZF9maWx0ZXInKS52YWwodmlld0luZm8uYWR2YW5jZWRGaWx0ZXIpOwogICAgICAgICAgICAgICAgJCgnI3NhdmUtdmlldy1tb2RhbCAjY3VycmVudF92aWV3X2lkJykudmFsKHZpZXdJZCk7CiAgICAgICAgICAgICAgICAkKCcjc2F2ZS12aWV3LW1vZGFsIC5zYXZlX2J1dHRvbnMnKS5zaG93KCk7CiAgICAgICAgICAgICAgICAkKCcjc2F2ZS12aWV3LW1vZGFsJykubW9kYWwoJ3Nob3cnKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHZhciByZXF1ZXN0ID0gbmV3IE9iamVjdCgpOwogICAgICAgICAgICAgICAgcmVxdWVzdFsnbmFtZSddID0gJCgnLnZpZXdTZWxlY3QgOnNlbGVjdGVkJykudGV4dCgpLnJlcGxhY2UoIihkZWZhdWx0KSIsICIiKS50cmltKCk7CiAgICAgICAgICAgICAgICByZXF1ZXN0WydmaWx0ZXJNYXAnXSA9IEpTT04uc3RyaW5naWZ5KHZpZXdJbmZvLmZpbHRlck1hcCk7CiAgICAgICAgICAgICAgICByZXF1ZXN0Wydjb2x1bW5MaXN0J10gPSB2aWV3SW5mby5ub3RWaXNpYmxlQ29sdW1uLnRvU3RyaW5nKCk7CiAgICAgICAgICAgICAgICByZXF1ZXN0WydhbGVydFR5cGUnXSA9IGFwcGxpY2F0aW9uTmFtZTsKICAgICAgICAgICAgICAgIHJlcXVlc3RbJ2lkJ10gPSAkKCcudmlld1NlbGVjdCcpLnZhbCgpOwogICAgICAgICAgICAgICAgcmVxdWVzdFsnc29ydGluZyddID0gSlNPTi5zdHJpbmdpZnkodmlld0luZm8uc29ydGVkQ29sdW1uKTsKICAgICAgICAgICAgICAgIHJlcXVlc3RbJ2FkdmFuY2VkRmlsdGVyJ10gPSB2aWV3SW5mby5hZHZhbmNlZEZpbHRlcjsKICAgICAgICAgICAgICAgICQuYWpheCh7CiAgICAgICAgICAgICAgICAgICAgdXJsOiB1cGRhdGVWaWV3VXJsLAogICAgICAgICAgICAgICAgICAgIHR5cGU6ICJQT1NUIiwKICAgICAgICAgICAgICAgICAgICBkYXRhOiByZXF1ZXN0LAogICAgICAgICAgICAgICAgICAgIGRhdGFUeXBlOiAianNvbiIsCiAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHBhZ2VVUkwgPSAkKGxvY2F0aW9uKS5hdHRyKCJocmVmIik7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChwYWdlVVJMLmluZGV4T2YoInZpZXdJZCIpICE9IC0xKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24gPSBwYWdlVVJMLnNsaWNlKDAsIHBhZ2VVUkwuaW5kZXhPZigidmlld0lkIikgKyA3KSArIGRhdGEudmlld0lkCiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocGFnZVVSTC5pbmRleE9mKCIjIikgIT0gLTEpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYWdlVVJMID0gcGFnZVVSTC5zbGljZSgwLCBwYWdlVVJMLmluZGV4T2YoIiMiKSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbiA9IHBhZ2VVUkwgKyAiJnZpZXdJZD0iICsgZGF0YS52aWV3SWQKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBpZihkYXRhLmVycm9yTWVzc2FnZSl7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaG93RXJyb3JOb3RpZmljYXRpb24oZGF0YS5lcnJvck1lc3NhZ2UpOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgfQogICAgICAgIH0pOwoKICAgICAgICAvL3NlbGVjdGluZyBhbm90aGVyIHZpZXcKICAgICAgICAkKCcudmlld1NlbGVjdCcpLnVuYmluZCgnY2xpY2snKTsKICAgICAgICAkKCcudmlld1NlbGVjdCcpLm9uKCdjaGFuZ2UnLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHZhciBwYWdlVVJMID0gJChsb2NhdGlvbikuYXR0cigiaHJlZiIpOwogICAgICAgICAgICB2YXIgc2VsZWN0ZWRWaWV3ID0gJCgnLnZpZXdTZWxlY3QnKS52YWwoKTsKICAgICAgICAgICAgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSgnaXNWaWV3Q2FsbCcsICd0cnVlJyk7CiAgICAgICAgICAgIGlmIChwYWdlVVJMLmluZGV4T2YoInZpZXdJZCIpICE9IC0xKSB7CiAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IHBhZ2VVUkwuc2xpY2UoMCwgcGFnZVVSTC5pbmRleE9mKCJ2aWV3SWQiKSArIDcpICsgc2VsZWN0ZWRWaWV3CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBpZiAocGFnZVVSTC5pbmRleE9mKCIjIikgIT0gLTEpIHsKICAgICAgICAgICAgICAgICAgICBwYWdlVVJMID0gcGFnZVVSTC5zbGljZSgwLCBwYWdlVVJMLmluZGV4T2YoIiMiKSkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gcGFnZVVSTCArICImdmlld0lkPSIgKyBzZWxlY3RlZFZpZXcKICAgICAgICAgICAgfQogICAgICAgIH0pOwoKICAgICAgICAvL2RlbGV0aW5nIG9yIGVkaXRpbmcgc2VsZWN0ZWQgdmlldwogICAgICAgICQoJy5lZGl0VmlldycpLnVuYmluZCgnY2xpY2snKTsKICAgICAgICAkKCcuZWRpdFZpZXcnKS5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHZpZXdJbmZvID0gZ2VuZXJhdGVWaWV3SW5mbyhmaWx0ZXJJbmRleCk7CgogICAgICAgICAgICBpZiAoJC5pbkFycmF5KCQoJy52aWV3U2VsZWN0IDpzZWxlY3RlZCcpLnRleHQoKS5yZXBsYWNlKCIoZGVmYXVsdCkiLCAiIikudHJpbSgpLCBzeXN0ZW1EZWZhdWx0KSA9PSAtMSkgewogICAgICAgICAgICAgICAgJCgnI3NhdmUtdmlldy1tb2RhbCAjdmlld19uYW1lJykudmFsKCQoJy52aWV3U2VsZWN0IDpzZWxlY3RlZCcpLnRleHQoKS5yZXBsYWNlKCIoZGVmYXVsdCkiLCAiIikpOwogICAgICAgICAgICAgICAgJCgnI3NhdmUtdmlldy1tb2RhbCAjdmlld19kZWZhdWx0JykucHJvcCgnY2hlY2tlZCcsICgkKCcudmlld1NlbGVjdCA6c2VsZWN0ZWQnKS50ZXh0KCkuaW5kZXhPZigiKGRlZmF1bHQpIikgIT0gLTEpKTsKICAgICAgICAgICAgICAgICQoJyNzYXZlLXZpZXctbW9kYWwgI3ZpZXdfaWQnKS52YWwoJCgnLnZpZXdTZWxlY3QgOnNlbGVjdGVkJykudmFsKCkpOwogICAgICAgICAgICAgICAgJCgnI3NhdmUtdmlldy1tb2RhbCAjdmlld19maWx0ZXJzJykudmFsKEpTT04uc3RyaW5naWZ5KHZpZXdJbmZvLmZpbHRlck1hcCkpOwogICAgICAgICAgICAgICAgJCgnI3NhdmUtdmlldy1tb2RhbCAjdmlld19jb2x1bW5MaXN0JykudmFsKHZpZXdJbmZvLm5vdFZpc2libGVDb2x1bW4pOwogICAgICAgICAgICAgICAgJCgnI3NhdmUtdmlldy1tb2RhbCAjdmlld19zb3J0aW5nJykudmFsKEpTT04uc3RyaW5naWZ5KHZpZXdJbmZvLnNvcnRlZENvbHVtbikpOwogICAgICAgICAgICAgICAgJCgnI3NhdmUtdmlldy1tb2RhbCAjdmlld19hZHZhbmNlZF9maWx0ZXInKS52YWwodmlld0luZm8uYWR2YW5jZWRGaWx0ZXIpOwogICAgICAgICAgICAgICAgJCgnI3NhdmUtdmlldy1tb2RhbCAjdmlld19hbGVydFR5cGUnKS52YWwoYXBwbGljYXRpb25OYW1lKTsKICAgICAgICAgICAgICAgICQoJyNzYXZlLXZpZXctbW9kYWwgLmVkaXRfYnV0dG9ucycpLnNob3coKTsKICAgICAgICAgICAgICAgICQoJyNzYXZlLXZpZXctbW9kYWwnKS5tb2RhbCgnc2hvdycpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgJCgnI2FsZXJ0LXZpZXctbW9kYWwnKS5tb2RhbCgnc2hvdycpOwogICAgICAgICAgICB9CiAgICAgICAgfSkKICAgIH07CgogICAgdmFyIGdlbmVyYXRlVmlld0luZm8gPSBmdW5jdGlvbiAoZmlsdGVySW5kZXgpIHsKICAgICAgICB2YXIgb1RhYmxlID0gJCgnI2FsZXJ0c0RldGFpbHNUYWJsZScpLkRhdGFUYWJsZSgpOwoKICAgICAgICAvL2dlbmVyYXRlIGZpbHRlciB2YWx1ZSBtYXAKICAgICAgICB2YXIgZmlsdGVyTWFwID0gbmV3IE9iamVjdCgpOwogICAgICAgICQuZWFjaChmaWx0ZXJJbmRleCwgZnVuY3Rpb24gKGlkeCwgb2JqKSB7CiAgICAgICAgICAgIHZhciBmaWx0ZXJWYWwgPSB5YWRjZi5leEdldENvbHVtbkZpbHRlclZhbChvVGFibGUsIG9iaik7CiAgICAgICAgICAgIGlmIChmaWx0ZXJWYWwpIHsKICAgICAgICAgICAgICAgIGZpbHRlck1hcFtvYmpdID0gZmlsdGVyVmFsCiAgICAgICAgICAgIH0KICAgICAgICB9KTsKCiAgICAgICAgLy9nZW5lcmF0ZSBjb2x1bW5zIHZpc2libGUgbGlzdAogICAgICAgIHZhciBub3RWaXNpYmxlQ29sdW1uID0gJCgnI2NvbHVtbkluZGV4JykudmFsKCk7CgogICAgICAgIC8vZ2VuZXJhdGUgc29ydGluZyBjb2x1bW4gaW5mbwogICAgICAgIHZhciBzb3J0ZWRDb2x1bW4gPSBuZXcgT2JqZWN0KCk7CiAgICAgICAgaWYgKCQoJyNhbGVydHNEZXRhaWxzVGFibGUnKS5kYXRhVGFibGUoKS5mblNldHRpbmdzKCkuYWFTb3J0aW5nWzBdKSB7CiAgICAgICAgICAgIHZhciBzb3J0ZWRDb2wgPSAkKCcjYWxlcnRzRGV0YWlsc1RhYmxlJykuZGF0YVRhYmxlKCkuZm5TZXR0aW5ncygpLmFhU29ydGluZ1swXVswXTsKICAgICAgICAgICAgdmFyIGNvbHVtbk5hbWUgPSAkKCcjYWxlcnRzRGV0YWlsc1RhYmxlJykuZmluZCgidGgiKS5lcShzb3J0ZWRDb2wpLmF0dHIoImRhdGEtZmllbGQiKTsKICAgICAgICAgICAgdmFyIGluZGV4ID0gMDsKICAgICAgICAgICAgY29sdW1uU2VxLmV2ZXJ5KGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIHZhciBzZXFOYW1lID0gY29sdW1uU2VxW2luZGV4XS5uYW1lOwogICAgICAgICAgICAgICAgaWYgKGNvbHVtbk5hbWUgPT0gc2VxTmFtZSkgewogICAgICAgICAgICAgICAgICAgIHNvcnRlZENvbCA9IGNvbHVtblNlcVtpbmRleF0uc2VxOwogICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGluZGV4Kys7CiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIHZhciBzb3J0ZWREaXIgPSAkKCcjYWxlcnRzRGV0YWlsc1RhYmxlJykuZGF0YVRhYmxlKCkuZm5TZXR0aW5ncygpLmFhU29ydGluZ1swXVsxXTsKICAgICAgICAgICAgc29ydGVkQ29sdW1uW3NvcnRlZENvbF0gPSBzb3J0ZWREaXI7CiAgICAgICAgfQoKICAgICAgICAvL2dlbmVyYXRlIGFkdmFuY2VkIGZpbHRlciBpbmZvCiAgICAgICAgdmFyIGFkdmFuY2VkRml0ZXJJZCA9ICQoJy5hZHZhbmNlZC1maWx0ZXItZHJvcGRvd24nKS52YWwoKTsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICAnZmlsdGVyTWFwJzogZmlsdGVyTWFwLAogICAgICAgICAgICAnbm90VmlzaWJsZUNvbHVtbic6IG5vdFZpc2libGVDb2x1bW4sCiAgICAgICAgICAgICdzb3J0ZWRDb2x1bW4nOiBzb3J0ZWRDb2x1bW4sCiAgICAgICAgICAgICdhZHZhbmNlZEZpbHRlcic6IGFkdmFuY2VkRml0ZXJJZAogICAgICAgIH0KICAgIH07CgogICAgdmFyIGNyZWF0ZVNvcnRpbmdNYXAgPSBmdW5jdGlvbiAoaW5mb0tleSwgdmlld05hbWUpIHsKICAgICAgICB2YXIgc29ydGluZ01hcCA9IFtdOwogICAgICAgIHZhciBzb3J0aW5nID0ge307CiAgICAgICAgdmFyIHNlc3Npb25TdG9yZWRWYWw7CiAgICAgICAgaWYgKHNlc3Npb25TdG9yYWdlLmdldEl0ZW0odmlld05hbWUpID09ICQoJy52aWV3U2VsZWN0IDpzZWxlY3RlZCcpLnRleHQoKS5yZXBsYWNlKCIoZGVmYXVsdCkiLCAiIikudHJpbSgpKSB7CiAgICAgICAgICAgIHNlc3Npb25TdG9yZWRWYWwgPSBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKGluZm9LZXkpOwogICAgICAgIH0KICAgICAgICBpZiAoc2Vzc2lvblN0b3JlZFZhbCkgewogICAgICAgICAgICBzb3J0aW5nID0gJC5wYXJzZUpTT04oc2Vzc2lvblN0b3JlZFZhbCk7CiAgICAgICAgfSBlbHNlIGlmICgkKCIjc29ydGVkQ29sdW1uIikudmFsKCkgIT0gIiIgJiYgJCgiI3NvcnRlZENvbHVtbiIpLnZhbCgpICE9ICJ7fSIgJiYgY2FsbGluZ1NjcmVlbiA9PSAncmV2aWV3JykgewogICAgICAgICAgICBzb3J0aW5nID0gJC5wYXJzZUpTT04oJCgnI3NvcnRlZENvbHVtbicpLnZhbCgpKTsKICAgICAgICB9CiAgICAgICAgJC5lYWNoKHNvcnRpbmcsIGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7CiAgICAgICAgICAgIHNvcnRpbmdNYXAucHVzaChbcGFyc2VJbnQoa2V5KSwgdmFsdWVdKQogICAgICAgIH0pOwogICAgICAgIHJldHVybiBzb3J0aW5nTWFwCiAgICB9OwoKICAgIHZhciBjcmVhdGVGaWx0ZXJNYXAgPSBmdW5jdGlvbiAoaW5mb0tleSwgdmlld05hbWUpIHsKICAgICAgICB2YXIgZmlsdGVyc1ZhbHVlID0gW107CiAgICAgICAgdmFyIGZpbHRlck1hcCA9IHt9OwogICAgICAgIHZhciBzZXNzaW9uU3RvcmVkVmFsOwogICAgICAgIGlmIChzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKHZpZXdOYW1lKSA9PSAkKCcudmlld1NlbGVjdCA6c2VsZWN0ZWQnKS50ZXh0KCkucmVwbGFjZSgiKGRlZmF1bHQpIiwgIiIpLnRyaW0oKSkgewogICAgICAgICAgICBzZXNzaW9uU3RvcmVkVmFsID0gc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbShpbmZvS2V5KTsKICAgICAgICB9CiAgICAgICAgaWYgKHNlc3Npb25TdG9yZWRWYWwgJiYgc2Vzc2lvblN0b3JlZFZhbCAhPSB7fSkgewogICAgICAgICAgICBmaWx0ZXJNYXAgPSAkLnBhcnNlSlNPTihzZXNzaW9uU3RvcmVkVmFsKTsKICAgICAgICB9IGVsc2UgaWYgKCQoJyNmaWx0ZXJNYXAnKS52YWwoKSAhPSAiIiAmJiAkKCcjZmlsdGVyTWFwJykudmFsKCkgIT0gInt9IikgewogICAgICAgICAgICBmaWx0ZXJNYXAgPSAkLnBhcnNlSlNPTigkKCcjZmlsdGVyTWFwJykudmFsKCkpOwogICAgICAgIH0KICAgICAgICAkLmVhY2goZmlsdGVyTWFwLCBmdW5jdGlvbiAoa2V5LCB2YWx1ZSkgewogICAgICAgICAgICB2YXIgZmlsdGVyQXJyID0gW3BhcnNlSW50KGtleSksIHZhbHVlXTsKICAgICAgICAgICAgZmlsdGVyc1ZhbHVlLnB1c2goZmlsdGVyQXJyKQogICAgICAgIH0pOwogICAgICAgIHJldHVybiBmaWx0ZXJzVmFsdWUKICAgIH07CgogICAgdmFyIGNyZWF0ZUxpc3RPZkluZGV4ID0gZnVuY3Rpb24gKGluZm9LZXksIGlzRXZkYXMsIHZpZXdOYW1lKSB7CiAgICAgICAgdmFyIGxvaSA9IFtdOwogICAgICAgIHZhciBjb2x1bW5JbmRleCA9IFtdCiAgICAgICAgdmFyIHNlc3Npb25TdG9yZWRWYWw7CiAgICAgICAgaWYgKHNlc3Npb25TdG9yYWdlLmdldEl0ZW0odmlld05hbWUpID09ICQoJy52aWV3U2VsZWN0IDpzZWxlY3RlZCcpLnRleHQoKS5yZXBsYWNlKCIoZGVmYXVsdCkiLCAiIikudHJpbSgpKSB7CiAgICAgICAgICAgIHNlc3Npb25TdG9yZWRWYWwgPSBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKGluZm9LZXkpOwogICAgICAgIH0KICAgICAgICBpZiAoY2FsbGluZ1NjcmVlbiA9PSAncmV2aWV3JykgewogICAgICAgICAgICBpZiAoc2Vzc2lvblN0b3JlZFZhbCkgewogICAgICAgICAgICAgICAgY29sdW1uSW5kZXggPSBzZXNzaW9uU3RvcmVkVmFsLnNwbGl0KCcsJykKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGNvbHVtbkluZGV4ID0gJCgnI2NvbHVtbkluZGV4JykudmFsKCkuc3BsaXQoJywnKTsKICAgICAgICAgICAgfQogICAgICAgICAgICAkLmVhY2goY29sdW1uSW5kZXgsIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIGlmIChpc0V2ZGFzKSB7CiAgICAgICAgICAgICAgICAgICAgbG9pLnB1c2gocGFyc2VJbnQodGhpcykpCiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIGxvaS5wdXNoKHBhcnNlSW50KHRoaXMpICsgMSkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICAgIHJldHVybiBsb2kKICAgIH07CgogICAgdmFyIHNldFNvcnRPcmRlciA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAkKCIjYWxlcnRzRGV0YWlsc1RhYmxlUm93Iikub24oJ21vdXNlZG93bicsICd0aCcsIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgaW5kZXggPSAkKHRoaXMpLmF0dHIoImRhdGEtY29sdW1uLWluZGV4Iik7CiAgICAgICAgICAgIGRpciA9ICdhc2MnOwogICAgICAgICAgICBpZiAoJCh0aGlzKS5oYXNDbGFzcygnc29ydGluZ19hc2MnKSkgewogICAgICAgICAgICAgICAgZGlyID0gJ2Rlc2MnCiAgICAgICAgICAgIH0gZWxzZSBpZiAoJCh0aGlzKS5oYXNDbGFzcygnc29ydGluZ19kZXNjJykpIHsKICAgICAgICAgICAgICAgIGRpciA9ICdhc2MnCiAgICAgICAgICAgIH0KICAgICAgICAgICAgaXNWaWV3SW5zdGFuY2UgPSAwOwogICAgICAgIH0pOwogICAgfTsKCiAgICB2YXIgb3BlbkFsZXJ0VGFnTW9kYWwgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgJChkb2N1bWVudCkub24oJ2NsaWNrJywgJy5lZGl0QWxlcnRUYWdzJywgZnVuY3Rpb24gKGV2dCkgewogICAgICAgICAgICB2YXIgcGFyZW50X3JvdyA9ICQoZXZlbnQudGFyZ2V0KS5jbG9zZXN0KCd0cicpOwogICAgICAgICAgICB2YXIgaW5kZXggPSAkKHRoaXMpLmNsb3Nlc3QoJ3RyJykuaW5kZXgoKTsKICAgICAgICAgICAgdmFyIHJvd09iamVjdCA9IHRhYmxlLnJvd3MoaW5kZXgpLmRhdGEoKVswXTsKICAgICAgICAgICAgdmFyIGFsZXJ0SWQgPSByb3dPYmplY3QuaWQ7CiAgICAgICAgICAgIHZhciBleGVjQ29uZmlnSWQgPSBwYXJlbnRfcm93LmZpbmQoJy5leGVjQ29uZmlnSWQnKS5hdHRyKCJ2YWx1ZSIpOwogICAgICAgICAgICAkLmFqYXgoewogICAgICAgICAgICAgICAgdXJsOiBmZXRjaFRhZ3NVcmwsCiAgICAgICAgICAgICAgICBkYXRhOiB7CiAgICAgICAgICAgICAgICAgICAgYWxlcnRJZDogYWxlcnRJZAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXN1bHQpIHsKICAgICAgICAgICAgICAgICAgICB2YXIgYWxlcnRUYWdNb2RhbE9iaiA9ICQoJyNhbGVydFRhZ01vZGFsJyk7CiAgICAgICAgICAgICAgICAgICAgYWxlcnRUYWdNb2RhbE9iai5maW5kKCcjc2luZ2xlQWxlcnRUYWdzJykuc2VsZWN0Mih7CiAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiAiQWRkIFRhZ3MiLAogICAgICAgICAgICAgICAgICAgICAgICBtdWx0aXBsZTogdHJ1ZSwKICAgICAgICAgICAgICAgICAgICAgICAgdGFnczogdHJ1ZSwKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogcmVzdWx0LnRhZ0xpc3QKCiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgYWxlcnRUYWdNb2RhbE9iai5tb2RhbCgnc2hvdycpOwogICAgICAgICAgICAgICAgICAgIGFsZXJ0VGFnTW9kYWxPYmouZmluZCgnI3NpbmdsZUFsZXJ0VGFncycpLnZhbChyZXN1bHQuYWxlcnRUYWdMaXN0KTsKICAgICAgICAgICAgICAgICAgICBhbGVydFRhZ01vZGFsT2JqLmZpbmQoJyNzaW5nbGVBbGVydFRhZ3MnKS50cmlnZ2VyKCdjaGFuZ2UnKTsKICAgICAgICAgICAgICAgICAgICBhbGVydFRhZ01vZGFsT2JqLmZpbmQoIi5hZGRUYWdzIikudW5iaW5kKCkuY2xpY2soZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICAgICAgICAkLmFqYXgoewogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiBzYXZlVGFnVXJsLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsZXJ0VGFnczogSlNPTi5zdHJpbmdpZnkoYWxlcnRUYWdNb2RhbE9iai5maW5kKCcjc2luZ2xlQWxlcnRUYWdzJykudmFsKCkpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsZXJ0SWQ6IGFsZXJ0SWQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhlY0NvbmZpZ0lkOiBleGVjQ29uZmlnSWQKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50VHlwZTogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlc3VsdCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhYmxlLmFqYXgucmVsb2FkKCkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgfTsKCiAgICB2YXIgb3BlblNpbmdsZUFsZXJ0VGFnTW9kYWwgPSBmdW5jdGlvbiAodGFibGVPYmosIHRhZ3NPYmopIHsKICAgICAgICAkKGRvY3VtZW50KS5vbignY2xpY2snLCAnLmVkaXRBbGVydFRhZ3MnLCBmdW5jdGlvbiAoZXZlbnQpIHsKICAgICAgICAgICAgdmFyIHBhcmVudF9yb3cgPSAkKGV2ZW50LnRhcmdldCkuY2xvc2VzdCgndHInKTsKICAgICAgICAgICAgdmFyIGluZGV4ID0gJCh0aGlzKS5jbG9zZXN0KCd0cicpLmluZGV4KCk7CiAgICAgICAgICAgIGlmIChpc0Fic3RyYWN0Vmlld09yQ2FzZVZpZXcoaW5kZXgpKSB7CiAgICAgICAgICAgICAgICBpbmRleCA9IGluZGV4IC8gMgogICAgICAgICAgICB9CiAgICAgICAgICAgIHZhciByb3dPYmplY3QgPSB0YWJsZU9iai5yb3dzKGluZGV4KS5kYXRhKClbMF07CiAgICAgICAgICAgIHZhciBhbGVydElkID0gcm93T2JqZWN0LmlkOwogICAgICAgICAgICB2YXIgZXhlY0NvbmZpZ0lkID0gcGFyZW50X3Jvdy5maW5kKCcuZXhlY0NvbmZpZ0lkJykuYXR0cigidmFsdWUiKTsKICAgICAgICAgICAgdmFyIGFsZXJ0VGFnTW9kYWxPYmogPSAkKCcjYWxlcnRUYWdNb2RhbCcpOwogICAgICAgICAgICB2YXIgJHNpbmdsZUNhc2VBbGVydFRhZ3MgPSBhbGVydFRhZ01vZGFsT2JqLmZpbmQoJyNzaW5nbGVBbGVydFRhZ3MnKTsKICAgICAgICAgICAgdmFyICRnbG9iYWxUYWdzID0gYWxlcnRUYWdNb2RhbE9iai5maW5kKCcjZ2xvYmFsVGFncycpOwogICAgICAgICAgICBhcHBseVNlbGVjdDJGb3JUYWdzKCRzaW5nbGVDYXNlQWxlcnRUYWdzLCBmZXRjaFRhZ3NVcmwsICdDYXNlIFNlcmllcyBUYWdzJywgdHJ1ZSk7CiAgICAgICAgICAgIGFwcGx5U2VsZWN0MkZvclRhZ3MoJGdsb2JhbFRhZ3MsIGZldGNoVGFnc1VybCwgJ0dsb2JhbCBUYWdzJywgZmFsc2UpOwogICAgICAgICAgICAkc2luZ2xlQ2FzZUFsZXJ0VGFncy5maW5kKCdvcHRpb24nKS5yZW1vdmUoKQogICAgICAgICAgICAkZ2xvYmFsVGFncy5maW5kKCdvcHRpb24nKS5yZW1vdmUoKQogICAgICAgICAgICAkc2luZ2xlQ2FzZUFsZXJ0VGFncy52YWwobnVsbCkudHJpZ2dlcigiY2hhbmdlIik7CiAgICAgICAgICAgICRnbG9iYWxUYWdzLnZhbChudWxsKS50cmlnZ2VyKCJjaGFuZ2UiKTsKICAgICAgICAgICAgJC5lYWNoKHJvd09iamVjdC5jYXNlU2VyaWVzVGFncywgZnVuY3Rpb24gKGluZGV4LCB2YWx1ZSkgewogICAgICAgICAgICAgICAgdmFyIG9wdGlvbiA9IG5ldyBPcHRpb24odmFsdWUsIHZhbHVlLCB0cnVlLCB0cnVlKTsKICAgICAgICAgICAgICAgICRzaW5nbGVDYXNlQWxlcnRUYWdzLmFwcGVuZChvcHRpb24pOwogICAgICAgICAgICB9KTsKICAgICAgICAgICAgJC5lYWNoKHJvd09iamVjdC5nbG9iYWxUYWdzLCBmdW5jdGlvbiAoaW5kZXgsIHZhbHVlKSB7CiAgICAgICAgICAgICAgICB2YXIgb3B0aW9uID0gbmV3IE9wdGlvbih2YWx1ZSwgdmFsdWUsIHRydWUsIHRydWUpOwogICAgICAgICAgICAgICAgJGdsb2JhbFRhZ3MuYXBwZW5kKG9wdGlvbik7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICBhbGVydFRhZ01vZGFsT2JqLmZpbmQoJyNzaW5nbGVBbGVydFRhZ3MnKS50cmlnZ2VyKCdjaGFuZ2UnKTsKICAgICAgICAgICAgYWxlcnRUYWdNb2RhbE9iai5maW5kKCcjZ2xvYmFsVGFncycpLnRyaWdnZXIoJ2NoYW5nZScpOwogICAgICAgICAgICB2YXIgZW5hYmxlQ2FzZVNlcmllc1RhZ3MgPSByb3dPYmplY3QuaXNDYXNlU2VyaWVzR2VuZXJhdGVkOwogICAgICAgICAgICBpZiAoIWVuYWJsZUNhc2VTZXJpZXNUYWdzKSB7CiAgICAgICAgICAgICAgICBhbGVydFRhZ01vZGFsT2JqLmZpbmQoJyNzaW5nbGVBbGVydFRhZ3MnKS5hdHRyKCdkaXNhYmxlZCcsICcnKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBhbGVydFRhZ01vZGFsT2JqLm1vZGFsKCdzaG93Jyk7CiAgICAgICAgICAgIGFsZXJ0VGFnTW9kYWxPYmouZmluZCgiLmFkZFRhZ3MiKS51bmJpbmQoKS5jbGljayhmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAkLmFqYXgoewogICAgICAgICAgICAgICAgICAgIHVybDogc2F2ZVRhZ1VybCwKICAgICAgICAgICAgICAgICAgICBkYXRhOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIGFsZXJ0VGFnczogSlNPTi5zdHJpbmdpZnkoYWxlcnRUYWdNb2RhbE9iai5maW5kKCcjc2luZ2xlQWxlcnRUYWdzJykudmFsKCkpLAogICAgICAgICAgICAgICAgICAgICAgICBnbG9iYWxUYWdzOiBKU09OLnN0cmluZ2lmeShhbGVydFRhZ01vZGFsT2JqLmZpbmQoJyNnbG9iYWxUYWdzJykudmFsKCkpLAogICAgICAgICAgICAgICAgICAgICAgICBkZWxldGVkQ2FzZVNlcmllc1RhZ3M6IEpTT04uc3RyaW5naWZ5KHRhZ3NPYmouZGVsZXRlZENhc2VTZXJpZXNUYWdzKSwKICAgICAgICAgICAgICAgICAgICAgICAgZGVsZXRlZEdsb2JhbFRhZ3M6IEpTT04uc3RyaW5naWZ5KHRhZ3NPYmouZGVsZXRlZEdsb2JhbFRhZ3MpLAogICAgICAgICAgICAgICAgICAgICAgICBhZGRlZENhc2VTZXJpZXNUYWdzOiBKU09OLnN0cmluZ2lmeSh0YWdzT2JqLmFkZGVkQ2FzZVNlcmllc1RhZ3MpLAogICAgICAgICAgICAgICAgICAgICAgICBhZGRlZEdsb2JhbFRhZ3M6IEpTT04uc3RyaW5naWZ5KHRhZ3NPYmouYWRkZWRHbG9iYWxUYWdzKSwKICAgICAgICAgICAgICAgICAgICAgICAgYWxlcnRJZDogYWxlcnRJZCwKICAgICAgICAgICAgICAgICAgICAgICAgZXhlY0NvbmZpZ0lkOiBleGVjQ29uZmlnSWQKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIGNvbnRlbnRUeXBlOiAnYXBwbGljYXRpb24vanNvbicsCiAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHBheWxvYWQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHBheWxvYWQuc3RhdHVzKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YWJsZU9iai5hamF4LnJlbG9hZCgpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgJC5Ob3RpZmljYXRpb24ubm90aWZ5KCdzdWNjZXNzJywgJ3RvcCByaWdodCcsICJTdWNjZXNzIiwgcGF5bG9hZC5tZXNzYWdlLCB7YXV0b0hpZGVEZWxheTogMjAwMH0pOwogICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgJC5Ob3RpZmljYXRpb24ubm90aWZ5KCdlcnJvcicsICd0b3AgcmlnaHQnLCAiRXJyb3IiLCBwYXlsb2FkLm1lc3NhZ2UsIHthdXRvSGlkZURlbGF5OiAyMDAwfSk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgJCgnI3NpbmdsZS1jYXNlLWFsZXJ0LXNwaW5uZXInKS5hZGRDbGFzcygnaGlkZGVuJyk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAkKCcjc2luZ2xlLWNhc2UtYWxlcnQtc3Bpbm5lcicpLnJlbW92ZUNsYXNzKCdoaWRkZW4nKTsKICAgICAgICAgICAgfSk7CiAgICAgICAgfSk7CiAgICB9OwoKICAgIHZhciBwb3B1bGF0ZUFkdmFuY2VkRmlsdGVyU2VsZWN0ID0gZnVuY3Rpb24gKGFsZXJ0VHlwZSkgewoKICAgICAgICAkKCIuYWR2YW5jZWQtZmlsdGVyLWRyb3Bkb3duIikuc2VsZWN0Mih7CiAgICAgICAgICAgIHBsYWNlaG9sZGVyOiAkLmkxOG4uXygnc2VsZWN0T25lJyksCiAgICAgICAgICAgIGFsbG93Q2xlYXI6IHRydWUsCiAgICAgICAgICAgIGFqYXg6IHsKICAgICAgICAgICAgICAgIHVybDogZmV0Y2hBZHZGaWx0ZXJVcmwsCiAgICAgICAgICAgICAgICBkYXRhVHlwZTogJ2pzb24nLAogICAgICAgICAgICAgICAgdHlwZTogIkdFVCIsCiAgICAgICAgICAgICAgICBxdWlldE1pbGxpczogNTAsCiAgICAgICAgICAgICAgICBkYXRhOiBmdW5jdGlvbiAocGFyYW1zKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgICAgICAgICAgICAgYWxlcnRUeXBlOiBhbGVydFR5cGUsCiAgICAgICAgICAgICAgICAgICAgICAgIHRlcm06IHBhcmFtcy50ZXJtIHx8ICcnLAogICAgICAgICAgICAgICAgICAgICAgICBwYWdlOiBwYXJhbXMucGFnZSB8fCAxLAogICAgICAgICAgICAgICAgICAgICAgICBtYXg6IHBhcmFtcy5tYXggfHwgMzAKICAgICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHByb2Nlc3NSZXN1bHRzOiBmdW5jdGlvbiAoZGF0YSwgcGFyYW1zKSB7CiAgICAgICAgICAgICAgICAgICAgcGFyYW1zLnBhZ2UgPSBwYXJhbXMucGFnZSB8fCAxOwogICAgICAgICAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdHM6ICQubWFwKGRhdGEubGlzdCwgZnVuY3Rpb24gKGZpbHRlcikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0OiBmaWx0ZXIubmFtZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZDogZmlsdGVyLmlkCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgICAgICBwYWdpbmF0aW9uOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb3JlOiAocGFyYW1zLnBhZ2UgKiAzMCkgPCBkYXRhLnRvdGFsQ291bnQKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9KTsKCiAgICAgICAgLy9zZWxlY3QgYWR2YW5jZWQgZmlsdGVyIGJhc2VkIG9uIGN1cnJlbnQgdmlldwogICAgICAgIGlmICgkKCcjYWR2YW5jZWRGaWx0ZXJWaWV3JykudmFsKCkpIHsKICAgICAgICAgICAgdmFyIGFkdmFuY2VkRmlsdGVyVmlldyA9ICQucGFyc2VKU09OKCQoJyNhZHZhbmNlZEZpbHRlclZpZXcnKS52YWwoKSk7CiAgICAgICAgICAgIHZhciBvcHRpb24gPSBuZXcgT3B0aW9uKGFkdmFuY2VkRmlsdGVyVmlldy5uYW1lLCBhZHZhbmNlZEZpbHRlclZpZXcuaWQsIHRydWUsIHRydWUpOwogICAgICAgICAgICAkKCIuYWR2YW5jZWQtZmlsdGVyLWRyb3Bkb3duIikuYXBwZW5kKG9wdGlvbikudHJpZ2dlcignY2hhbmdlJyk7CiAgICAgICAgfQoKICAgICAgICAkKCcjYWRkQWR2YW5jZWRGaWx0ZXInKS5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHNpZ25hbC5hZHZhbmNlZEZpbHRlci5pbml0aWFsaXplQWR2YW5jZWRGaWx0ZXJzKCQoJyNjcmVhdGVBZHZhbmNlZEZpbHRlck1vZGFsJykpOwogICAgICAgICAgICAkKCcjY3JlYXRlQWR2YW5jZWRGaWx0ZXJNb2RhbCAjc2VsZWN0T3BlcmF0b3InKS5lbXB0eSgpLmFwcGVuZCgnPG9wdGlvbiBzZWxlY3RlZD0ic2VsZWN0ZWQiIHZhbHVlPSIiPlNlbGVjdCBPcGVyYXRvcjwvb3B0aW9uPicpOwogICAgICAgICAgICAkKCcjY3JlYXRlQWR2YW5jZWRGaWx0ZXJNb2RhbCAjbmFtZScpLnZhbCgnJyk7CiAgICAgICAgICAgICQoJyNjcmVhdGVBZHZhbmNlZEZpbHRlck1vZGFsICNkZXNjcmlwdGlvbicpLnZhbCgnJyk7CiAgICAgICAgICAgICQoJyNjcmVhdGVBZHZhbmNlZEZpbHRlck1vZGFsICNxdWVyeUpTT04nKS52YWwoJycpOwogICAgICAgICAgICAkKCcjY3JlYXRlQWR2YW5jZWRGaWx0ZXJNb2RhbCAjYWxlcnRUeXBlJykudmFsKCcnKTsKICAgICAgICAgICAgJCgnI2NyZWF0ZUFkdmFuY2VkRmlsdGVyTW9kYWwgI2J1aWxkZXJBbGwnKS5maW5kKCcuZXhwcmVzc2lvbicpLnJlbW92ZSgpOwogICAgICAgICAgICAkKCcjY3JlYXRlQWR2YW5jZWRGaWx0ZXJNb2RhbCAuZGVsZXRlQWR2RmlsdGVyJykuYWRkQ2xhc3MoJ2hpZGUnKTsKICAgICAgICAgICAgJCgnI2NyZWF0ZUFkdmFuY2VkRmlsdGVyTW9kYWwgLmZpbHRlcnNXaXRob3V0U2F2aW5nJykucmVtb3ZlQ2xhc3MoJ2hpZGUnKTsKICAgICAgICAgICAgJCgnI2NyZWF0ZUFkdmFuY2VkRmlsdGVyTW9kYWwnKS5tb2RhbCgnc2hvdycpOwoKICAgICAgICB9KTsKCiAgICAgICAgJCgnI2VkaXRBZHZhbmNlZEZpbHRlcicpLnVuYmluZCgpLm9uKCdjbGljaycsIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgdmFyIGFkdmFuY2VkRmlsdGVySWQgPSAkKCcuYWR2YW5jZWQtZmlsdGVyLWRyb3Bkb3duJykudmFsKCk7CiAgICAgICAgICAgIGlmIChhZHZhbmNlZEZpbHRlcklkKSB7CiAgICAgICAgICAgICAgICAkLmFqYXgoewogICAgICAgICAgICAgICAgICAgIHVybDogZmV0Y2hBZHZhbmNlZEZpbHRlckluZm9VcmwsCiAgICAgICAgICAgICAgICAgICAgZGF0YTogeydhZHZhbmNlZEZpbHRlci5pZCc6IGFkdmFuY2VkRmlsdGVySWR9LAogICAgICAgICAgICAgICAgICAgIGRhdGFUeXBlOiAnanNvbicsCiAgICAgICAgICAgICAgICAgICAgdHlwZTogIkdFVCIsCiAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlc3VsdCkgewogICAgICAgICAgICAgICAgICAgICAgICAkKCcjY3JlYXRlQWR2YW5jZWRGaWx0ZXJNb2RhbCAjc2VsZWN0T3BlcmF0b3InKS5lbXB0eSgpLmFwcGVuZCgnPG9wdGlvbiBzZWxlY3RlZD0ic2VsZWN0ZWQiIHZhbHVlPSIiPlNlbGVjdCBPcGVyYXRvcjwvb3B0aW9uPicpOwogICAgICAgICAgICAgICAgICAgICAgICAkKCcjY3JlYXRlQWR2YW5jZWRGaWx0ZXJNb2RhbCAjbmFtZScpLnZhbChyZXN1bHQubmFtZSk7CiAgICAgICAgICAgICAgICAgICAgICAgICQoJyNjcmVhdGVBZHZhbmNlZEZpbHRlck1vZGFsICNkZXNjcmlwdGlvbicpLnZhbChyZXN1bHQuZGVzY3JpcHRpb24pOwogICAgICAgICAgICAgICAgICAgICAgICAkKCcjY3JlYXRlQWR2YW5jZWRGaWx0ZXJNb2RhbCAjcXVlcnlKU09OJykudmFsKHJlc3VsdC5KU09OUXVlcnkpOwogICAgICAgICAgICAgICAgICAgICAgICAkKCcjY3JlYXRlQWR2YW5jZWRGaWx0ZXJNb2RhbCAjYWxlcnRUeXBlJykudmFsKGFsZXJ0VHlwZSk7CiAgICAgICAgICAgICAgICAgICAgICAgICQoJyNjcmVhdGVBZHZhbmNlZEZpbHRlck1vZGFsICNmaWx0ZXJJZCcpLnZhbChhZHZhbmNlZEZpbHRlcklkKTsKICAgICAgICAgICAgICAgICAgICAgICAgJCgnI2NyZWF0ZUFkdmFuY2VkRmlsdGVyTW9kYWwgLmZpbHRlcnNXaXRob3V0U2F2aW5nJykuYWRkQ2xhc3MoJ2hpZGUnKTsKICAgICAgICAgICAgICAgICAgICAgICAgJCgnI2NyZWF0ZUFkdmFuY2VkRmlsdGVyTW9kYWwgLmRlbGV0ZUFkdkZpbHRlcicpLnJlbW92ZUNsYXNzKCdoaWRlJyk7CiAgICAgICAgICAgICAgICAgICAgICAgICQoJyNjcmVhdGVBZHZhbmNlZEZpbHRlck1vZGFsIC5tb2RhbC10aXRsZScpLmh0bWwoIkVkaXQgRmlsdGVyIik7CiAgICAgICAgICAgICAgICAgICAgICAgIHNpZ25hbC5hZHZhbmNlZEZpbHRlci5pbml0aWFsaXplQWR2YW5jZWRGaWx0ZXJzKCk7CiAgICAgICAgICAgICAgICAgICAgICAgICQoJyNjcmVhdGVBZHZhbmNlZEZpbHRlck1vZGFsJykubW9kYWwoJ3Nob3cnKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQogICAgICAgIH0pOwoKICAgICAgICAkKCIuYWR2YW5jZWQtZmlsdGVyLWRyb3Bkb3duIikub24oImNoYW5nZSIsIGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICAgIHRhYmxlLmFqYXgucmVsb2FkKCkKICAgICAgICB9KTsKICAgIH07CgogICAgcmV0dXJuIHsKICAgICAgICBvcGVuQWxlcnRDb21tZW50TW9kYWw6IG9wZW5BbGVydENvbW1lbnRNb2RhbCwKICAgICAgICBvcGVuQ2FzZUhpc3RvcnlNb2RhbDogb3BlbkNhc2VIaXN0b3J5TW9kYWwsCiAgICAgICAgcmVzdGFydFJldmlldzogcmVzdGFydFJldmlldywKICAgICAgICBvcGVuU2ltaWxhckNhc2VzTW9kYWw6IG9wZW5TaW1pbGFyQ2FzZXNNb2RhbCwKICAgICAgICBhcHBseUJ1c2luZXNzUnVsZXM6IGFwcGx5QnVzaW5lc3NSdWxlcywKICAgICAgICBzaG93QXR0YWNobWVudE1vZGFsOiBvcGVuQXR0YWNobWVudE1vZGFsLAogICAgICAgIGJpbmRHcmlkRHluYW1pY0ZpbHRlcnM6IGJpbmRHcmlkRHluYW1pY0ZpbHRlcnMsCiAgICAgICAgZW5hYmxlTWVudVRvb2x0aXBzOiBlbmFibGVNZW51VG9vbHRpcHMsCiAgICAgICAgc29ydEljb25IYW5kbGVyOiBzb3J0SWNvbkhhbmRsZXIsCiAgICAgICAgaXNBbGVydFBlcnNpc3RlZEluU2Vzc2lvblN0b3JhZ2U6IGlzQWxlcnRQZXJzaXN0ZWRJblNlc3Npb25TdG9yYWdlLAogICAgICAgIHJlbW92ZUZpbHRlcnNGcm9tU2Vzc2lvblN0b3JhZ2U6IHJlbW92ZUZpbHRlcnNGcm9tU2Vzc2lvblN0b3JhZ2UsCiAgICAgICAgb3BlblNhdmVWaWV3TW9kYWw6IG9wZW5TYXZlVmlld01vZGFsLAogICAgICAgIGNyZWF0ZVNvcnRpbmdNYXA6IGNyZWF0ZVNvcnRpbmdNYXAsCiAgICAgICAgY3JlYXRlRmlsdGVyTWFwOiBjcmVhdGVGaWx0ZXJNYXAsCiAgICAgICAgY3JlYXRlTGlzdE9mSW5kZXg6IGNyZWF0ZUxpc3RPZkluZGV4LAogICAgICAgIG9wZW5BbGVydFRhZ01vZGFsOiBvcGVuQWxlcnRUYWdNb2RhbCwKICAgICAgICBzZXRTb3J0T3JkZXI6IHNldFNvcnRPcmRlciwKICAgICAgICBvcGVuU2luZ2xlQWxlcnRUYWdNb2RhbDogb3BlblNpbmdsZUFsZXJ0VGFnTW9kYWwsCiAgICAgICAgZ2VuZXJhdGVWaWV3SW5mbzogZ2VuZXJhdGVWaWV3SW5mbywKICAgICAgICBwb3B1bGF0ZUFkdmFuY2VkRmlsdGVyU2VsZWN0OiBwb3B1bGF0ZUFkdmFuY2VkRmlsdGVyU2VsZWN0CiAgICB9Cgp9KSgpOwoKZnVuY3Rpb24gc2hvd0Vycm9yTWVzc2FnZUluTW9kYWwoJG1vZGFsLCB0ZXh0KSB7CiAgICBjbGVhcl9lcnJvcnMoKTsKICAgIGlmICh0ZXh0KSB7CiAgICAgICAgdGV4dCA9IHRleHQ7CiAgICB9IGVsc2UgewogICAgICAgIHRleHQgPSAnUGxlYXNlIGZpbGwgIHRoZSByZXF1aXJlZCBGaWVsZHMnOwogICAgfQogICAgdmFyIGFsZXJ0SHRtbCA9IGdldEVycm9yTWVzc2FnZUh0bWwodGV4dCk7CiAgICAkbW9kYWwuZmluZCgnLm1vZGFsLWJvZHknKS5wcmVwZW5kKGFsZXJ0SHRtbCk7Cn0KCmZ1bmN0aW9uIGdldEVycm9yTWVzc2FnZUh0bWwobXNnKSB7CiAgICB2YXIgYWxlcnRIdG1sID0gJzxkaXYgY2xhc3M9ImFsZXJ0IGFsZXJ0LWRhbmdlciBhbGVydC1kaXNtaXNzaWJsZSIgcm9sZT0iYWxlcnQiPiAnICsKICAgICAgICAnPGJ1dHRvbiB0eXBlPSJidXR0b24iIGNsYXNzPSJjbG9zZSIgZGF0YS1kaXNtaXNzPSJhbGVydCI+ICcgKwogICAgICAgICc8c3BhbiBhcmlhLWhpZGRlbj0idHJ1ZSI+JnRpbWVzOzwvc3Bhbj4gJyArCiAgICAgICAgJzxzcGFuIGNsYXNzPSJzci1vbmx5Ij48ZzptZXNzYWdlIGNvZGU9ImRlZmF1bHQuYnV0dG9uLmNsb3NlLmxhYmVsIiAvPjwvc3Bhbj4gJyArCiAgICAgICAgJzwvYnV0dG9uPiAnICsgbXNnOwogICAgJzwvZGl2Pic7CiAgICByZXR1cm4gYWxlcnRIdG1sOwp9Cgp2YXIgY2xlYXJfZXJyb3JzID0gZnVuY3Rpb24gKCkgewogICAgJCgnLm1vZGFsIC5tb2RhbC1ib2R5IC5hbGVydCcpLnJlbW92ZSgpOwp9OwoKZnVuY3Rpb24gc2VhcmNoKG5hbWVLZXksIG15QXJyYXkpIHsKICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbXlBcnJheS5sZW5ndGg7IGkrKykgewogICAgICAgIGlmIChteUFycmF5W2ldLm5hbWUgPT09IG5hbWVLZXkpIHsKICAgICAgICAgICAgcmV0dXJuIG15QXJyYXlbaV07CiAgICAgICAgfQogICAgfQp9CgpmdW5jdGlvbiBwb3B1bGF0ZVRvcGljRGV0YWlsKCRtb2RhbCwgdG9waWNPYmopIHsKICAgICRtb2RhbC5maW5kKCcjc3RhcnREYXRlJykudmFsKHRvcGljT2JqLnN0YXJ0RGF0ZSk7CiAgICAkbW9kYWwuZmluZCgnI2VuZERhdGUnKS52YWwodG9waWNPYmouZW5kRGF0ZSk7CiAgICAkbW9kYWwuZmluZCgnLnByb2R1Y3Qtc3BhbicpLnRleHQoZ2V0UHJvZHVjdE5hbWVMaXN0KEpTT04ucGFyc2UodG9waWNPYmoucHJvZHVjdHMpKSk7CiAgICAkbW9kYWwuZmluZCgnI3N0YXJ0RGF0ZScpLmF0dHIoImRpc2FibGVkIiwgIiIpOwogICAgJG1vZGFsLmZpbmQoJyNlbmREYXRlJykuYXR0cigiZGlzYWJsZWQiLCAiIik7CiAgICBpZiAodG9waWNPYmoucHJvZHVjdHMpIHsKICAgICAgICAkbW9kYWwuZmluZCgnI3Byb2R1Y3QnKS5hdHRyKCJkaXNhYmxlZCIsICIiKTsKICAgIH0KfQoKZnVuY3Rpb24gZGVwb3B1bGF0ZVRvcGljRGV0YWlsKCRtb2RhbCkgewogICAgdmFyIHByb2R1Y3RKc29uID0gJG1vZGFsLmZpbmQoJy5wcm9kdWN0LWpzb24tY29udGFpbmVyJykudmFsKCk7CiAgICAkbW9kYWwuZmluZCgnI3N0YXJ0RGF0ZScpLnZhbCgiIik7CiAgICAkbW9kYWwuZmluZCgnI2VuZERhdGUnKS52YWwoIiIpOwogICAgJG1vZGFsLmZpbmQoJyNwcm9kdWN0JykudmFsKCIiKTsKICAgICRtb2RhbC5maW5kKCcucHJvZHVjdC1zcGFuJykudGV4dChnZXRQcm9kdWN0TmFtZUxpc3QoSlNPTi5wYXJzZShwcm9kdWN0SnNvbikpKTsKICAgICRtb2RhbC5maW5kKCcjc3RhcnREYXRlJykucmVtb3ZlQXR0cigiZGlzYWJsZWQiKTsKICAgICRtb2RhbC5maW5kKCcjZW5kRGF0ZScpLnJlbW92ZUF0dHIoImRpc2FibGVkIik7CiAgICAkbW9kYWwuZmluZCgnI3Byb2R1Y3QnKS5yZW1vdmVBdHRyKCJkaXNhYmxlZCIpOwp9CgpmdW5jdGlvbiBnZW5lcmF0ZVByb2R1Y3RKc29uKHByb2R1Y3RJZCwgcHJvZHVjdE5hbWUsIGxldmVsKSB7CiAgICB2YXIgdG9waWNQcm9kdWN0VmFsdWVzID0geyIxIjogW10sICIyIjogW10sICIzIjogW10sICI0IjogW10sICI1IjogW119OwogICAgdG9waWNQcm9kdWN0VmFsdWVzW2xldmVsXS5wdXNoKHtuYW1lOiBwcm9kdWN0TmFtZSwgaWQ6IHByb2R1Y3RJZH0pOwogICAgcmV0dXJuIHRvcGljUHJvZHVjdFZhbHVlczsKfQoKZnVuY3Rpb24gZ2V0UHJvZHVjdE5hbWVMaXN0KG9iaikgewogICAgdmFyIHByb2R1Y3RBcnJheSA9IFtdOwogICAgdmFyIG9iakFycmF5ID0gb2JqWyczJ107CiAgICAkLmVhY2gob2JqQXJyYXksIGZ1bmN0aW9uIChpbmRleCwgdmFsdWUpIHsKICAgICAgICBwcm9kdWN0QXJyYXkucHVzaCh2YWx1ZS5uYW1lKTsKICAgIH0pOwogICAgcmV0dXJuIHByb2R1Y3RBcnJheS5qb2luKCcsJyk7Cn0KCmZ1bmN0aW9uIGdldFByb2R1Y3RKc29uKGFwcGxpY2F0aW9uTmFtZSwgcm93KSB7CiAgICB2YXIgcHJvZHVjdEpzb247CiAgICBpZiAoYXBwbGljYXRpb25OYW1lID09ICJBZC1Ib2MgQWxlcnQiKSB7CiAgICAgICAgaWYgKHJvdy5maW5kKCcucm93LXByb2R1Y3QtanNvbi1jb250YWluZXInKS52YWwoKSkKICAgICAgICAgICAgcHJvZHVjdEpzb24gPSBKU09OLnBhcnNlKHJvdy5maW5kKCcucm93LXByb2R1Y3QtanNvbi1jb250YWluZXInKS52YWwoKSk7CiAgICB9IGVsc2UgewogICAgICAgIHZhciBwcm9kdWN0TmFtZSA9IHJvdy5maW5kKCdzcGFuW2RhdGEtZmllbGQ9InByb2R1Y3ROYW1lIl0nKS5hdHRyKCJkYXRhLWlkIik7CiAgICAgICAgdmFyIHByb2R1Y3RJZCA9IHJvdy5maW5kKCcucm93LXByb2R1Y3QtaWQnKS52YWwoKTsKICAgICAgICB2YXIgbGV2ZWwgPSByb3cuZmluZCgnLnJvdy1sZXZlbC1pZCcpLnZhbCgpOwogICAgICAgIGlmICghbGV2ZWwpIHsKICAgICAgICAgICAgbGV2ZWwgPSAzOwogICAgICAgIH0KICAgICAgICBwcm9kdWN0SnNvbiA9IGdlbmVyYXRlUHJvZHVjdEpzb24ocHJvZHVjdElkLCBwcm9kdWN0TmFtZSwgbGV2ZWwpOwogICAgfQogICAgcmV0dXJuIHByb2R1Y3RKc29uOwp9CgpmdW5jdGlvbiBhcHBseVNlbGVjdDJGb3JUYWdzKCRzZWxlY3RvciwgdXJsLCBwbGFjZUhvbGRlclRleHQsIGlzQ2FzZVNlcmllc1RhZykgewogICAgJHNlbGVjdG9yLnNlbGVjdDIoewogICAgICAgIG1pbmltdW1JbnB1dExlbmd0aDogMCwKICAgICAgICBtdWx0aXBsZTogdHJ1ZSwKICAgICAgICB0YWdzOiB0cnVlLAogICAgICAgIHBsYWNlaG9sZGVyOiBwbGFjZUhvbGRlclRleHQsCiAgICAgICAgYWxsb3dDbGVhcjogdHJ1ZSwKICAgICAgICB3aWR0aDogIjEwMCUiLAogICAgICAgIGNyZWF0ZVRhZzogZnVuY3Rpb24gKHBhcmFtcykgewogICAgICAgICAgICB2YXIgdGVybSA9ICQudHJpbShwYXJhbXMudGVybSk7CiAgICAgICAgICAgIGlmICh0ZXJtICE9ICIiKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgICAgICAgIGlkOiB0ZXJtLAogICAgICAgICAgICAgICAgICAgIHRleHQ6IHRlcm0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gbnVsbAogICAgICAgIH0sCiAgICAgICAgYWpheDogewogICAgICAgICAgICBxdWlldE1pbGxpczogMjUwLAogICAgICAgICAgICBkYXRhVHlwZTogImpzb24iLAogICAgICAgICAgICB1cmw6IHVybCwKICAgICAgICAgICAgZGF0YTogZnVuY3Rpb24gKHBhcmFtcykgewogICAgICAgICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgICAgICAgICB0ZXJtOiBwYXJhbXMudGVybSwKICAgICAgICAgICAgICAgICAgICBwYWdlOiBwYXJhbXMucGFnZSB8fCAxLAogICAgICAgICAgICAgICAgICAgIG1heDogMzAsCiAgICAgICAgICAgICAgICAgICAgbGFuZzogdXNlckxvY2FsZSwKICAgICAgICAgICAgICAgICAgICBpc0Nhc2VTZXJpZXNUYWc6IGlzQ2FzZVNlcmllc1RhZwogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgcHJvY2Vzc1Jlc3VsdHM6IGZ1bmN0aW9uIChkYXRhLCBwYXJhbXMpIHsKICAgICAgICAgICAgICAgIHBhcmFtcy5wYWdlID0gcGFyYW1zLnBhZ2UgfHwgMTsKICAgICAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgICAgICAgcmVzdWx0czogZGF0YS5saXN0LAogICAgICAgICAgICAgICAgICAgIHBhZ2luYXRpb246IHsKICAgICAgICAgICAgICAgICAgICAgICAgbW9yZTogKHBhcmFtcy5wYWdlICogMzApIDwgZGF0YS50b3RhbENvdW50CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0pOwp9CgpmdW5jdGlvbiBzaG93Q29tbWVudEljb24oY3VycmVudFJvdykgewogICAgdmFyICRidG5Hcm91cCA9ICQoY3VycmVudFJvdykuY2xvc2VzdCgndHInKS5maW5kKCd0ZC5kcm9wRG93biAuYnRuLWdyb3VwJyk7CiAgICBpZiAoJCgkYnRuR3JvdXApLmZpbmQoJy5jb21tZW50JykubGVuZ3RoID09PSAwKSB7CiAgICAgICAgJCgkYnRuR3JvdXApLmZpbmQoJy5kcm9wZG93bi10b2dnbGUnKS5hZnRlcignPGkgY2xhc3M9Im1kaSBtZGktY2hhdCBibHVlLTIgZm9udC0xMyBwb3MtYWIgY29tbWVudCIgdGl0bGU9IicgKyAkLmkxOG4uXygnY29tbWVudEF2YWlsYWJsZScpICsgJyI+PC9pPicpOwogICAgfQp9CgpmdW5jdGlvbiByZW1vdmVDb21tZW50SWNvbihjdXJyZW50Um93KSB7CiAgICB2YXIgJGJ0bkdyb3VwID0gJChjdXJyZW50Um93KS5jbG9zZXN0KCd0cicpLmZpbmQoJ3RkLmRyb3BEb3duIC5idG4tZ3JvdXAnKTsKICAgICQoJGJ0bkdyb3VwKS5maW5kKCcuZHJvcGRvd24tdG9nZ2xlJykubmV4dCgnaScpLnJlbW92ZSgpOwp9CgpmdW5jdGlvbiByZW1vdmVBdHRhY2htZW50SWNvbihjdXJyZW50Um93KSB7CiAgICB2YXIgJGJ0bkdyb3VwID0gJChjdXJyZW50Um93KS5jbG9zZXN0KCd0cicpLmZpbmQoJ3RkLmRyb3BEb3duIC5idG4tZ3JvdXAnKTsKICAgIGlmICgkKCRidG5Hcm91cCkuZmluZCgnLmNvbW1lbnQnKS5sZW5ndGggPT09IDApIHsKICAgICAgICAkKCRidG5Hcm91cCkuZmluZCgnLmRyb3Bkb3duLXRvZ2dsZScpLm5leHQoJ2knKS5yZW1vdmUoKTsKICAgIH0gZWxzZSB7CiAgICAgICAgJCgkYnRuR3JvdXApLmZpbmQoJy5jb21tZW50JykubmV4dCgnaScpLnJlbW92ZSgpOwogICAgfQp9CgpmdW5jdGlvbiBzaG93QXR0YWNobWVudEljb24odHJSb3cpIHsKICAgIHZhciAkYnRuR3JvdXAgPSAkKHRyUm93KS5maW5kKCd0ZC5kcm9wRG93biAuYnRuLWdyb3VwJyk7CiAgICBpZiAoJCgkYnRuR3JvdXApLmZpbmQoJy5hdHRhY2gnKS5sZW5ndGggPT09IDApIHsKICAgICAgICBpZiAoJCgkYnRuR3JvdXApLmZpbmQoJy5jb21tZW50JykubGVuZ3RoID09PSAwKSB7CiAgICAgICAgICAgICQoJGJ0bkdyb3VwKS5maW5kKCcuZHJvcGRvd24tdG9nZ2xlJykuYWZ0ZXIoJyA8aSBjbGFzcz0ibWRpIG1kaS1hdHRhY2htZW50IGJsdWUtMSBmb250LTEzIHBvcy1hYiBhdHRhY2giIHRpdGxlPSInICsgJC5pMThuLl8oJ2F0dGFjaG1lbnRBdmFpbGFibGUnKSArICciPjwvaT4gJyk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgJCgkYnRuR3JvdXApLmZpbmQoJy5jb21tZW50JykuYWZ0ZXIoJyA8aSBjbGFzcz0ibWRpIG1kaS1hdHRhY2htZW50IGJsdWUtMSBmb250LTEzIHBvcy1hYiBhdHRhY2giIHRpdGxlPSInICsgJC5pMThuLl8oJ2F0dGFjaG1lbnRBdmFpbGFibGUnKSArICciPjwvaT4gJyk7CiAgICAgICAgfQogICAgfQp9Cgp2YXIgaXNTYWZldHlMZWFkQWxsb3dlZCA9IGZ1bmN0aW9uIChsaXN0UHJvZHVjdElkcywgc2VsZWN0ZWRQcm9kdWN0SWQpIHsKICAgIHJldHVybiBsaXN0UHJvZHVjdElkcy5pbmRleE9mKHNlbGVjdGVkUHJvZHVjdElkKSAhPT0gLTEKfTsKCnZhciBzZXRDb2x1bW5TZXEgPSBmdW5jdGlvbiAobWFwU2VxKSB7CiAgICBjb2x1bW5TZXEgPSBtYXBTZXEKfQoKdmFyIHNpZ25hbCA9IHNpZ25hbCB8fCB7fTsKCnNpZ25hbC5hY3Rpb25zX3V0aWxzID0gKGZ1bmN0aW9uKCkgewogICAgdmFyIGFjdGlvbl9saXN0X3RhYmxlOwogICAgdmFyIGN1cnJlbnRfY3JlYXRlX2J0OwogICAgdmFyIGFkaG9jX3ZhbGlkYXRlZF90YWJsZTsKCiAgICB2YXIgc2V0X2FjdGlvbl9jcmVhdGVfbW9kYWwgPSBmdW5jdGlvbigpIHsKICAgICAgICAkKCcjY3JlYXRlQWN0aW9uTW9kYWwnKS5vbignaGlkZGVuLmJzLm1vZGFsJywgZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgJCh0aGlzKQogICAgICAgICAgICAgICAgLmZpbmQoJyNjb25maWcnKS52YWwoJycpLmVuZCgpCiAgICAgICAgICAgICAgICAuZmluZCgnI3R5cGUnKS52YWwoJycpLmVuZCgpCiAgICAgICAgICAgICAgICAuZmluZCgnI21lZXRpbmdFbGVtZW50JykudmFsKCcnKS5lbmQoKQogICAgICAgICAgICAgICAgLmZpbmQoJy5hc3NpZ25lZFRvVmFsdWUnKS52YWwoJycpLnRyaWdnZXIoJ2NoYW5nZScpLmVuZCgpCiAgICAgICAgICAgICAgICAuZmluZCgiaW5wdXRbdHlwZT10ZXh0XSx0ZXh0YXJlYSIpLnZhbCgnJykKICAgICAgICAgICAgICAgIC5lbmQoKTsKICAgICAgICB9KTsKCiAgICAgICAgJCgnI2FjdGlvbi1lZGl0LW1vZGFsJykub24oJ2hpZGRlbi5icy5tb2RhbCcsIGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICAgIGNsZWFyX2VkaXRfZXJyb3JzKCk7CiAgICAgICAgICAgICQodGhpcykKICAgICAgICAgICAgICAgIC5maW5kKCJpbnB1dFt0eXBlPXRleHRdLHRleHRhcmVhLHNlbGVjdCIpCiAgICAgICAgICAgICAgICAudmFsKCcnKQogICAgICAgICAgICAgICAgLmVuZCgpCiAgICAgICAgfSk7CgogICAgICAgICQoJyNlZGl0QWN0aW9uTW9kYWwnKS5vbignaGlkZGVuLmJzLm1vZGFsJywgZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgY2xlYXJfZWRpdF9zaWduYWwoKTsKICAgICAgICAgICAgJCh0aGlzKQogICAgICAgICAgICAgICAgLmZpbmQoImlucHV0W3R5cGU9dGV4dF0sdGV4dGFyZWEsc2VsZWN0IikKICAgICAgICAgICAgICAgIC52YWwoJycpCiAgICAgICAgICAgICAgICAuZW5kKCkKICAgICAgICB9KTsKCiAgICAgICAgJChkb2N1bWVudCkub24oJ2NsaWNrJywgJy5hY3Rpb24tY3JlYXRlJywgZnVuY3Rpb24gKGV2dCkgewogICAgICAgICAgICB2YXIgc3JjRWxlID0gJChldnQudGFyZ2V0KTsKICAgICAgICAgICAgY3VycmVudF9jcmVhdGVfYnQgPSBzcmNFbGU7CiAgICAgICAgICAgIHZhciBhbGVydElkID0gYWxlcnRJZDsKICAgICAgICAgICAgaWYgKHR5cGVvZiAoc3JjRWxlLmF0dHIoJ2FsZXJ0LWlkJykpICE9PSAndW5kZWZpbmVkJykgewogICAgICAgICAgICAgICAgYWxlcnRJZCA9IHNyY0VsZS5hdHRyKCdhbGVydC1pZCcpCiAgICAgICAgICAgIH0KICAgICAgICAgICAgdmFyIGNyZWF0ZUFjdGlvbk1vZGFsID0gJCgnI2NyZWF0ZUFjdGlvbk1vZGFsJyk7CiAgICAgICAgICAgIHZhciBjcmVhdGVBY3Rpb25CdXR0b24gPSAkKCIjY3JlYXRlLWFjdGlvbi1idG4iKTsKICAgICAgICAgICAgY3JlYXRlQWN0aW9uTW9kYWwuZmluZCgnLmlkLWVsZW1lbnQnKS5hdHRyKCdkYXRhLWlkJywgYWxlcnRJZCk7CgogICAgICAgICAgICAvL1NldCB0aGUgYWxlcnRJZCBpbiB0aGUgaGlkZGVuIGZpZWxkIG9mIHRoZSBtb2RhbC4KICAgICAgICAgICAgaWYgKHR5cGVvZiBhbGVydElkICE9ICJ1bmRlZmluZWQiICYmIGFsZXJ0SWQgIT0gJycpIHsKICAgICAgICAgICAgICAgIGNyZWF0ZUFjdGlvbk1vZGFsLmZpbmQoIi5hbGVydElkIikudmFsKGFsZXJ0SWQpOwogICAgICAgICAgICB9CgogICAgICAgICAgICBjcmVhdGVBY3Rpb25Nb2RhbC5maW5kKCcjZHVlLWRhdGUtcGlja2VyJykuZGF0ZXBpY2tlcigpOwogICAgICAgICAgICBjcmVhdGVBY3Rpb25CdXR0b24uYXR0cigiZGlzYWJsZWQiLCBmYWxzZSk7CiAgICAgICAgICAgIGNsZWFyX2Vycm9ycygpOwogICAgICAgICAgICAkKCcuYWN0aW9uLXR5cGUtbGlzdCcpLnJlbW92ZUNsYXNzKCdoaWRkZW4nKTsKICAgICAgICAgICAgJCgnLm1lZXRpbmctbGlzdCcpLmFkZENsYXNzKCdoaWRkZW4nKTsKICAgICAgICAgICAgY3JlYXRlQWN0aW9uTW9kYWwubW9kYWwoe30pOwoKICAgICAgICAgICAgLy9FdmVudCBiaW5kIHdoZW4gdGhlIHNhdmUvY3JlYXRlIGJ1dHRvbiBpcyBjbGljawogICAgICAgICAgICAvLyBrZWQgaW4gdGhlIGFjdGlvbiBldmVudCBtb2RhbC4KICAgICAgICAgICAgY3JlYXRlQWN0aW9uQnV0dG9uLnVuYmluZCgnY2xpY2snKS5jbGljayhmdW5jdGlvbiAoZXZlbnQpIHsKICAgICAgICAgICAgICAgIGNyZWF0ZUFjdGlvbkJ1dHRvbi5hdHRyKCJkaXNhYmxlZCIsIHRydWUpOwogICAgICAgICAgICAgICAgdmFyIGFsZXJ0SWQgPSAkKGV2ZW50LnRhcmdldCkuYXR0cignZGF0YS1pZCcpOwogICAgICAgICAgICAgICAgdmFyIGFjdGlvbk1vZGFsSWQgPSAkKCIjY3JlYXRlQWN0aW9uTW9kYWwgI3RlbXBGb3JtIik7CiAgICAgICAgICAgICAgICAkLmFqYXgoewogICAgICAgICAgICAgICAgICAgIHR5cGU6ICJQT1NUIiwKICAgICAgICAgICAgICAgICAgICB1cmw6ICcvc2lnbmFsL2FjdGlvbi9zYXZlJywKICAgICAgICAgICAgICAgICAgICBkYXRhOiBnZXRBY3Rpb25EZXRhaWxzKGFjdGlvbk1vZGFsSWQpLAogICAgICAgICAgICAgICAgICAgIGFzeW5jOiBmYWxzZSwKICAgICAgICAgICAgICAgICAgICBjYWNoZTogZmFsc2UKICAgICAgICAgICAgICAgIH0pLnN1Y2Nlc3MoZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PSBmYWxzZSkgewogICAgICAgICAgICAgICAgICAgICAgICBjbGVhcl9lcnJvcnMoKTsKICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGVycm9yTXNnID0gIjxkaXYgY2xhc3M9J2FsZXJ0IGFsZXJ0LWRhbmdlcic+IjsKICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaW5kZXggPSAwOyBpbmRleCA8IHJlc3BvbnNlLmRhdGEubGVuZ3RoOyBpbmRleCsrKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZXJyb3JNZXNzYWdlT2JqID0gcmVzcG9uc2UuZGF0YVtpbmRleF07CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcnJvck1zZyArPSBlcnJvck1lc3NhZ2VPYmo7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcnJvck1zZyArPSAnPC9icj4nOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yTXNnICs9ICI8L2Rpdj4iOwogICAgICAgICAgICAgICAgICAgICAgICAkKCcjY3JlYXRlQWN0aW9uTW9kYWwgLm1vZGFsLWJvZHknKS5wcmVwZW5kKGVycm9yTXNnKTsKICAgICAgICAgICAgICAgICAgICAgICAgY3JlYXRlQWN0aW9uQnV0dG9uLmF0dHIoImRpc2FibGVkIiwgZmFsc2UpOwogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNyZWF0ZUFjdGlvbk1vZGFsLm1vZGFsKCdoaWRlJyk7CiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRfY3JlYXRlX2J0LnBhcmVudHNVbnRpbCgidGQiKS5maW5kKCcuZGVmYXVsdC12YWx1ZScpLmh0bWwocmVzcG9uc2UuYWN0aW9uQ291bnQpOwoKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBhcHBsaWNhdGlvbkxhYmVsICE9ICd1bmRlZmluZWQnICYmIGFwcGxpY2F0aW9uTGFiZWwgPT09ICJDYXNlIERldGFpbCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoJyNhY3Rpb24tdGFibGUnKS5EYXRhVGFibGUoKS5hamF4LnJlbG9hZCgpOwogICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBhbGVydElkICE9ICJ1bmRlZmluZWQiICYmIGFsZXJ0SWQgIT0gJycpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRldGFpbF90YWJsZSAhPSAidW5kZWZpbmVkIikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZXRhaWxfdGFibGUuYWpheC5yZWxvYWQoKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoJyNhY3Rpb24tdGFibGUnKS5EYXRhVGFibGUoKS5hamF4LnJlbG9hZCgpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoJyNtZWV0aW5nLXRhYmxlJykuRGF0YVRhYmxlKCkuYWpheC5yZWxvYWQoKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCcjc2lnbmFsQWN0aXZpdHlUYWJsZScpLkRhdGFUYWJsZSgpLmFqYXgucmVsb2FkKCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgIC8vUmVmcmVzaCB0aGUgYWN0aXZpdHkgdGFibGUKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBhcHBsaWNhdGlvbkxhYmVsICE9ICd1bmRlZmluZWQnICYmIGFwcGxpY2F0aW9uTGFiZWwgIT09IEFQUExJQ0FUSU9OX0xBQkVMLkNBU0VfREVUQUlMICYmIGFwcGxpY2F0aW9uTGFiZWwgIT09IEFQUExJQ0FUSU9OX0xBQkVMLkVWRU5UX0RFVEFJTCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2lnbmFsLmFjdGl2aXRpZXNfdXRpbHMucmVsb2FkX2FjdGl2aXR5X3RhYmxlKCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoYXBwbGljYXRpb25MYWJlbCA9PSBBUFBMSUNBVElPTl9MQUJFTC5TSUdOQUxfTUFOQUdFTUVOVCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNpZ25hbC5tZWV0aW5nX3V0aWxzLnJlbG9hZF9tZWV0aW5nX3RhYmxlKCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KS5lcnJvcihmdW5jdGlvbiAoZGF0YSkgewogICAgICAgICAgICAgICAgICAgIGNsZWFyX2Vycm9ycygpOwogICAgICAgICAgICAgICAgICAgIHZhciBlcnJvck1zZyA9ICI8ZGl2IGNsYXNzPSdhbGVydCBhbGVydC1kYW5nZXInPiI7CiAgICAgICAgICAgICAgICAgICAgZXJyb3JNc2cgKz0gIkVycm9yIG9jY3VyZWQgd2hpbGUgc2F2aW5nIEFjdGlvbi4iOwogICAgICAgICAgICAgICAgICAgIGVycm9yTXNnICs9ICI8L2Rpdj4iOwogICAgICAgICAgICAgICAgICAgICQoJyNjcmVhdGVBY3Rpb25Nb2RhbCAubW9kYWwtYm9keScpLnByZXBlbmQoZXJyb3JNc2cpOwogICAgICAgICAgICAgICAgICAgIGNyZWF0ZUFjdGlvbkJ1dHRvbi5hdHRyKCJkaXNhYmxlZCIsIGZhbHNlKTsKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIH0pCiAgICAgICAgfSkKICAgIH07CgogICAgdmFyIGdldEFjdGlvbkRldGFpbHMgPSBmdW5jdGlvbihtb2RhbElkKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgImNvbmZpZyI6IG1vZGFsSWQuZmluZCgiI2NvbmZpZyIpLnZhbCgpLAogICAgICAgICAgICAidHlwZSI6IG1vZGFsSWQuZmluZCgiI3R5cGUiKS52YWwoKSwKICAgICAgICAgICAgImFzc2lnbmVkVG9WYWx1ZSI6IG1vZGFsSWQuZmluZCgiI2Fzc2lnbmVkVG8iKS52YWwoKSwKICAgICAgICAgICAgImR1ZURhdGUiOiBtb2RhbElkLmZpbmQoIiNkdWVEYXRlIikudmFsKCksCiAgICAgICAgICAgICJkZXRhaWxzIjogbW9kYWxJZC5maW5kKCIjZGV0YWlscyIpLnZhbCgpLAogICAgICAgICAgICAiY29tbWVudHMiOiBtb2RhbElkLmZpbmQoIiNjb21tZW50cyIpLnZhbCgpLAogICAgICAgICAgICAiYWxlcnRJZCI6IG1vZGFsSWQuZmluZCgiI2FsZXJ0SWQiKS52YWwoKSwKICAgICAgICAgICAgImFwcFR5cGUiOiBtb2RhbElkLmZpbmQoIiNhcHBUeXBlIikudmFsKCksCiAgICAgICAgICAgICJleGVDb25maWdJZCI6IG1vZGFsSWQuZmluZCgiI2V4ZUNvbmZpZ0lkIikudmFsKCksCiAgICAgICAgICAgICJtZWV0aW5nSWQiOiBtb2RhbElkLmZpbmQoIiNtZWV0aW5nRWxlbWVudCIpLnZhbCgpLAogICAgICAgICAgICAiYWN0aW9uU3RhdHVzIjogbW9kYWxJZC5maW5kKCIjYWN0aW9uU3RhdHVzIikudmFsKCksCiAgICAgICAgICAgICJhY3Rpb25JZCI6IG1vZGFsSWQuZmluZCgiI2FjdGlvbklkIikudmFsKCkKICAgICAgICB9CiAgICB9OwoKICAgIHZhciBjbGVhcl9lcnJvcnMgPSBmdW5jdGlvbigpIHsKICAgICAgICAkKCcjY3JlYXRlQWN0aW9uTW9kYWwgLm1vZGFsLWJvZHkgLmFsZXJ0JykucmVtb3ZlKCkKICAgIH07CgogICAgdmFyIGNsZWFyX2VkaXRfZXJyb3JzID0gZnVuY3Rpb24gKCkgewogICAgICAgICQoJyNhY3Rpb24tZWRpdC1tb2RhbCAubW9kYWwtYm9keSAuYWxlcnQnKS5yZW1vdmUoKQogICAgfTsKICAgIHZhciBjbGVhcl9lZGl0X3NpZ25hbCA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAkKCcjZWRpdEFjdGlvbk1vZGFsIC5tb2RhbC1ib2R5IC5hbGVydCcpLnJlbW92ZSgpCiAgICB9OwoKLy9TaW5nbGUgYW5kIEFnZ3JlZ2F0ZSBBY3Rpb24gbGlzdCBkYXRhCiAgICB2YXIgc2V0X2FjdGlvbl9saXN0X21vZGFsID0gZnVuY3Rpb24oY29tcCkgewogICAgICAgICQoZG9jdW1lbnQpLm9uKCdjbGljaycsICcubGlzdC1hY3Rpb24nLCBmdW5jdGlvbihldnQpIHsKICAgICAgICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgICAgIGNvbXAubW9kYWwoJ3RvZ2dsZScsICQodGhpcykpOwogICAgICAgIH0pOwogICAgICAgIGNvbXAub24oJ3Nob3duLmJzLm1vZGFsJywgZnVuY3Rpb24oZXZ0KSB7CiAgICAgICAgICAgIHZhciBzcmNFbGUgPSBldnQucmVsYXRlZFRhcmdldDsKICAgICAgICAgICAgdmFyIGFsZXJ0SWQgPSAkKHNyY0VsZSkuYXR0cignZGF0YS1pZCcpOwogICAgICAgICAgICB2YXIgYXBwVHlwZSA9ICQoIiNjcmVhdGVBY3Rpb25Nb2RhbCAjdGVtcEZvcm0iKS5maW5kKCIjYXBwVHlwZSIpLnZhbCgpOwogICAgICAgICAgICB2YXIgYWN0aW9uVXJsID0gIi9zaWduYWwvYWN0aW9uL2xpc3RCeUFsZXJ0P2FsZXJ0SWQ9IiArIGFsZXJ0SWQgKyImYXBwVHlwZT0iICsgYXBwVHlwZTsKICAgICAgICAgICAgYWN0aW9uX2xpc3RfdGFibGUgPSAkKCcjYWN0aW9uLXRhYmxlJykuRGF0YVRhYmxlKHsKICAgICAgICAgICAgICAgIGRlc3Ryb3kgOiB0cnVlLAogICAgICAgICAgICAgICAgImxhbmd1YWdlIjogewogICAgICAgICAgICAgICAgICAgICJ1cmwiOiAiLi4vYXNzZXRzL2kxOG4vZGF0YVRhYmxlc18iICsgdXNlckxvY2FsZSArICIuanNvbiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBmbkRyYXdDYWxsYmFjazogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICAgICQoJy5lZGl0LWFjdGlvbi1saW5rJykuY2xpY2soZnVuY3Rpb24oZXZ0KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB1cmwgPSAiL3NpZ25hbC9hY3Rpb24vZ2V0QnlJZD9pZD0iICsgJCh0aGlzKS5hdHRyKCdkYXRhLWlkJyk7CiAgICAgICAgICAgICAgICAgICAgICAgICQuYWpheCh7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cmw6IHVybCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFzeW5jOiBmYWxzZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhY2hlOiBmYWxzZQogICAgICAgICAgICAgICAgICAgICAgICB9KS5kb25lKGZ1bmN0aW9uKGRhdGEpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEuYWN0aW9uX3R5cGVzID0gYWN0aW9uX3NlbGVjdF92YWx1ZXMudHlwZXM7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLmFjdGlvbl9jb25maWdzID0gYWN0aW9uX3NlbGVjdF92YWx1ZXMuY29uZmlnczsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEuYWxsX3N0YXR1cyA9IGFjdGlvbl9zZWxlY3RfdmFsdWVzLmFsbFN0YXR1czsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEuYWxlcnRJZCA9IGFsZXJ0SWQ7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLmFjdGlvblN0YXR1cyA9IHtuYW1lOiBkYXRhLmFjdGlvblN0YXR1c307CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGh0bWxfY29udGVudCA9IHNpZ25hbC51dGlscy5yZW5kZXIoJ2FjdGlvbl9lZGl0b3InLCBkYXRhKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoJyNhY3Rpb24tZWRpdG9yLWNvbnRhaW5lcicpLmh0bWwoaHRtbF9jb250ZW50KTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoJyNhY3Rpb24tZWRpdG9yLWNvbnRhaW5lciAjZHVlLWRhdGUtcGlja2VyJykuZGF0ZXBpY2tlcih7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0ZTogZGF0YS5kdWVEYXRlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KS5rZXlkb3duKHByZXZlbnRFbnRlcktleVN1Ym1pdCk7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGR1ZURhdGUgPSBtb21lbnQoZGF0YS5kdWVEYXRlLCAiREQtTU1NLVlZWVkiKS5mb3JtYXQoREVGQVVMVF9EQVRFX0ZPUk1BVCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCcjYWN0aW9uLWVkaXRvci1jb250YWluZXInKS5maW5kKCcjZHVlLWRhdGUtcGlja2VyJykuZmluZCgnI2R1ZURhdGUnKS52YWwoZHVlRGF0ZSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCcjYWN0aW9uLWVkaXRvci1jb250YWluZXInKS5maW5kKCcjYXBwVHlwZScpLnZhbChhcHBUeXBlKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBhY3Rpb25fZWRpdG9yID0gJCgnI2FjdGlvbi1lZGl0b3ItY29udGFpbmVyJyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZWRpdEFjdGlvbk1vZGFsID0gJCgnI2FjdGlvbi1lZGl0LW1vZGFsJyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlZGl0QWN0aW9uTW9kYWwuZmluZCgnLmlkLWVsZW1lbnQnKS5hdHRyKCdkYXRhLWlkJywgYWxlcnRJZCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlZGl0QWN0aW9uTW9kYWwuZmluZCgnLmFzc2lnbmVkVG9WYWx1ZScpLnZhbChudWxsKS50cmlnZ2VyKCdjaGFuZ2UnKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoJyNhY3Rpb24tbW9kYWwnKS5tb2RhbCgnaGlkZScpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgZWRpdEFjdGlvbk1vZGFsLm1vZGFsKHt9KTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCcjYWN0aW9uLWVkaXQtbW9kYWwgI2NhbmNlbC1idCcpLmNsaWNrKGhhbmRsZV9hY3Rpb25fZWRpdG9yX2NhbmNlbCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCcjYWN0aW9uLWVkaXQtbW9kYWwgI3VwZGF0ZS1idCcpLmNsaWNrKGhhbmRsZV9hY3Rpb25fZWRpdG9yX3VwZGF0ZSkKICAgICAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJmbkluaXRDb21wbGV0ZSI6IGZ1bmN0aW9uKG9TZXR0aW5ncywganNvbikgewogICAgICAgICAgICAgICAgICAgICQoJy5hY3Rpb24tY3JlYXRlJykuYXR0cignZGF0YS1pZCcsIGFsZXJ0SWQpOwogICAgICAgICAgICAgICAgICAgIHNpZ25hbC5hY3Rpb25zX3V0aWxzLnNldF9hY3Rpb25fY3JlYXRlX21vZGFsKCk7CiAgICAgICAgICAgICAgICAgICAgJCgnI2R1ZS1kYXRlLXBpY2tlcicpLmRhdGVwaWNrZXIoKQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJhamF4IjogewogICAgICAgICAgICAgICAgICAgICJ1cmwiOiBhY3Rpb25VcmwsCiAgICAgICAgICAgICAgICAgICAgY2FjaGU6ZmFsc2UsCiAgICAgICAgICAgICAgICAgICAgImRhdGFTcmMiOiAiIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJzZWFyY2hpbmciOiB0cnVlLAogICAgICAgICAgICAgICAgImJQcm9jZXNzaW5nIjogdHJ1ZSwKICAgICAgICAgICAgICAgICJiTGVuZ3RoQ2hhbmdlIjogdHJ1ZSwKICAgICAgICAgICAgICAgICJvTGFuZ3VhZ2UiOiB7CiAgICAgICAgICAgICAgICAgICAgInNQcm9jZXNzaW5nIjogJzxkaXYgY2xhc3M9ImdyaWQtbG9hZGluZyI+PGltZyBzcmM9Ii9zaWduYWwvYXNzZXRzL3NwaW5uZXIuZ2lmIiB3aWR0aD0iMzAiIGFsaWduPSJtaWRkbGUiIC8+PC9kaXY+JwogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJpRGlzcGxheUxlbmd0aCI6IDUsCiAgICAgICAgICAgICAgICAiYUxlbmd0aE1lbnUiOiBbWzUsIDEwLCAyMCwgLTFdLCBbNSwgMTAsIDIwLCAiQWxsIl1dLAogICAgICAgICAgICAgICAgImFvQ29sdW1ucyI6IFsKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICJtRGF0YSI6ICJpZCIsCiAgICAgICAgICAgICAgICAgICAgICAgICJtUmVuZGVyIjogZnVuY3Rpb24gKGRhdGEsIHR5cGUsIHJvdykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICI8YSBocmVmPScjJyBjbGFzcz0nZWRpdC1hY3Rpb24tbGluaycgZGF0YS1pZD0nIiArCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcm93LmlkICsgIic+IiArIHJvdy5pZCArICI8YT4iCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIm1EYXRhIjogInR5cGUiCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICJtRGF0YSI6ICJjb25maWciCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICJtRGF0YSI6ICJkZXRhaWxzIiwKICAgICAgICAgICAgICAgICAgICAgICAgImNsYXNzTmFtZSI6ImNvbC1taW4tMjAwIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAibURhdGEiOiAiZHVlRGF0ZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJjbGFzc05hbWUiOiJjb2wtbWluLTEwMCIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIm1EYXRhIjogImFzc2lnbmVkVG8iLAogICAgICAgICAgICAgICAgICAgICAgICAiY2xhc3NOYW1lIjoiY29sLW1pbi0xMDAiCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICJtRGF0YSIgOiAiYWN0aW9uU3RhdHVzIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAibURhdGEiOiAiY29tcGxldGVkRGF0ZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJjbGFzc05hbWUiOiJjb2wtbWluLTE1MCIsCiAgICAgICAgICAgICAgICAgICAgICAgIG1SZW5kZXI6IGZ1bmN0aW9uKGRhdGEsIHR5cGUscm93KXsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByb3cuY29tcGxldGVkRGF0ZQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIHNjcm9sbFg6IHRydWUsCiAgICAgICAgICAgICAgICBjb2x1bW5EZWZzOiBbewogICAgICAgICAgICAgICAgICAgICJ0YXJnZXRzIjogJ19hbGwnLAogICAgICAgICAgICAgICAgICAgICJyZW5kZXIiOiAkLmZuLmRhdGFUYWJsZS5yZW5kZXIudGV4dCgpCiAgICAgICAgICAgICAgICB9XQogICAgICAgICAgICB9KQogICAgICAgIH0pOwoKICAgICAgICBjb21wLm9uKCdoaWRkZW4uYnMubW9kYWwnLCBmdW5jdGlvbihldnQpIHsKICAgICAgICAgIGNvbXAuZmluZCgiI2FjdGlvbi10YWJsZSIpLmVtcHR5KCk7CiAgICAgICAgIH0pOwogICAgICAgIHJldHVybiBhY3Rpb25fbGlzdF90YWJsZQogICAgfTsKICAgIHZhciBzZXRFZGl0TW9kYWxWYWx1ZXMgPSBmdW5jdGlvbiAoZWRpdEFjdGlvbk1vZGFsLCBkYXRhKSB7CiAgICAgICAgdmFyIGFjdGlvblR5cGUgPSBkYXRhLnR5cGVPYmouaWQ7CiAgICAgICAgdmFyIG1lZXRpbmdJZCA9IGRhdGEubWVldGluZ0lkOwogICAgICAgIHZhciBvcHRpb24gPSBuZXcgT3B0aW9uKGRhdGEuYXNzaWduZWRUb09iai5mdWxsTmFtZSwgZGF0YS5hc3NpZ25lZFRvT2JqLmlkLCB0cnVlLCB0cnVlKTsKICAgICAgICBlZGl0QWN0aW9uTW9kYWwuZmluZCgiI2Fzc2lnbmVkVG8iKS5hcHBlbmQob3B0aW9uKS50cmlnZ2VyKCdjaGFuZ2UnKTsKICAgICAgICBpZighbWVldGluZ0lkKSB7CiAgICAgICAgICAgIGVkaXRBY3Rpb25Nb2RhbC5maW5kKCIjdHlwZSIpLnZhbChhY3Rpb25UeXBlKQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGVkaXRBY3Rpb25Nb2RhbC5maW5kKCIjbWVldGluZ0VsZW1lbnQiKS52YWwobWVldGluZ0lkKTsKICAgICAgICAgICAgZWRpdEFjdGlvbk1vZGFsLmZpbmQoIiNtZWV0aW5nVmFsdWUiKS52YWwobWVldGluZ0lkKTsKICAgICAgICB9CiAgICAgICAgZWRpdEFjdGlvbk1vZGFsLmZpbmQoIi5zdGF0dXMtaWNvbiIpLnJlbW92ZUNsYXNzKCdoaWRkZW4nKTsKICAgICAgICBlZGl0QWN0aW9uTW9kYWwuZmluZCgiI2NvbmZpZyIpLnZhbChkYXRhLmNvbmZpZ09iai5pZCk7CiAgICAgICAgZWRpdEFjdGlvbk1vZGFsLmZpbmQoIiNhY3Rpb25JZCIpLnZhbChkYXRhLmlkKTsKICAgICAgICB2YXIgZHVlRGF0ZSA9IG1vbWVudChkYXRhLmR1ZURhdGUsIERFRkFVTFRfREFURV9GT1JNQVQpLmZvcm1hdChERUZBVUxUX0RBVEVfRk9STUFUKTsKICAgICAgICBlZGl0QWN0aW9uTW9kYWwuZmluZCgiI2R1ZS1kYXRlLXBpY2tlciIpLmRhdGVwaWNrZXIoewogICAgICAgICAgICBkYXRlOiAkKCIjZHVlLWRhdGUtcGlja2VyIikudmFsKCkgPyBuZXcgRGF0ZSgkKCIjZHVlLWRhdGUtcGlja2VyIikudmFsKCkpIDogbnVsbCwKICAgICAgICAgICAgbW9tZW50Q29uZmlnOiB7CiAgICAgICAgICAgICAgICBjdWx0dXJlOiB1c2VyTG9jYWxlLAogICAgICAgICAgICAgICAgZm9ybWF0OiBERUZBVUxUX0RBVEVfRElTUExBWV9GT1JNQVQKICAgICAgICAgICAgfQogICAgICAgIH0pLmtleXByZXNzKHByZXZlbnRFbnRlcktleVN1Ym1pdCk7CiAgICAgICAgZWRpdEFjdGlvbk1vZGFsLmZpbmQoIiNkdWVEYXRlIikudmFsKGR1ZURhdGUpOwogICAgICAgIGVkaXRBY3Rpb25Nb2RhbC5maW5kKCIjY29tbWVudHMiKS52YWwoZGF0YS5jb21tZW50cyk7CiAgICAgICAgZWRpdEFjdGlvbk1vZGFsLmZpbmQoIiNkZXRhaWxzIikudmFsKGRhdGEuZGV0YWlscyk7CiAgICAgICAgZWRpdEFjdGlvbk1vZGFsLmZpbmQoIiNhY3Rpb25TdGF0dXMiKS52YWwoZGF0YS5hY3Rpb25TdGF0dXMpOwogICAgICAgIGVkaXRBY3Rpb25Nb2RhbC5maW5kKCcuYWN0aW9uLXZhbHVlJykudHJpZ2dlcignY2hhbmdlJyk7CiAgICB9OwogICAgdmFyIGhhbmRsZV9hY3Rpb25fZWRpdG9yX2NhbmNlbCA9IGZ1bmN0aW9uKGV2dCkgewogICAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgIHZhciBhY3Rpb25fbGlzdF90YWJsZSA9ICQoJyNhY3Rpb24tdGFibGUnKS5EYXRhVGFibGUoKTsKICAgICAgICBhY3Rpb25fbGlzdF90YWJsZS5hamF4LnJlbG9hZCgpOwogICAgICAgICQoJyNhY3Rpb24tZWRpdC1tb2RhbCcpLm1vZGFsKCdoaWRlJykKICAgIH07CgogICAgdmFyIGhhbmRsZV9hY3Rpb25fZWRpdG9yX3VwZGF0ZSA9IGZ1bmN0aW9uKGV2dCkgewogICAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgIGlmICghZXZ0LmhhbmRsZWQpIHsKICAgICAgICAgICAgZXZ0LmhhbmRsZWQgPSB0cnVlOwogICAgICAgICAgICB2YXIganNvbiA9ICQoJyNhY3Rpb24tZWRpdG9yLWNvbnRhaW5lciBmb3JtI2FjdGlvbi1lZGl0b3ItZm9ybScpLnNlcmlhbGl6ZSgpICsgIiZhcHBUeXBlPSIgKyAkKCIjYXBwVHlwZSIpLnZhbCgpICsgIiZleGVDb25maWdJZD0iICsgJCgiI2V4ZUNvbmZpZ0lkIikudmFsKCk7CgogICAgICAgICAgICAkLmFqYXgoewogICAgICAgICAgICAgICAgdXJsOiAnL3NpZ25hbC9hY3Rpb24vdXBkYXRlQWN0aW9uJywKICAgICAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgICAgICAgICAgZGF0YToganNvbiwKICAgICAgICAgICAgICAgIGFzeW5jOiBmYWxzZSwKICAgICAgICAgICAgICAgIGNhY2hlOiBmYWxzZSwKICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PSBmYWxzZSkgewogICAgICAgICAgICAgICAgICAgICAgICBjbGVhcl9lZGl0X2Vycm9ycygpOwogICAgICAgICAgICAgICAgICAgICAgICB2YXIgZXJyb3JNc2cgPSAiPGRpdiBjbGFzcz0nYWxlcnQgYWxlcnQtZGFuZ2VyJz4iOwogICAgICAgICAgICAgICAgICAgICAgICBmb3IodmFyIGluZGV4ID0gMDsgaW5kZXggPCByZXNwb25zZS5kYXRhLmxlbmd0aDsgaW5kZXgrKykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGVycm9yTWVzc2FnZU9iaiA9IHJlc3BvbnNlLmRhdGFbaW5kZXhdOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3JNc2cgKz0gZXJyb3JNZXNzYWdlT2JqOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3JNc2cgKz0gJzwvYnI+JzsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBlcnJvck1zZyArPSAiPC9kaXY+IjsKICAgICAgICAgICAgICAgICAgICAgICAgJCgnI2FjdGlvbi1lZGl0LW1vZGFsIC5tb2RhbC1ib2R5JykucHJlcGVuZChlcnJvck1zZykKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICB2YXIgYWN0aW9uX2xpc3RfdGFibGUgPSAkKCcjYWN0aW9uLXRhYmxlJykuRGF0YVRhYmxlKCkKICAgICAgICAgICAgICAgICAgICAgICAgYWN0aW9uX2xpc3RfdGFibGUuYWpheC5yZWxvYWQoKQogICAgICAgICAgICAgICAgICAgICAgICAvL1JlZnJlc2ggdGhlIGFjdGl2aXR5IHRhYmxlCiAgICAgICAgICAgICAgICAgICAgICAgIGlmKHR5cGVvZiBhcHBsaWNhdGlvbkxhYmVsICE9ICd1bmRlZmluZWQnICYmIGFwcGxpY2F0aW9uTGFiZWwgIT09IEFQUExJQ0FUSU9OX0xBQkVMLkNBU0VfREVUQUlMICYmIGFwcGxpY2F0aW9uTGFiZWwgIT09IEFQUExJQ0FUSU9OX0xBQkVMLkVWRU5UX0RFVEFJTCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2lnbmFsLmFjdGl2aXRpZXNfdXRpbHMucmVsb2FkX2FjdGl2aXR5X3RhYmxlKCk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgJCgnI2FjdGlvbi1lZGl0LW1vZGFsJykubW9kYWwoJ2hpZGUnKQogICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pCiAgICAgICAgfQogICAgfQogICAgLy9BZC1ob2MgYWxlcnQgYWN0aW9uIGxpc3QgZGF0YQogICAgdmFyIGluaXRfYWN0aW9uX3RhYmxlID0gZnVuY3Rpb24gKHRhYmxlX2lkLCBhcHBUeXBlKSB7CgogICAgICAgIHZhciBkYXRhVXJsID0gIi9zaWduYWwvYWN0aW9uL2xpc3RCeUFsZXJ0P2FsZXJ0SWQ9IiArIGFsZXJ0SWQgKyImYXBwVHlwZT0iICsgYXBwVHlwZTsKICAgICAgICBhZGhvY192YWxpZGF0ZWRfdGFibGUgPSAkKHRhYmxlX2lkKS5EYXRhVGFibGUoewogICAgICAgICAgICAvLyJzUGFnaW5hdGlvblR5cGUiOiAiYm9vdHN0cmFwIiwKCiAgICAgICAgICAgICJsYW5ndWFnZSI6IHsKICAgICAgICAgICAgICAgICJ1cmwiOiAiLi4vYXNzZXRzL2kxOG4vZGF0YVRhYmxlc18iICsgdXNlckxvY2FsZSArICIuanNvbiIKICAgICAgICAgICAgfSwKCiAgICAgICAgICAgIGZuRHJhd0NhbGxiYWNrOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAkKCcuZWRpdC1hY3Rpb24tbGluaycpLmNsaWNrKGZ1bmN0aW9uKGV2dCkgewogICAgICAgICAgICAgICAgICAgIHZhciB1cmwgPSAiL3NpZ25hbC9hY3Rpb24vZ2V0QnlJZD9pZD0iICsgJCh0aGlzKS5hdHRyKCdkYXRhLWlkJykKICAgICAgICAgICAgICAgICAgICAkLmFqYXgoewogICAgICAgICAgICAgICAgICAgICAgICB1cmw6IHVybCwKICAgICAgICAgICAgICAgICAgICAgICAgYXN5bmM6IGZhbHNlLAogICAgICAgICAgICAgICAgICAgICAgICBjYWNoZTogZmFsc2UKICAgICAgICAgICAgICAgICAgICB9KS5kb25lKGZ1bmN0aW9uKGRhdGEpIHsKICAgICAgICAgICAgICAgICAgICAgICAgaWYoYXBwVHlwZSA9PSAiU2lnbmFsIE1hbmFnZW1lbnQiIHx8IGFwcFR5cGUgPT0gIlRvcGljIikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGVkaXRBY3Rpb25Nb2RhbCA9ICQoJyNlZGl0QWN0aW9uTW9kYWwnKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldEVkaXRNb2RhbFZhbHVlcyhlZGl0QWN0aW9uTW9kYWwsIGRhdGEpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgZWRpdEFjdGlvbk1vZGFsLm1vZGFsKHt9KTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRBY3Rpb25Nb2RhbC5maW5kKCcudXBkYXRlLWFjdGlvbicpLnVuYmluZCgpLmNsaWNrKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgYWN0aW9uTW9kYWxJZCA9ICQoIiNlZGl0QWN0aW9uTW9kYWwgI3RlbXBGb3JtIik7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHVybDsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJCgnLm1lZXRpbmctZGVjaWRlcicpLnZhbCgpID09ICd0cnVlJykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cmwgPSAnL3NpZ25hbC9hY3Rpb24vdXBkYXRlTWVldGluZ0FjdGlvbic7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsID0gJy9zaWduYWwvYWN0aW9uL3VwZGF0ZUFjdGlvbic7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQuYWpheCh7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybDogdXJsLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXRob2Q6ICdQT1NUJywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogZ2V0QWN0aW9uRGV0YWlscyhhY3Rpb25Nb2RhbElkKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXN5bmM6IGZhbHNlLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWNoZTogZmFsc2UsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PSBmYWxzZSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsZWFyX2VkaXRfc2lnbmFsKCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGVycm9yTXNnID0gIjxkaXYgY2xhc3M9J2FsZXJ0IGFsZXJ0LWRhbmdlcic+IjsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IodmFyIGluZGV4ID0gMDsgaW5kZXggPCByZXNwb25zZS5kYXRhLmxlbmd0aDsgaW5kZXgrKykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZXJyb3JNZXNzYWdlT2JqID0gcmVzcG9uc2UuZGF0YVtpbmRleF07CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yTXNnICs9IGVycm9yTWVzc2FnZU9iajsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3JNc2cgKz0gJzwvYnI+JzsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3JNc2cgKz0gIjwvZGl2PiI7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJCgnI2VkaXRBY3Rpb25Nb2RhbCAubW9kYWwtYm9keScpLnByZXBlbmQoZXJyb3JNc2cpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoJyNhY3Rpb24tdGFibGUnKS5EYXRhVGFibGUoKS5hamF4LnJlbG9hZCgpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoJyNtZWV0aW5nLXRhYmxlJykuRGF0YVRhYmxlKCkuYWpheC5yZWxvYWQoKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9SZWZyZXNoIHRoZSBhY3Rpdml0eSB0YWJsZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKHR5cGVvZiBhcHBsaWNhdGlvbkxhYmVsICE9ICd1bmRlZmluZWQnICYmIGFwcGxpY2F0aW9uTGFiZWwgIT09IEFQUExJQ0FUSU9OX0xBQkVMLkNBU0VfREVUQUlMICYmIGFwcGxpY2F0aW9uTGFiZWwgIT09IEFQUExJQ0FUSU9OX0xBQkVMLkVWRU5UX0RFVEFJTCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaWduYWwuYWN0aXZpdGllc191dGlscy5yZWxvYWRfYWN0aXZpdHlfdGFibGUoKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWRpdEFjdGlvbk1vZGFsLm1vZGFsKCdoaWRlJyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLmFjdGlvbl90eXBlcyA9IGFjdGlvbl9zZWxlY3RfdmFsdWVzLnR5cGVzOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS5hY3Rpb25fY29uZmlncyA9IGFjdGlvbl9zZWxlY3RfdmFsdWVzLmNvbmZpZ3M7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLmFsbF9zdGF0dXMgPSBhY3Rpb25fc2VsZWN0X3ZhbHVlcy5hbGxTdGF0dXM7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLmFsZXJ0SWQgPSBhbGVydElkOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS5hY3Rpb25TdGF0dXMgPSB7bmFtZTogZGF0YS5hY3Rpb25TdGF0dXN9OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGh0bWxfY29udGVudCA9IHNpZ25hbC51dGlscy5yZW5kZXIoJ2FjdGlvbl9lZGl0b3InLCBkYXRhKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBhY3Rpb25fZWRpdG9yID0gJCgnI2FjdGlvbi1lZGl0b3ItY29udGFpbmVyJyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhY3Rpb25fZWRpdG9yLmh0bWwoaHRtbF9jb250ZW50KTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoJyNhY3Rpb24tZWRpdG9yLWNvbnRhaW5lciAjZHVlLWRhdGUtcGlja2VyJykuZGF0ZXBpY2tlcih7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0ZTogZGF0YS5kdWVEYXRlLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vbWVudENvbmZpZzogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdWx0dXJlOiB1c2VyTG9jYWxlLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ejogdXNlclRpbWVab25lLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3JtYXQ6IERFRkFVTFRfREFURV9ESVNQTEFZX0ZPUk1BVAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLmtleWRvd24ocHJldmVudEVudGVyS2V5U3VibWl0KTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjdGlvbl9lZGl0b3IuZmluZCgnI2R1ZS1kYXRlLXBpY2tlcicpLmZpbmQoJyNkdWVEYXRlJykudmFsKGRhdGEuZHVlRGF0ZSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhY3Rpb25fZWRpdG9yLmZpbmQoJyNkdWUtZGF0ZS1waWNrZXInKS5kYXRlcGlja2VyKCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZWRpdEFjdGlvbk1vZGFsID0gJCgnI2FjdGlvbi1lZGl0LW1vZGFsJyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlZGl0QWN0aW9uTW9kYWwuZmluZCgnLmlkLWVsZW1lbnQnKS5hdHRyKCdkYXRhLWlkJywgYWxlcnRJZCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlZGl0QWN0aW9uTW9kYWwubW9kYWwoe30pOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgJCgnI2FjdGlvbi1lZGl0b3ItY29udGFpbmVyJykuZmluZCgnI2FwcFR5cGUnKS52YWwoYXBwVHlwZSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCcjYWN0aW9uLWVkaXQtbW9kYWwgI2NhbmNlbC1idCcpLmNsaWNrKGhhbmRsZV9hY3Rpb25fZWRpdG9yX2NhbmNlbCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCcjYWN0aW9uLWVkaXQtbW9kYWwgI3VwZGF0ZS1idCcpLmNsaWNrKGhhbmRsZV9hY3Rpb25fZWRpdG9yX3VwZGF0ZSkKICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgfSkKCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJmbkluaXRDb21wbGV0ZSI6IGZ1bmN0aW9uKG9TZXR0aW5ncywganNvbikgewogICAgICAgICAgICAgICAgJCgnLmFjdGlvbi1jcmVhdGUnKS5hdHRyKCdkYXRhLWlkJywgYWxlcnRJZCkKICAgICAgICAgICAgICAgIHNpZ25hbC5hY3Rpb25zX3V0aWxzLnNldF9hY3Rpb25fY3JlYXRlX21vZGFsKCkKICAgICAgICAgICAgICAgICQoJyNkdWUtZGF0ZS1waWNrZXInKS5kYXRlcGlja2VyKCkKICAgICAgICAgICAgfSwKICAgICAgICAgICAgImFqYXgiOiB7CiAgICAgICAgICAgICAgICAidXJsIjogZGF0YVVybCwKICAgICAgICAgICAgICAgIGNhY2hlOiBmYWxzZSwKICAgICAgICAgICAgICAgIGRhdGFTcmM6ICIiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHNlYXJjaGluZzogdHJ1ZSwKICAgICAgICAgICAgZG9tOiAnQmZydGlwJywKICAgICAgICAgICAgYnV0dG9uczogWwogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIHRleHQ6ICdOZXcgQWN0aW9uJywKICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU6ICdidG4tcHJpbWFyeSBhY3Rpb24tY3JlYXRlJywKICAgICAgICAgICAgICAgICAgICBhY3Rpb246IGZ1bmN0aW9uICggZSwgZHQsIG5vZGUsIGNvbmZpZyApIHsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIGFhU29ydGluZzogW1swLCAiZGVzYyJdXSwKICAgICAgICAgICAgImJMZW5ndGhDaGFuZ2UiOiB0cnVlLAogICAgICAgICAgICAiaURpc3BsYXlMZW5ndGgiOiAxMCwKICAgICAgICAgICAgImFMZW5ndGhNZW51IjogW1sxMCwgMjAsIDUwLCAtMV0sIFsxMCwgMjAsIDUwLCAiQWxsIl1dLAogICAgICAgICAgICAiYW9Db2x1bW5zIjogWwogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJtRGF0YSI6ICJpZCIsCiAgICAgICAgICAgICAgICAgICAgbVJlbmRlcjogZnVuY3Rpb24oZGF0YSwgdHlwZSwgcm93KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAiPGEgaHJlZj0nIycgY2xhc3M9J2VkaXQtYWN0aW9uLWxpbmsnIGRhdGEtaWQ9JyIgKwogICAgICAgICAgICAgICAgICAgICAgICAgICAgcm93LmlkICsgIic+IiArIHJvdy5pZCArICI8YT4iCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAiY2xhc3NOYW1lIjogIiIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIm1EYXRhIjogInR5cGUiLAogICAgICAgICAgICAgICAgICAgICJjbGFzc05hbWUiOiAiIiwKICAgICAgICAgICAgICAgICAgICAibVJlbmRlciI6IGZ1bmN0aW9uIChkYXRhLCB0eXBlLCByb3cpIHsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICI8c3BhbiBjbGFzcz0nd29yZC13cmFwLWJyZWFrLXdvcmQnPiIgKyBlc2NhcGVIVE1MKHJvdy50eXBlKSArICI8L3NwYW4+IjsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJtRGF0YSI6ICJjb25maWciLAogICAgICAgICAgICAgICAgICAgICJjbGFzc05hbWUiOiAiIiwKICAgICAgICAgICAgICAgICAgICAibVJlbmRlciI6IGZ1bmN0aW9uIChkYXRhLCB0eXBlLCByb3cpIHsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICI8c3BhbiBjbGFzcz0nd29yZC13cmFwLWJyZWFrLXdvcmQnPiIgKyBlc2NhcGVIVE1MKHJvdy5jb25maWcpICsgIjwvc3Bhbj4iOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIm1EYXRhIjogImRldGFpbHMiLAogICAgICAgICAgICAgICAgICAgICJjbGFzc05hbWUiOiAiIiwKICAgICAgICAgICAgICAgICAgICAibVJlbmRlciI6IGZ1bmN0aW9uIChkYXRhLCB0eXBlLCByb3cpIHsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICI8c3BhbiBjbGFzcz0nd29yZC13cmFwLWJyZWFrLXdvcmQnPiIgKyBlc2NhcGVIVE1MKHJvdy5kZXRhaWxzKSArICI8L3NwYW4+IjsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJtRGF0YSI6ICJkdWVEYXRlIiwKICAgICAgICAgICAgICAgICAgICAnY2xhc3NOYW1lJzogJ2NvbC1taW4tMTAwJywKICAgICAgICAgICAgICAgICAgICBtUmVuZGVyOiBmdW5jdGlvbihkYXRhLCB0eXBlLCByb3cpIHsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCEocm93LmFjdGlvblN0YXR1cyA9PT0gJ0Nsb3NlZCcgJiYgcm93LmFjdGlvblN0YXR1cyA9PT0gJ0RlbGV0ZWQnKSAmJiByb3cucGFzc0R1ZSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICI8ZGl2IGNsYXNzPSdjbG9zZWQnPiIgKyByb3cuZHVlRGF0ZSArICI8L2Rpdj4iCiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gIjxkaXY+IiArIHJvdy5kdWVEYXRlICsgIjwvZGl2PiIKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIm1EYXRhIjogImFzc2lnbmVkVG8iLAogICAgICAgICAgICAgICAgICAgIG1SZW5kZXI6IGZ1bmN0aW9uKGRhdGEsIHR5cGUsIHJvdykgewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZXNjYXBlSFRNTChyb3cuYXNzaWduZWRUbykKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJjbGFzc05hbWUiOiAiY29sLW1pbi0xNTAiCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJtRGF0YSI6ICIiLAogICAgICAgICAgICAgICAgICAgIG1SZW5kZXI6IGZ1bmN0aW9uKGRhdGEsIHR5cGUsIHJvdykgewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcm93LmFjdGlvblN0YXR1cwogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgImNsYXNzTmFtZSI6ICIiCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJtRGF0YSI6ICJjb21wbGV0ZWREYXRlIiwKICAgICAgICAgICAgICAgICAgICBtUmVuZGVyOiBmdW5jdGlvbihkYXRhLCB0eXBlLHJvdyl7CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByb3cuY29tcGxldGVkRGF0ZQogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgImNsYXNzTmFtZSI6ICJjb2wtbWluLTE1MCIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgc2Nyb2xsWCA6IHRydWUKICAgICAgICB9KTsKICAgICAgICBhZGhvY192YWxpZGF0ZWRfdGFibGUuYnV0dG9uKCkuZGlzYWJsZSgpOwogICAgICAgIHJldHVybiBhZGhvY192YWxpZGF0ZWRfdGFibGUKICAgIH07CgogICAgdmFyIGJ1aWxkX2FjdGlvbl9yZW5kZXIgPSBmdW5jdGlvbihkYXRhKSB7CiAgICAgICAgdmFyIGFjdGlvbl9kcm9wX2Rvd25faHRtbCA9IHNpZ25hbC51dGlscy5yZW5kZXIoImFjdGlvbl9kcm9wX2Rvd24iLCBkYXRhKTsKICAgICAgICByZXR1cm4gYWN0aW9uX2Ryb3BfZG93bl9odG1sCiAgICB9OwogICAgdmFyIHJlbG9hZF9hY3Rpb25fdGFibGUgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgaWYgKHR5cGVvZiBhZGhvY192YWxpZGF0ZWRfdGFibGUgIT0gInVuZGVmaW5lZCIgJiYgYWRob2NfdmFsaWRhdGVkX3RhYmxlICE9IG51bGwpIHsKICAgICAgICAgICAgYWRob2NfdmFsaWRhdGVkX3RhYmxlLmFqYXgucmVsb2FkKCk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgY29uc29sZS5sb2coIlVuYWJsZSB0byByZWxvYWQgdGhlIGFjdGl2aXR5IHRhYmxlLiBQbGVhc2UgcmVmcmVzaCB0aGUgcGFnZS4iKQogICAgICAgIH0KICAgIH07CgogICAgcmV0dXJuIHsKICAgICAgICBzZXRfYWN0aW9uX2xpc3RfbW9kYWw6IHNldF9hY3Rpb25fbGlzdF9tb2RhbCwKICAgICAgICBzZXRfYWN0aW9uX2NyZWF0ZV9tb2RhbDogc2V0X2FjdGlvbl9jcmVhdGVfbW9kYWwsCiAgICAgICAgYnVpbGRfYWN0aW9uX3JlbmRlcjogYnVpbGRfYWN0aW9uX3JlbmRlciwKICAgICAgICBpbml0X2FjdGlvbl90YWJsZTogaW5pdF9hY3Rpb25fdGFibGUsCiAgICAgICAgcmVsb2FkX2FjdGlvbl90YWJsZSA6IHJlbG9hZF9hY3Rpb25fdGFibGUsCiAgICAgICAgaGFuZGxlX2FjdGlvbl9lZGl0b3JfY2FuY2VsOiBoYW5kbGVfYWN0aW9uX2VkaXRvcl9jYW5jZWwsCiAgICAgICAgaGFuZGxlX2FjdGlvbl9lZGl0b3JfdXBkYXRlOiBoYW5kbGVfYWN0aW9uX2VkaXRvcl91cGRhdGUsCiAgICAgICAgY2xlYXJfZWRpdF9lcnJvcnM6IGNsZWFyX2VkaXRfZXJyb3JzCiAgICB9Cn0pKCk7Cgp2YXIgc2lnbmFsID0gc2lnbmFsIHx8IHt9CgpzaWduYWwuYWN0aXZpdGllc191dGlscyA9IChmdW5jdGlvbigpIHsKICAgIHZhciBhY3Rpdml0eV90YWJsZTsKICAgIHZhciBzb3J0aW5nQ291bnQgPSAzOwoKICAgIHZhciBpbml0X2FjdGl2aXRpZXNfdGFibGUgPSBmdW5jdGlvbih0YWJsZSwgdXJsLCBhcHBUeXBlKSB7CiAgICAgICAgdmFyIGNvbHVtbnMgPSBjcmVhdGVfYWN0aXZpdHlfY29sdW1uX2RhdGEoYXBwVHlwZSk7CiAgICAgICAgYWN0aXZpdHlfdGFibGUgPSAkKHRhYmxlKS5EYXRhVGFibGUoewogICAgICAgICAgICAic1BhZ2luYXRpb25UeXBlIjogImJvb3RzdHJhcCIsCgogICAgICAgICAgICAibGFuZ3VhZ2UiOiB7CiAgICAgICAgICAgICAgICAidXJsIjogIi4uL2Fzc2V0cy9pMThuL2RhdGFUYWJsZXNfIiArIHVzZXJMb2NhbGUgKyAiLmpzb24iCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJhamF4IjogewogICAgICAgICAgICAgICAgInVybCI6IHVybCwKICAgICAgICAgICAgICAgICJkYXRhU3JjIjogIiIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgZm5EcmF3Q2FsbGJhY2s6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICQoJ2FbaHJlZj0iI2FjdGl2aXRpZXMiXScpLm9uKCJzaG93bi5icy50YWIiLCBmdW5jdGlvbiAoZSkgewogICAgICAgICAgICAgICAgICAgICQoJyNhY3Rpdml0aWVzVGFibGUnKS5EYXRhVGFibGUoKS5hamF4LnVybChnZXRBY3Rpdml0eVVybCgpKS5sb2FkKCk7CiAgICAgICAgICAgICAgICAgICAgYWRkR3JpZFNob3J0Y3V0cygnI2FjdGl2aXRpZXNUYWJsZScpOwogICAgICAgICAgICAgICAgICAgIHJlbW92ZUdyaWRTaG9ydGN1dHMoJyNhbGVydHNEZXRhaWxzVGFibGUnKTsKICAgICAgICAgICAgICAgICAgICByZW1vdmVHcmlkU2hvcnRjdXRzKCcjYXJjaGl2ZWRBbGVydHNUYWJsZScpOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJhYVNvcnRpbmciOiBbW3NvcnRpbmdDb3VudCwgImRlc2MiXV0sCiAgICAgICAgICAgICJiTGVuZ3RoQ2hhbmdlIjogdHJ1ZSwKICAgICAgICAgICAgImlEaXNwbGF5TGVuZ3RoIjogMTAsCiAgICAgICAgICAgICJiQXV0b1dpZHRoIjogZmFsc2UsCiAgICAgICAgICAgICJhb0NvbHVtbnMiOiBjb2x1bW5zLAogICAgICAgICAgICAic2Nyb2xsWCI6IHRydWUsCiAgICAgICAgICAgICJzY3JvbGxZIjoiY2FsYygxMDB2aCAtIDMwMXB4KSIsCiAgICAgICAgICAgICJhdXRvV2lkdGgiOnRydWUsCiAgICAgICAgICAgIGNvbHVtbkRlZnM6IFt7CiAgICAgICAgICAgICAgICAidGFyZ2V0cyI6ICdfYWxsJywKICAgICAgICAgICAgICAgICJyZW5kZXIiOiAkLmZuLmRhdGFUYWJsZS5yZW5kZXIudGV4dCgpCiAgICAgICAgICAgIH1dCiAgICAgICAgfSk7CiAgICAgICAgcmV0dXJuIGFjdGl2aXR5X3RhYmxlOwogICAgfTsKCiAgICB2YXIgY3JlYXRlX2FjdGl2aXR5X2NvbHVtbl9kYXRhID0gZnVuY3Rpb24oYXBwVHlwZSkgewogICAgICAgIHZhciBhb0NvbHVtbnMgPSBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJtRGF0YSI6ICJ0eXBlIiwKICAgICAgICAgICAgICAgICJtUmVuZGVyIjogZnVuY3Rpb24oZGF0YSwgdHlwZSwgcm93KSB7CiAgICAgICAgICAgICAgICAgICAgaWYocm93LnR5cGU9PSdQRUNEaXNzb2NpYXRlZCcpewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ1BFQyBEaXNzb2NpYXRlZCcKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYocm93LnR5cGU9PSdQRUNBc3NvY2lhdGVkJykgewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ1BFQyBBc3NvY2lhdGVkJwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gc2lnbmFsLnV0aWxzLmJyZWFrSXQocm93LnR5cGUpCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgJ2NsYXNzTmFtZSc6ICdjb2wtbWluLTE1MCcKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgIm1EYXRhIjogImRldGFpbHMiLAogICAgICAgICAgICAgICAgIm1SZW5kZXIiOiBmdW5jdGlvbihkYXRhLCB0eXBlLCByb3cpIHsKICAgICAgICAgICAgICAgICAgICByb3cuZGV0YWlscyA9IHJvdy5kZXRhaWxzLnJlcGxhY2UoLzxicj4vZywnXG4nKQogICAgICAgICAgICAgICAgICAgIGlmIChyb3cuanVzdGlmaWNhdGlvbikgewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gIjxzcGFuIGNsYXNzPSd3b3JkLXdyYXAtYnJlYWstd29yZCc+Iitlc2NhcGVIVE1MKHJvdy5kZXRhaWxzKSArICIgLS0gd2l0aCBKdXN0aWZpY2F0aW9uICciICsgZXNjYXBlSFRNTChyb3cuanVzdGlmaWNhdGlvbikgKyAiJyIrIjwvc3Bhbj4iOwogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBkZXNjcmlwdGlvblRleHQgPSBwcm9jZXNzX2Rlc2NyaXB0aW9uKHJvdy5kZXRhaWxzKTsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICI8c3BhbiBjbGFzcz0nd29yZC13cmFwLWJyZWFrLXdvcmQgY2VsbC1icmVhayc+IitkZXNjcmlwdGlvblRleHQrIjwvc3Bhbj4iOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAnY2xhc3NOYW1lJzogJ2NvbC1taW4tMjAwIGNvbC1tYXgtMzAwJwogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAibURhdGEiOiAicGVyZm9ybWVkQnkiLAogICAgICAgICAgICAgICAgIm1SZW5kZXIiOiBmdW5jdGlvbiAoZGF0YSwgdHlwZSwgcm93KSB7CiAgICAgICAgICAgICAgICAgICAgaWYocm93LnBlcmZvcm1lZEJ5RGVwdCAmJiByb3cucGVyZm9ybWVkQnlEZXB0ICE9ICcnKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBlc2NhcGVIVE1MKHJvdy5wZXJmb3JtZWRCeSArICIgKCIgKyByb3cucGVyZm9ybWVkQnlEZXB0ICsgIikiKQogICAgICAgICAgICAgICAgICAgIH0gZWxzZXsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJvdy5wZXJmb3JtZWRCeQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAnY2xhc3NOYW1lJzogJ2NvbC1taW4tMTUwJwogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAibURhdGEiOiAidGltZXN0YW1wIiwKICAgICAgICAgICAgICAgICJtUmVuZGVyIjogZnVuY3Rpb24oZGF0YSwgdHlwZSwgZnVsbCkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBkYXRhCgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICdjbGFzc05hbWUnOiAnY29sLW1pbi0xNTAnCiAgICAgICAgICAgIH0KICAgICAgICBdOwogICAgICAgIGlmKGFwcFR5cGUgPT0gJ1NpbmdsZSBDYXNlIEFsZXJ0JykgewogICAgICAgICAgICBhb0NvbHVtbnMuc3BsaWNlKDAsMCx7CiAgICAgICAgICAgICAgICAibURhdGEiOiAiY2FzZU51bWJlciIsCiAgICAgICAgICAgICAgICAnY2xhc3NOYW1lJzogJ2NvbC1taW4tMTAwJwogICAgICAgICAgICB9KTsKICAgICAgICAgICAgYW9Db2x1bW5zLnNwbGljZSgyLDAsewogICAgICAgICAgICAgICAgIm1EYXRhIjogInN1c3BlY3QiLAogICAgICAgICAgICAgICAgJ2NsYXNzTmFtZSc6ICdjb2wtbWluLTIwMCcKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIGFvQ29sdW1ucy5zcGxpY2UoMywwLHsKICAgICAgICAgICAgICAgICJtRGF0YSI6ICJldmVudE5hbWUiLAogICAgICAgICAgICAgICAgJ2NsYXNzTmFtZSc6ICdjb2wtbWluLTE1MCcKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIGFvQ29sdW1ucy5zcGxpY2UoNSwwLHsKICAgICAgICAgICAgICAgICJtRGF0YSI6ICJjdXJyZW50QXNzaWdubWVudCIsCiAgICAgICAgICAgICAgICAibVJlbmRlciI6IGZ1bmN0aW9uIChkYXRhLCB0eXBlLCByb3cpIHsKICAgICAgICAgICAgICAgICAgICB2YXIgY3VyckFzc2lnbm1lbnQKICAgICAgICAgICAgICAgICAgICBpZiAocm93LmN1cnJlbnRBc3NpZ25tZW50RGVwdCAmJiByb3cuY3VycmVudEFzc2lnbm1lbnREZXB0ICE9ICcnKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJBc3NpZ25tZW50ID0gcm93LmN1cnJlbnRBc3NpZ25tZW50ICsgIiAoIiArIHJvdy5jdXJyZW50QXNzaWdubWVudERlcHQgKyAiKSIKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICBjdXJyQXNzaWdubWVudCA9IChyb3cuY3VycmVudEFzc2lnbm1lbnQpCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIHJldHVybiBlc2NhcGVIVE1MKGN1cnJBc3NpZ25tZW50KQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICdjbGFzc05hbWUnOiAnY29sLW1pbi0xNTAnCiAgICAgICAgICAgIH0pOwogICAgICAgICAgICBzb3J0aW5nQ291bnQgPSA3CiAgICAgICAgfWVsc2UgaWYoYXBwVHlwZSA9PSAnTGl0ZXJhdHVyZSBTZWFyY2ggQWxlcnQnKSB7CiAgICAgICAgICAgIGFvQ29sdW1ucy5zcGxpY2UoMCwwLHsKICAgICAgICAgICAgICAgICJtRGF0YSI6ICJhcnRpY2xlSWQiLAogICAgICAgICAgICAgICAgJ2NsYXNzTmFtZSc6ICdjb2wtbWluLTEwMCcKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIGFvQ29sdW1ucy5zcGxpY2UoMiwwLHsKICAgICAgICAgICAgICAgICJtRGF0YSI6ICJzZWFyY2hTdHJpbmciLAogICAgICAgICAgICAgICAgJ2NsYXNzTmFtZSc6ICdjb2wtbWluLTEwMCcKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIGFvQ29sdW1ucy5zcGxpY2UoMywwLHsKICAgICAgICAgICAgICAgICJtRGF0YSI6ICJwcm9kdWN0TmFtZSIsCiAgICAgICAgICAgICAgICAnY2xhc3NOYW1lJzogJ2NvbC1taW4tMjAwJwogICAgICAgICAgICB9KTsKICAgICAgICAgICAgYW9Db2x1bW5zLnNwbGljZSg0LDAsewogICAgICAgICAgICAgICAgIm1EYXRhIjogImV2ZW50TmFtZSIsCiAgICAgICAgICAgICAgICAnY2xhc3NOYW1lJzogJ2NvbC1taW4tMTUwJwogICAgICAgICAgICB9KTsKICAgICAgICAgICAgYW9Db2x1bW5zLnNwbGljZSg2LDAsewogICAgICAgICAgICAgICAgIm1EYXRhIjogImN1cnJlbnRBc3NpZ25tZW50IiwKICAgICAgICAgICAgICAgICJtUmVuZGVyIjogZnVuY3Rpb24gKGRhdGEsIHR5cGUsIHJvdykgewogICAgICAgICAgICAgICAgICAgIHZhciBjdXJyQXNzaWdubWVudAogICAgICAgICAgICAgICAgICAgIGlmIChyb3cuY3VycmVudEFzc2lnbm1lbnREZXB0ICYmIHJvdy5jdXJyZW50QXNzaWdubWVudERlcHQgIT0gJycpIHsKICAgICAgICAgICAgICAgICAgICAgICAgY3VyckFzc2lnbm1lbnQgPSByb3cuY3VycmVudEFzc2lnbm1lbnQgKyAiICgiICsgcm93LmN1cnJlbnRBc3NpZ25tZW50RGVwdCArICIpIgogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJBc3NpZ25tZW50ID0gKHJvdy5jdXJyZW50QXNzaWdubWVudCkKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGVzY2FwZUhUTUwoY3VyckFzc2lnbm1lbnQpCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgJ2NsYXNzTmFtZSc6ICdjb2wtbWluLTE1MCcKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIHNvcnRpbmdDb3VudCA9IDgKICAgICAgICB9IGVsc2UgaWYgKGFwcFR5cGUgPT0gJ0FnZ3JlZ2F0ZSBDYXNlIEFsZXJ0JyB8fCBhcHBUeXBlID09ICdFVkRBUyBBbGVydCcpIHsKICAgICAgICAgICAgYW9Db2x1bW5zLnNwbGljZSgxLDAsewogICAgICAgICAgICAgICAgIm1EYXRhIjogInN1c3BlY3QiLAogICAgICAgICAgICAgICAgJ2NsYXNzTmFtZSc6ICdjb2wtbWluLTE1MCcKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIGFvQ29sdW1ucy5zcGxpY2UoMiwwLHsKICAgICAgICAgICAgICAgICJtRGF0YSI6ICJldmVudE5hbWUiLAogICAgICAgICAgICAgICAgJ2NsYXNzTmFtZSc6ICdjb2wtbWluLTE1MCcKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIGFvQ29sdW1ucy5zcGxpY2UoNCwwLHsKICAgICAgICAgICAgICAgICJtRGF0YSI6ICJjdXJyZW50QXNzaWdubWVudCIsCiAgICAgICAgICAgICAgICAibVJlbmRlciI6IGZ1bmN0aW9uIChkYXRhLCB0eXBlLCByb3cpIHsKICAgICAgICAgICAgICAgICAgICB2YXIgY3VyckFzc2lnbm1lbnQKICAgICAgICAgICAgICAgICAgICBpZiAocm93LmN1cnJlbnRBc3NpZ25tZW50RGVwdCAmJiByb3cuY3VycmVudEFzc2lnbm1lbnREZXB0ICE9ICcnKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJBc3NpZ25tZW50ID0gcm93LmN1cnJlbnRBc3NpZ25tZW50ICsgIiAoIiArIHJvdy5jdXJyZW50QXNzaWdubWVudERlcHQgKyAiKSIKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICBjdXJyQXNzaWdubWVudCA9IChyb3cuY3VycmVudEFzc2lnbm1lbnQpCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIHJldHVybiBlc2NhcGVIVE1MKGN1cnJBc3NpZ25tZW50KQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICdjbGFzc05hbWUnOiAnY29sLW1pbi0xNTAnCiAgICAgICAgICAgIH0pOwogICAgICAgICAgICBzb3J0aW5nQ291bnQgPSA2CiAgICAgICAgfQogICAgICAgIHJldHVybiBhb0NvbHVtbnMKICAgIH07CgogICAgdmFyIHJlbG9hZF9hY3Rpdml0eV90YWJsZSA9IGZ1bmN0aW9uKCkgewoKICAgICAgICBpZiAodHlwZW9mIGFjdGl2aXR5X3RhYmxlICE9ICJ1bmRlZmluZWQiICYmIGFjdGl2aXR5X3RhYmxlICE9IG51bGwpIHsKICAgICAgICAgICAgYWN0aXZpdHlfdGFibGUuYWpheC5yZWxvYWQoKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBjb25zb2xlLmxvZygiVW5hYmxlIHRvIHJlbG9hZCB0aGUgYWN0aXZpdHkgdGFibGUuIFBsZWFzZSByZWZyZXNoIHRoZSBwYWdlLiIpCiAgICAgICAgfQoKICAgIH07CgogICAgdmFyIHByb2Nlc3NfZGVzY3JpcHRpb24gPSBmdW5jdGlvbihkZXNjcmlwdGlvblN0cikgewogICAgICAgIGlmICh0eXBlb2YgZGVzY3JpcHRpb25TdHIgIT0gInVuZGVmaW5lZCIgJiYgZGVzY3JpcHRpb25TdHIgIT0gbnVsbCkgewogICAgICAgICAgICB2YXIgZGVzY3JpcHRpb25zID0gZGVzY3JpcHRpb25TdHIuc3BsaXQoJ3wnKTsKICAgICAgICAgICAgLy92YXIgZm9ybWF0dGVkU3RyaW5nID0gJycKICAgICAgICAgICAgdmFyIGZvcm1hdHRlZFN0cmluZyA9ICBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsKICAgICAgICAgICAgZm9yICh2YXIgaW5kZXggPSAwOyBpbmRleDxkZXNjcmlwdGlvbnMubGVuZ3RoOyBpbmRleCsrKSB7CiAgICAgICAgICAgICAgICB2YXIgZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbnNbaW5kZXhdOwogICAgICAgICAgICAgICAgdmFyIGRlc2NTcGFuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogICAgICAgICAgICAgICAgZGVzY1NwYW4uaW5uZXJIVE1MID0gZXNjYXBlSFRNTChkZXNjcmlwdGlvbik7CiAgICAgICAgICAgICAgICBkZXNjU3Bhbi5pbm5lckhUTUwgPSBkZXNjU3Bhbi5pbm5lckhUTUwucmVwbGFjZSgvXG4vZywgJzxicj4nKQogICAgICAgICAgICAgICAgZm9ybWF0dGVkU3RyaW5nLmFwcGVuZENoaWxkKGRlc2NTcGFuKTsKICAgICAgICAgICAgICAgIGZvcm1hdHRlZFN0cmluZy5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdicicpKTsKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gZm9ybWF0dGVkU3RyaW5nLmlubmVySFRNTDsKICAgICAgICB9CiAgICB9OwoKICAgIHJldHVybiB7CiAgICAgICAgaW5pdF9hY3Rpdml0aWVzX3RhYmxlIDogaW5pdF9hY3Rpdml0aWVzX3RhYmxlLAogICAgICAgIHByb2Nlc3NfZGVzY3JpcHRpb24gOiBwcm9jZXNzX2Rlc2NyaXB0aW9uLAogICAgICAgIHJlbG9hZF9hY3Rpdml0eV90YWJsZSA6IHJlbG9hZF9hY3Rpdml0eV90YWJsZQogICAgfQp9KSgpOwoKZnVuY3Rpb24gZ2V0QWN0aXZpdHlVcmwoKSB7CiAgICBpZiAoYXBwbGljYXRpb25OYW1lID09PSBBTEVSVF9DT05GSUdfVFlQRS5MSVRFUkFUVVJFX1NFQVJDSF9BTEVSVCkgewogICAgICAgIHJldHVybiBhbGVydEFjdGl2aXRpZXM7CiAgICB9IGVsc2UgaWYgKGFwcGxpY2F0aW9uTmFtZSA9PT0gQUxFUlRfQ09ORklHX1RZUEUuU0lHTkFMX01BTkFHRU1FTlQpIHsKICAgICAgICByZXR1cm4gYWN0aXZpdHlVcmw7CiAgICB9CiAgICByZXR1cm4gYWxlcnRBY3Rpdml0aWVzVXJsICsgJz9leGVjdXRlZElkTGlzdD0nICsgZXhlY3V0ZWRJZExpc3QgKyAiJmFwcFR5cGU9IiArIGFwcGxpY2F0aW9uTmFtZQoKfQoKCi8vPSByZXF1aXJlIGFwcC9wdnMvY29tbW9uL3J4X2NvbW1vbi5qcwovLz0gcmVxdWlyZSBhcHAvcHZzL2Nhc2VEcmlsbERvd24vY2FzZURyaWxsRG93bgovLz0gcmVxdWlyZSBhcHAvcHZzL2FsZXJ0Q29tbWVudHMvYWxlcnRDb21tZW50cwovLz0gcmVxdWlyZSBhcHAvcHZzL2NvbW1vbi9yeF9hbGVydF91dGlscwovLz0gcmVxdWlyZSBhcHAvcHZzL2FsZXJ0c19yZXZpZXcvYWxlcnRfcmV2aWV3Ci8vPSByZXF1aXJlIGFwcC9wdnMvYWN0aW9ucy9hY3Rpb25zLmpzCi8vPSByZXF1aXJlIGFwcC9wdnMvYWN0aXZpdHkvYWN0aXZpdGllcy5qcwovLz0gcmVxdWlyZSBhcHAvcHZzL2NvbW1vbi9yeF9saXN0X3V0aWxzLmpzCgoKREFURV9GTVRfVFogPSAiWVlZWS1NTS1ERCI7CnZhciB0YWJsZTsKdmFyIGFjdGl2aXRpZXNfdGFibGU7CnZhciBhcHBsaWNhdGlvbk5hbWUgPSAiTGl0ZXJhdHVyZSBTZWFyY2ggQWxlcnQiOwp2YXIgYXBwbGljYXRpb25MYWJlbCA9ICJMaXRlcmF0dXJlIFNlYXJjaCBBbGVydCI7CgokKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbiAoKSB7CiAgICBhc3NpZ25lZFRvRGF0YSA9IFtdOwogICAgdmFyIHByZWZpeCA9ICJsc2FfIjsKCiAgICAkKCJhW2RhdGEtdG9nZ2xlPVwidGFiXCJdIikub24oInNob3duLmJzLnRhYiIsIGZ1bmN0aW9uIChlKSB7CiAgICAgICAgJCgnI2FsZXJ0c0RldGFpbHNUYWJsZScpLkRhdGFUYWJsZSgpLmNvbHVtbnMuYWRqdXN0KCk7CiAgICAgICAgJCgnI2FjdGl2aXRpZXNUYWJsZScpLkRhdGFUYWJsZSgpLmNvbHVtbnMuYWRqdXN0KCk7CiAgICB9KTsKICAgICQoJ2FbaHJlZj0iI2RldGFpbHMiXScpLm9uKCJzaG93bi5icy50YWIiLCBmdW5jdGlvbiAoZSkgewogICAgICAgICQoJyNhbGVydHNEZXRhaWxzVGFibGUnKS5EYXRhVGFibGUoKS5jb2x1bW5zLmFkanVzdCgpOwogICAgICAgIGFkZEdyaWRTaG9ydGN1dHMoJyNhbGVydHNEZXRhaWxzVGFibGUnKTsKICAgICAgICByZW1vdmVHcmlkU2hvcnRjdXRzKCcjYWN0aXZpdGllc1RhYmxlJyk7CiAgICB9KTsKICAgIHZhciBnZW5BcnRpY2xlTGluayA9IGZ1bmN0aW9uIChhcnRpY2xlSWQsIHRpdGxlLCBsaXRJZCkgewogICAgICAgIHJldHVybiAnPGEgdGFyZ2V0PSJfYmxhbmsiIGNsYXNzPSJhcnRpY2xlVGl0bGUiIGRhdGEtYXJ0aWNsZUlkID0gIicgKyBhcnRpY2xlSWQgKyAnIiBkYXRhLWxpdElkID0gIicgKyBsaXRJZCArICciIGhyZWY9IicgKyBwdWJNZWRVcmwgKyBhcnRpY2xlSWQgKyAnIj4nICsgdGl0bGUgKyAnPC9hPic7CiAgICB9OwoKICAgICQoJyNhY3Rpdml0eV90YWInKS5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgaWYgKCFhY3Rpdml0aWVzX3RhYmxlKSB7CiAgICAgICAgICAgIGFjdGl2aXRpZXNfdGFibGUgPSBzaWduYWwuYWN0aXZpdGllc191dGlscy5pbml0X2FjdGl2aXRpZXNfdGFibGUoJCgiI2FjdGl2aXRpZXNUYWJsZSIpLCBhbGVydEFjdGl2aXRpZXMsIGFwcGxpY2F0aW9uTmFtZSk7CiAgICAgICAgfQogICAgfSk7CgogICAgdmFyIGNoZWNrZWRJZExpc3QgPSBbXTsKICAgIHZhciBjaGVja2VkUm93TGlzdCA9IFtdOwogICAgc2lnbmFsLmZpZWxkTWFuYWdlbWVudC5wb3B1bGF0ZUNvbHVtbkxpc3QoZ3JpZENvbHVtbnNWaWV3VXJsLCBncmlkQ29sdW1uc1ZpZXdVcGRhdGVVcmwpOwogICAgc2lnbmFsLmFjdGlvbnNfdXRpbHMuc2V0X2FjdGlvbl9jcmVhdGVfbW9kYWwoJCgnI2FjdGlvbi1jcmVhdGUtbW9kYWwnKSk7CiAgICBzaWduYWwuYWN0aW9uc191dGlscy5zZXRfYWN0aW9uX2xpc3RfbW9kYWwoJCgnI2FjdGlvbi1tb2RhbCcpKTsKICAgIHNpZ25hbC5hbGVydFJldmlldy5vcGVuQWxlcnRUYWdNb2RhbCgpOwogICAgc2lnbmFsLmFsZXJ0UmV2aWV3Lm9wZW5BbGVydENvbW1lbnRNb2RhbCgiTGl0ZXJhdHVyZSBTZWFyY2ggQWxlcnQiLCBhcHBsaWNhdGlvbk5hbWUsIGFwcGxpY2F0aW9uTGFiZWwsIGNoZWNrZWRJZExpc3QsIGNoZWNrZWRSb3dMaXN0KTsKICAgIHNpZ25hbC5hbGVydFJldmlldy5zaG93QXR0YWNobWVudE1vZGFsKCk7CiAgICBiaW5kQWJzdHJhY3RWaWV3KCk7CgogICAgdGFibGUgPSAkKCcjYWxlcnRzRGV0YWlsc1RhYmxlJykuRGF0YVRhYmxlKHsKICAgICAgICAibGFuZ3VhZ2UiOiB7CiAgICAgICAgICAgICJ1cmwiOiAiLi4vYXNzZXRzL2kxOG4vZGF0YVRhYmxlc18iICsgdXNlckxvY2FsZSArICIuanNvbiIKICAgICAgICB9LAogICAgICAgIHN0YXRlU2F2ZTogdHJ1ZSwKICAgICAgICBmbkRyYXdDYWxsYmFjazogZnVuY3Rpb24gKCkgewogICAgICAgICAgICB0aGlzLmFwaSgpLnN0YXRlLmNsZWFyKCk7CiAgICAgICAgICAgIGlmICggJCgnI2RldGFpbGVkLXZpZXctY2hlY2tib3gnKS5wcm9wKCJjaGVja2VkIikgPT0gdHJ1ZSkgewogICAgICAgICAgICAgICAgc2hvd0Fic3RyYWN0RGV0YWlsc1ZpZXcoKQogICAgICAgICAgICB9CiAgICAgICAgICAgIHRhZ0VsbGlwc2lzKCk7CiAgICAgICAgICAgIGNvbEVsbGlwc2lzKCk7CiAgICAgICAgICAgIHdlYlVpUG9wSW5pdCgpOwogICAgICAgICAgICBpZiAoISQodGFibGUudGFibGUoKS5ib2R5KCkpLmhhc0NsYXNzKCdkZXRhaWxzVGFibGVCb2R5JykpIHsKICAgICAgICAgICAgICAgICQodGFibGUudGFibGUoKS5ib2R5KCkpLmFkZENsYXNzKCdkZXRhaWxzVGFibGVCb2R5Jyk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZW50ZXJLZXlBbGVydERldGFpbCgpOwogICAgICAgICAgICBjbG9zZVBvcHVwT25TY3JvbGwoKTsKICAgICAgICB9LAogICAgICAgIGZuSW5pdENvbXBsZXRlOiBmdW5jdGlvbiAoc2V0dGluZ3MsIGpzb24pIHsKICAgICAgICAgICAgc2lnbmFsLmFsZXJ0UmV2aWV3LmJpbmRHcmlkRHluYW1pY0ZpbHRlcnMoanNvbi5maWx0ZXJzLCBwcmVmaXgsIGpzb24uY29uZmlnSWQpOwogICAgICAgICAgICBhc3NpZ25lZFRvRGF0YSA9IFtdOwogICAgICAgICAgICBzaWduYWwuYWxlcnRSZXZpZXcuZW5hYmxlTWVudVRvb2x0aXBzKCk7CiAgICAgICAgICAgIGFkZEdyaWRTaG9ydGN1dHMoJyNhbGVydHNEZXRhaWxzVGFibGUnKTsKICAgICAgICB9LAoKICAgICAgICAiYWpheCI6IHsKICAgICAgICAgICAgInVybCI6IGxpc3RDb25maWdVcmwsCiAgICAgICAgICAgICJkYXRhU3JjIjogImFhRGF0YSIsCiAgICAgICAgICAgICJjYWNoZSI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAiYkxlbmd0aENoYW5nZSI6IHRydWUsCiAgICAgICAgImJQcm9jZXNzaW5nIjogdHJ1ZSwKICAgICAgICAiYlNlcnZlclNpZGUiOiB0cnVlLAogICAgICAgICJjb2xSZW9yZGVyIjogewogICAgICAgICAgICAicmVhbHRpbWUiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgIm9MYW5ndWFnZSI6IHsKICAgICAgICAgICAgInNQcm9jZXNzaW5nIjogJzxkaXYgY2xhc3M9ImdyaWQtbG9hZGluZyI+PGltZyBzcmM9Ii9zaWduYWwvYXNzZXRzL3NwaW5uZXIuZ2lmIiB3aWR0aD0iMzAiIGFsaWduPSJtaWRkbGUiIC8+PC9kaXY+JywKICAgICAgICAgICAgInNaZXJvUmVjb3JkcyI6ICJObyBkYXRhIGF2YWlsYWJsZSBpbiB0YWJsZSIsICJzRW1wdHlUYWJsZSI6ICJObyBkYXRhIGF2YWlsYWJsZSBpbiB0YWJsZSAiCiAgICAgICAgfSwKICAgICAgICAiYUxlbmd0aE1lbnUiOiBbWzUwLCAxMDAsIDIwMF0sIFs1MCwgMTAwLCAyMDBdXSwKICAgICAgICAicGFnaW5hdGlvbiI6IHRydWUsCiAgICAgICAgImlUb3RhbERpc3BsYXlSZWNvcmRzIjogIjUwIiwKICAgICAgICAiYW9Db2x1bW5zIjogWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAibURhdGEiOiAic2VsZWN0ZWQiLAogICAgICAgICAgICAgICAgIm1SZW5kZXIiOiBmdW5jdGlvbiAoZGF0YSwgdHlwZSwgcm93KSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICc8aW5wdXQgY2xhc3M9ImV4ZWNDb25maWdJZCIgaWQ9ImV4ZWNDb25maWdJZCIgdHlwZT0iaGlkZGVuIiB2YWx1ZT0iJyArIHJvdy5leGVjQ29uZmlnSWQgKyAnIiAvPicgKwogICAgICAgICAgICAgICAgICAgICAgICAnPGlucHV0IGNsYXNzPSJhbGVydENvbmZpZ0lkIiBpZD0iYWxlcnRDb25maWdJZCIgdHlwZT0iaGlkZGVuIiB2YWx1ZT0iJyArIHJvdy5hbGVydENvbmZpZ0lkICsgJyIgLz4nICsKICAgICAgICAgICAgICAgICAgICAgICAgJzxzcGFuIGNsYXNzPSJncmlkLXJvdy1jaGVjayI+PGlucHV0IGRhdGEtdG9nZ2xlPSJ0b29sdGlwIiB0aXRsZT0icm93IGNoZWNrIiBkYXRhLXRpdGxlPSJkYXRhIGNoZWNrIiB0eXBlPSJjaGVja2JveCIgY2xhc3M9ImFsZXJ0LWNoZWNrLWJveCBlZGl0b3ItYWN0aXZlIGNvcHktc2VsZWN0IiBkYXRhLWlkPScgKyByb3cuaWQgKyAnIC8+PC9zcGFuPic7CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgImNsYXNzTmFtZSI6ICcnLAogICAgICAgICAgICAgICAgIm9yZGVyYWJsZSI6IGZhbHNlCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJtRGF0YSI6ICJkcm9wZG93biIsCiAgICAgICAgICAgICAgICAibVJlbmRlciI6IGZ1bmN0aW9uIChkYXRhLCB0eXBlLCByb3cpIHsKICAgICAgICAgICAgICAgICAgICB2YXIgYWN0aW9uQnV0dG9uID0gJzxkaXYgc3R5bGU9ImRpc3BsYXk6IGJsb2NrOyIgY2xhc3M9ImJ0bi1ncm91cCBkcm9wZG93biBkYXRhVGFibGVIaWRlQ2VsbENvbnRlbnQiIGFsaWduPSJjZW50ZXIiPiBcCiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJkcm9wZG93bi10b2dnbGUiIGRhdGEtdG9nZ2xlPSJkcm9wZG93biIgdGFiaW5kZXg9IjAiPiBcCiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7Zm9udC1zaXplOiAxMjUlOyIgY2xhc3M9ImdseXBoaWNvbiBnbHlwaGljb24tb3B0aW9uLXZlcnRpY2FsIj48L3NwYW4+PHNwYW4gY2xhc3M9InNyLW9ubHkiPlRvZ2dsZSBEcm9wZG93bjwvc3Bhbj4gXAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+ICc7CgogICAgICAgICAgICAgICAgICAgIGlmKHJvdy5jb21tZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGFjdGlvbkJ1dHRvbiArPSAgJzxpIGNsYXNzPSJtZGkgbWRpLWNoYXQgYmx1ZS0yIGZvbnQtMTMgcG9zLWFiIGNvbW1lbnQiIHRpdGxlPSInICsgJC5pMThuLl8oJ2NvbW1lbnRBdmFpbGFibGUnKSArICciPjwvaT4nOwogICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgaWYocm93LmlzQXR0YWNobWVudCA9PSB0cnVlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGFjdGlvbkJ1dHRvbiArPSAnIDxpIGNsYXNzPSJtZGkgbWRpLWF0dGFjaG1lbnQgYmx1ZS0xIGZvbnQtMTMgcG9zLWFiIGF0dGFjaCIgdGl0bGU9IicgKyAkLmkxOG4uXygnYXR0YWNobWVudEF2YWlsYWJsZScpICsgJyI+PC9pPic7CiAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICBhY3Rpb25CdXR0b24gKz0gJzx1bCBjbGFzcz0iZHJvcGRvd24tbWVudSBtZW51LWNvc3kiIHJvbGU9Im1lbnUiPjxsaSByb2xlPSJwcmVzZW50YXRpb24iPjxhIHRhYmluZGV4PSIwIiBjbGFzcz0icmV2aWV3LXJvdy1pY29uIGNvbW1lbnQtaWNvbiAiIGRhdGEtaW5mbz0icm93Ij48c3BhbiBjbGFzcz0iZmEgZmEtY29tbWVudCBtLXItMTAiPjwvc3Bhbj4nICsgJC5pMThuLl8oJ2NvbnRleHRNZW51LmNvbW1lbnRzJykgKyAnPC9hPjwvbGk+JzsKICAgICAgICAgICAgICAgICAgICBhY3Rpb25CdXR0b24gKz0gJzxsaSByb2xlPSJwcmVzZW50YXRpb24iPjxhIHRhYmluZGV4PSIwIiBjbGFzcz0icmV2aWV3LXJvdy1pY29uIHNob3ctYXR0YWNobWVudC1pY29uIiBkYXRhLWZpZWxkPSJhdHRhY2htZW50IiBkYXRhLWlkPSInICsgcm93LmlkICsgJyIgZGF0YS1jb250cm9sbGVyPSJsaXRlcmF0dXJlQWxlcnQiPjxzcGFuIGNsYXNzPSJmYSBmYS1maWxlIG0tci0xMCI+PC9zcGFuPicgKyAkLmkxOG4uXygnY29udGV4dE1lbnUuYXR0YWNobWVudCcpICsgJzwvYT48L2xpPic7CiAgICAgICAgICAgICAgICAgICAgYWN0aW9uQnV0dG9uICs9ICc8L3VsPjwvZGl2Pic7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGFjdGlvbkJ1dHRvbjsKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAib3JkZXJhYmxlIjogZmFsc2UsCiAgICAgICAgICAgICAgICAidmlzaWJsZSI6IHRydWUsCiAgICAgICAgICAgICAgICAiY2xhc3NOYW1lIjoiZHJvcERvd24iCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJtRGF0YSI6ICJwcmlvcml0eSIsCiAgICAgICAgICAgICAgICAiYVRhcmdldHMiOiBbInByaW9yaXR5Il0sCiAgICAgICAgICAgICAgICAibVJlbmRlciI6IGZ1bmN0aW9uIChkYXRhLCB0eXBlLCByb3cpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gc2lnbmFsLnV0aWxzLnJlbmRlcigncHJpb3JpdHknLCB7CiAgICAgICAgICAgICAgICAgICAgICAgIHByaW9yaXR5VmFsdWU6IHJvdy5wcmlvcml0eS52YWx1ZSwKICAgICAgICAgICAgICAgICAgICAgICAgcHJpb3JpdHlDbGFzczogcm93LnByaW9yaXR5Lmljb25DbGFzcywKICAgICAgICAgICAgICAgICAgICAgICAgaXNQcmlvcml0eUNoYW5nZUFsbG93ZWQ6IHRydWUKICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAnY2xhc3NOYW1lJzogJ2NvbC1taW4tMjUgcHJpb3JpdHlQYXJlbnQnLAogICAgICAgICAgICAgICAgInZpc2libGUiOiB0cnVlCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJtRGF0YSI6ICJhY3Rpb25zIiwKICAgICAgICAgICAgICAgICJtUmVuZGVyIjogZnVuY3Rpb24gKGRhdGEsIHR5cGUsIHJvdykgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBzaWduYWwuYWN0aW9uc191dGlscy5idWlsZF9hY3Rpb25fcmVuZGVyKHJvdykKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAnY2xhc3NOYW1lJzogJ2NvbC1taW4tNTAgdGV4dC1jZW50ZXInLAogICAgICAgICAgICAgICAgInZpc2libGUiOiB0cnVlCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJtRGF0YSI6ICJhcnRpY2xlSWQiLAogICAgICAgICAgICAgICAgJ2NsYXNzTmFtZSc6ICdjb2wtbWluLTEwMCcKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgIm1EYXRhIjogImFsZXJ0VGFncyIsCiAgICAgICAgICAgICAgICAibVJlbmRlciI6IGZ1bmN0aW9uIChkYXRhLCB0eXBlLCByb3cpIHsKICAgICAgICAgICAgICAgICAgICB2YXIgdGFnc0VsZW1lbnQgPSAnPGRpdiBjbGFzcz0idGFnLWNvbnRhaW5lciBibG9jay1lbGxpcHNpcyI+PGRpdiBjbGFzcz0idGFnLWxlbmd0aCI+JzsKICAgICAgICAgICAgICAgICAgICB2YXIgYWxsVGFnc0FycmF5ID0gW107CiAgICAgICAgICAgICAgICAgICAgaWYgKHJvdy5hbGVydFRhZ3MpIHsKICAgICAgICAgICAgICAgICAgICAgICAgJC5lYWNoKHJvdy5hbGVydFRhZ3MsIGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbGxUYWdzQXJyYXkucHVzaChlc2NhcGVIVE1MKHZhbHVlKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YWdzRWxlbWVudCArPSAnPHNwYW4gY2xhc3M9ImJhZGdlIGJhZGdlLWluZm8gZGV0YWlscy10YWdzIj4nICsgZXNjYXBlSFRNTCh2YWx1ZSkgKyAnPC9zcGFuPicKICAgICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIHRhZ3NFbGVtZW50ICs9ICc8YSB0YWJpbmRleD0iMCIgdGl0bGU9IkFkZC9FZGl0IHRhZ3MiIGNsYXNzPSJlZGl0QWxlcnRUYWdzIGJ0bi1lZGl0LXRhZyI+PGkgY2xhc3M9Im1kaSBtZGktcGVuY2lsLWJveCBmb250LTIwIGJsdWUtMSI+IDwvaT48L2E+JzsKICAgICAgICAgICAgICAgICAgICB0YWdzRWxlbWVudCArPSAnPGEgdGFiaW5kZXg9IjAiIHRpdGxlPSInICsgJC5pMThuLl8oJ2FwcExhYmVsLnZpZXdBbGwnKSArICciIGNsYXNzPSJpY28tZG90cyB2aWV3LWFsbCIgbW9yZS1kYXRhPSInK2VzY2FwZUhUTUwoYWxsVGFnc0FycmF5LmpvaW4oIiwgIikpKyciPjxpIGNsYXNzPSJtZGkgbWRpLWRvdHMtaG9yaXpvbnRhbCBmb250LTIwIGJsdWUtMSI+IDwvaT48L2E+JzsKICAgICAgICAgICAgICAgICAgICB0YWdzRWxlbWVudCArPSAnPC9kaXY+PC9kaXY+JzsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGFnc0VsZW1lbnQKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiY2xhc3NOYW1lIjogJ2NvbC1tYXgtMzAwIHBvcy1yZWwnLAogICAgICAgICAgICAgICAgIm9yZGVyYWJsZSI6IGZhbHNlLAogICAgICAgICAgICAgICAgInZpc2libGUiOiBzaWduYWwuZmllbGRNYW5hZ2VtZW50LnZpc2libGVDb2x1bW5zKCdhbGVydFRhZ3MnKQogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAibURhdGEiOiAiYWxlcnROYW1lIiwKICAgICAgICAgICAgICAgICdjbGFzc05hbWUnOiAnY29sLW1pbi0xNTAgY2VsbC1icmVhaycsCiAgICAgICAgICAgICAgICAidmlzaWJsZSI6IHNpZ25hbC5maWVsZE1hbmFnZW1lbnQudmlzaWJsZUNvbHVtbnMoJ2FsZXJ0TmFtZScpLAogICAgICAgICAgICAgICAgIm1SZW5kZXIiOiBmdW5jdGlvbiAoZGF0YSwgdHlwZSwgcm93KSB7CiAgICAgICAgICAgICAgICAgICAgdmFyIGNvbEVsZW1lbnQgPSAnPGRpdiBjbGFzcz0iY29sLWNvbnRhaW5lciI+PGRpdiBjbGFzcz0iY29sLWhlaWdodCI+JzsKICAgICAgICAgICAgICAgICAgICBjb2xFbGVtZW50ICs9IHJvdy5hbGVydE5hbWU7CiAgICAgICAgICAgICAgICAgICAgY29sRWxlbWVudCArPSAnPGEgdGFiaW5kZXg9IjAiIHRpdGxlPSInICsgJC5pMThuLl8oJ2FwcExhYmVsLnZpZXdBbGwnKSArICciIGNsYXNzPSJpY28tZG90cyB2aWV3LWFsbCIgbW9yZS1kYXRhPSInICsgcm93LmFsZXJ0TmFtZSArICciPjxpIGNsYXNzPSJtZGkgbWRpLWRvdHMtaG9yaXpvbnRhbCBmb250LTIwIGJsdWUtMSI+IDwvaT48L2E+JzsKICAgICAgICAgICAgICAgICAgICBjb2xFbGVtZW50ICs9ICc8L2Rpdj48L2Rpdj4nOwogICAgICAgICAgICAgICAgICAgIHJldHVybiBjb2xFbGVtZW50CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAibURhdGEiOiAidGl0bGUiLAogICAgICAgICAgICAgICAgImNsYXNzTmFtZSI6ICdjb2wtbWluLTEwMCBjb2wtbWF4LTMwMCcsCiAgICAgICAgICAgICAgICAidmlzaWJsZSI6IHNpZ25hbC5maWVsZE1hbmFnZW1lbnQudmlzaWJsZUNvbHVtbnMoJ3RpdGxlJyksCiAgICAgICAgICAgICAgICAibVJlbmRlciI6IGZ1bmN0aW9uIChkYXRhLCB0eXBlLCByb3cpIHsKICAgICAgICAgICAgICAgICAgICB2YXIgY29sRWxlbWVudCA9ICc8ZGl2IGNsYXNzPSJjb2wtY29udGFpbmVyIj48ZGl2IGNsYXNzPSJjb2wtaGVpZ2h0Ij4nOwogICAgICAgICAgICAgICAgICAgIGNvbEVsZW1lbnQrPWdlbkFydGljbGVMaW5rKHJvdy5hcnRpY2xlSWQsIHJvdy50aXRsZSwgcm93LmlkKTsKICAgICAgICAgICAgICAgICAgICBjb2xFbGVtZW50ICs9ICc8YSB0YWJpbmRleD0iMCIgdGl0bGU9IicgKyAkLmkxOG4uXygnYXBwTGFiZWwudmlld0FsbCcpICsgJyIgY2xhc3M9Imljby1kb3RzIHZpZXctYWxsIiBtb3JlLWRhdGE9IicrZXNjYXBlSFRNTChyb3cudGl0bGUpKyciPjxpIGNsYXNzPSJtZGkgbWRpLWRvdHMtaG9yaXpvbnRhbCBmb250LTIwIGJsdWUtMSI+IDwvaT48L2E+JzsKICAgICAgICAgICAgICAgICAgICBjb2xFbGVtZW50ICs9ICc8L2Rpdj48L2Rpdj4nOwogICAgICAgICAgICAgICAgICAgIHJldHVybiBjb2xFbGVtZW50CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJtRGF0YSI6ICJhdXRob3JzIiwKICAgICAgICAgICAgICAgICJjbGFzc05hbWUiOiAnY29sLW1pbi0xMDAgY29sLW1heC0zMDAnLAogICAgICAgICAgICAgICAgInZpc2libGUiOiBzaWduYWwuZmllbGRNYW5hZ2VtZW50LnZpc2libGVDb2x1bW5zKCdhdXRob3JzJyksCiAgICAgICAgICAgICAgICAibVJlbmRlciI6IGZ1bmN0aW9uIChkYXRhLCB0eXBlLCByb3cpIHsKICAgICAgICAgICAgICAgICAgICB2YXIgY29sRWxlbWVudCA9ICc8ZGl2IGNsYXNzPSJjb2wtY29udGFpbmVyIj48ZGl2IGNsYXNzPSJjb2wtaGVpZ2h0Ij4nOwogICAgICAgICAgICAgICAgICAgIGNvbEVsZW1lbnQrPXJvdy5hdXRob3JzOwogICAgICAgICAgICAgICAgICAgIGNvbEVsZW1lbnQgKz0gJzxhIHRhYmluZGV4PSIwIiB0aXRsZT0iJyArICQuaTE4bi5fKCdhcHBMYWJlbC52aWV3QWxsJykgKyAnIiBjbGFzcz0iaWNvLWRvdHMgdmlldy1hbGwiIG1vcmUtZGF0YT0iJytyb3cuYXV0aG9ycysnIj48aSBjbGFzcz0ibWRpIG1kaS1kb3RzLWhvcml6b250YWwgZm9udC0yMCBibHVlLTEiPiA8L2k+PC9hPic7CiAgICAgICAgICAgICAgICAgICAgY29sRWxlbWVudCArPSAnPC9kaXY+PC9kaXY+JzsKICAgICAgICAgICAgICAgIHJldHVybiBjb2xFbGVtZW50CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJtRGF0YSI6ICJwdWJsaWNhdGlvbkRhdGUiLAogICAgICAgICAgICAgICAgImNsYXNzTmFtZSI6ICdjb2wtbWluLTEwMCcsCiAgICAgICAgICAgICAgICAidmlzaWJsZSI6IHNpZ25hbC5maWVsZE1hbmFnZW1lbnQudmlzaWJsZUNvbHVtbnMoJ3B1YmxpY2F0aW9uRGF0ZScpCgogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAibURhdGEiOiAnc2lnbmFsJywKICAgICAgICAgICAgICAgICJtUmVuZGVyIjogZnVuY3Rpb24gKGRhdGEsIHR5cGUsIHJvdykgewogICAgICAgICAgICAgICAgICAgIHZhciBzaWduYWxBbmRUb3BpY3MgPSAnJzsKICAgICAgICAgICAgICAgICAgICAkLmVhY2gocm93LnNpZ25hbCwgZnVuY3Rpb24oaSwgb2JqKXsKICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHVybCA9IHNpZ25hbERldGFpbFVybCArICc/aWQ9JyArIG9ialsnc2lnbmFsSWQnXTsKICAgICAgICAgICAgICAgICAgICAgICAgc2lnbmFsQW5kVG9waWNzID0gc2lnbmFsQW5kVG9waWNzICsgJzxzcGFuIGNsYXNzPSJjbGljayI+PGEgIGNsYXNzPSJjZWxsLWJyZWFrIiBocmVmPSInICsgdXJsICsgJyI+JyArIGVzY2FwZUhUTUwob2JqWyduYW1lJ10pICsgJzwvYT48L3NwYW4+Jm5ic3A7JwogICAgICAgICAgICAgICAgICAgICAgICBzaWduYWxBbmRUb3BpY3MgPSBzaWduYWxBbmRUb3BpY3MgKyAiLCIKICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICBpZihzaWduYWxBbmRUb3BpY3MubGVuZ3RoID4gMSkKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICc8ZGl2PicgKyBzaWduYWxBbmRUb3BpY3Muc3Vic3RyaW5nKDAsIHNpZ25hbEFuZFRvcGljcy5sZW5ndGggLSAxKSArICc8L2Rpdj4nOwogICAgICAgICAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICctJzsKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAnY2xhc3NOYW1lJzogJ2NvbC1taW4tMTUwIGNvbC1tYXgtMjAwIHNpZ25hbEluZm9ybWF0aW9uJywKICAgICAgICAgICAgICAgICJvcmRlcmFibGUiOiBmYWxzZSwKICAgICAgICAgICAgICAgICJ2aXNpYmxlIjogc2lnbmFsLmZpZWxkTWFuYWdlbWVudC52aXNpYmxlQ29sdW1ucygnc2lnbmFsJykKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgIm1EYXRhIjogImN1cnJlbnREaXNwb3NpdGlvbiIsCiAgICAgICAgICAgICAgICAibVJlbmRlciI6IGZ1bmN0aW9uIChkYXRhLCB0eXBlLCByb3cpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gc2lnbmFsLnV0aWxzLnJlbmRlcignZGlzcG9zaXRpb24nLCB7CiAgICAgICAgICAgICAgICAgICAgICAgIGFsbG93ZWREaXNwb3NpdGlvbjogZGlzcG9zaXRpb25JbmNvbWluZ091dGdvaW5nTWFwW3Jvdy5kaXNwb3NpdGlvbl0sCiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnREaXNwb3NpdGlvbjogcm93LmRpc3Bvc2l0aW9uLAogICAgICAgICAgICAgICAgICAgICAgICBmb3JjZUp1c3RpZmljYXRpb246IGZvcmNlSnVzdGlmaWNhdGlvbiwKICAgICAgICAgICAgICAgICAgICAgICAgaXNSZXZpZXdlZDpyb3cuaXNSZXZpZXdlZCwKICAgICAgICAgICAgICAgICAgICAgICAgaXNWYWxpZGF0aW9uU3RhdGVBY2hpZXZlZDogcm93LmlzVmFsaWRhdGlvblN0YXRlQWNoaWV2ZWQKICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAidmlzaWJsZSI6IHNpZ25hbC5maWVsZE1hbmFnZW1lbnQudmlzaWJsZUNvbHVtbnMoJ2N1cnJlbnREaXNwb3NpdGlvbicpLAogICAgICAgICAgICAgICAgImNsYXNzIjogJ2NvbC1tYXgtMjUwIGRpc3Bvc2l0aW9uQWN0aW9uJwogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAibURhdGEiOiAiYXNzaWduZWRUbyIsCiAgICAgICAgICAgICAgICAibVJlbmRlciI6IGZ1bmN0aW9uIChkYXRhLCB0eXBlLCByb3cpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gc2lnbmFsLmxpc3RfdXRpbHMuYXNzaWduZWRfdG9fY29tcChyb3cuaWQsIHJvdy5hc3NpZ25lZFRvKQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJjbGFzc05hbWUiOiAnY29sLW1pbi0xMDAgY29sLW1heC0xNTAgYXNzaWduZWRUbycsCiAgICAgICAgICAgICAgICAidmlzaWJsZSI6IHNpZ25hbC5maWVsZE1hbmFnZW1lbnQudmlzaWJsZUNvbHVtbnMoJ2Fzc2lnbmVkVG8nKQogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAibURhdGEiOiAicHJvZHVjdE5hbWUiLAogICAgICAgICAgICAgICAgImNsYXNzTmFtZSI6ICdjb2wtbWluLTE1MCBjb2wtbWF4LTIwMCcsCiAgICAgICAgICAgICAgICAidmlzaWJsZSI6IHNpZ25hbC5maWVsZE1hbmFnZW1lbnQudmlzaWJsZUNvbHVtbnMoJ3Byb2R1Y3ROYW1lJykKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgIm1EYXRhIjogImV2ZW50TmFtZSIsCiAgICAgICAgICAgICAgICAiY2xhc3NOYW1lIjogJ2NvbC1taW4tMTUwIGNvbC1tYXgtMjAwJywKICAgICAgICAgICAgICAgICJ2aXNpYmxlIjogc2lnbmFsLmZpZWxkTWFuYWdlbWVudC52aXNpYmxlQ29sdW1ucygnZXZlbnROYW1lJykKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgIm1EYXRhIjogImRpc3Bvc2l0aW9uIiwKICAgICAgICAgICAgICAgICJtUmVuZGVyIjogZnVuY3Rpb24gKGRhdGEsIHR5cGUsIHJvdykgewogICAgICAgICAgICAgICAgICAgIHJldHVybiByb3cuZGlzcG9zaXRpb247CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgImNsYXNzTmFtZSI6ICdjb2wtbWF4LTI1MCBjdXJyZW50RGlzcG9zaXRpb24nLAogICAgICAgICAgICAgICAgInZpc2libGUiOiBzaWduYWwuZmllbGRNYW5hZ2VtZW50LnZpc2libGVDb2x1bW5zKCdkaXNwb3NpdGlvbicpCiAgICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgICJyZXNwb25zaXZlIjogdHJ1ZSwKICAgICAgICAiZG9tIjogJ2xydGlwJywKICAgICAgICBzY3JvbGxYOiB0cnVlLAogICAgICAgIHNjcm9sbFk6ICI2NXZoIiwKICAgICAgICAicm93Q2FsbGJhY2siOiBmdW5jdGlvbiAocm93LCBkYXRhLCBpbmRleCkgewogICAgICAgICAgICAvL0JpbmQgQXNzaWduZWRUbyBTZWxlY3QgQm94CiAgICAgICAgICAgIHNpZ25hbC51c2VyX2dyb3VwX3V0aWxzLmJpbmRfYXNzaWduVG9fdG9fZ3JpZF9yb3coJChyb3cpLCBzZWFyY2hVc2VyR3JvdXBMaXN0VXJsLCB7CiAgICAgICAgICAgICAgICBuYW1lOiBkYXRhLmFzc2lnbmVkVG8uZnVsbE5hbWUsCiAgICAgICAgICAgICAgICBpZDogZGF0YS5hc3NpZ25lZFRvLmlkCiAgICAgICAgICAgIH0pOwogICAgICAgIH0sCiAgICAgICAgY29sdW1uRGVmczogW3sKICAgICAgICAgICAgInRhcmdldHMiOiAnX2FsbCcsCiAgICAgICAgICAgICJyZW5kZXIiOiAkLmZuLmRhdGFUYWJsZS5yZW5kZXIudGV4dCgpCiAgICAgICAgfV0KICAgIH0pOwoKICAgIHZhciBpbml0X2ZpbHRlciA9IGZ1bmN0aW9uIChkYXRhX3RhYmxlKSB7CiAgICAgICAgeWFkY2YuaW5pdChkYXRhX3RhYmxlLCBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGNvbHVtbl9udW1iZXI6IDQsCiAgICAgICAgICAgICAgICBmaWx0ZXJfdHlwZTogInRleHQiLAogICAgICAgICAgICAgICAgZmlsdGVyX3Jlc2V0X2J1dHRvbl90ZXh0OiBmYWxzZSwKICAgICAgICAgICAgICAgIGZpbHRlcl9kZWxheTogNjAwLAogICAgICAgICAgICAgICAgZmlsdGVyX2RlZmF1bHRfbGFiZWw6ICcnCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGNvbHVtbl9udW1iZXI6IDUsCiAgICAgICAgICAgICAgICBmaWx0ZXJfdHlwZTogInRleHQiLAogICAgICAgICAgICAgICAgc3R5bGVfY2xhc3M6ICJoaWRkZW4iLAogICAgICAgICAgICAgICAgZmlsdGVyX3Jlc2V0X2J1dHRvbl90ZXh0OiBmYWxzZQogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBjb2x1bW5fbnVtYmVyOiA2LAogICAgICAgICAgICAgICAgZmlsdGVyX3R5cGU6ICJ0ZXh0IiwKICAgICAgICAgICAgICAgIGZpbHRlcl9yZXNldF9idXR0b25fdGV4dDogZmFsc2UsCiAgICAgICAgICAgICAgICBmaWx0ZXJfZGVsYXk6IDYwMCwKICAgICAgICAgICAgICAgIGZpbHRlcl9kZWZhdWx0X2xhYmVsOiAnJwogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBjb2x1bW5fbnVtYmVyOiA3LAogICAgICAgICAgICAgICAgZmlsdGVyX3R5cGU6ICJ0ZXh0IiwKICAgICAgICAgICAgICAgIGZpbHRlcl9yZXNldF9idXR0b25fdGV4dDogZmFsc2UsCiAgICAgICAgICAgICAgICBmaWx0ZXJfZGVsYXk6IDYwMCwKICAgICAgICAgICAgICAgIGZpbHRlcl9kZWZhdWx0X2xhYmVsOiAnJwogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBjb2x1bW5fbnVtYmVyOiA4LAogICAgICAgICAgICAgICAgZmlsdGVyX3R5cGU6ICJ0ZXh0IiwKICAgICAgICAgICAgICAgIGZpbHRlcl9yZXNldF9idXR0b25fdGV4dDogZmFsc2UsCiAgICAgICAgICAgICAgICBmaWx0ZXJfZGVsYXk6IDYwMCwKICAgICAgICAgICAgICAgIGZpbHRlcl9kZWZhdWx0X2xhYmVsOiAnJwogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBjb2x1bW5fbnVtYmVyOiA5LAogICAgICAgICAgICAgICAgZmlsdGVyX3R5cGU6ICJ0ZXh0IiwKICAgICAgICAgICAgICAgIGZpbHRlcl9yZXNldF9idXR0b25fdGV4dDogZmFsc2UsCiAgICAgICAgICAgICAgICBmaWx0ZXJfZGVsYXk6IDYwMCwKICAgICAgICAgICAgICAgIGZpbHRlcl9kZWZhdWx0X2xhYmVsOiAnJwogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBjb2x1bW5fbnVtYmVyOiAxMCwKICAgICAgICAgICAgICAgIGZpbHRlcl90eXBlOiAidGV4dCIsCiAgICAgICAgICAgICAgICBmaWx0ZXJfcmVzZXRfYnV0dG9uX3RleHQ6IGZhbHNlLAogICAgICAgICAgICAgICAgZmlsdGVyX2RlbGF5OiA2MDAsCiAgICAgICAgICAgICAgICBmaWx0ZXJfZGVmYXVsdF9sYWJlbDogJycKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgY29sdW1uX251bWJlcjogMTMsCiAgICAgICAgICAgICAgICBmaWx0ZXJfdHlwZTogInRleHQiLAogICAgICAgICAgICAgICAgZmlsdGVyX3Jlc2V0X2J1dHRvbl90ZXh0OiBmYWxzZSwKICAgICAgICAgICAgICAgIGZpbHRlcl9kZWxheTogNjAwLAogICAgICAgICAgICAgICAgZmlsdGVyX2RlZmF1bHRfbGFiZWw6ICcnCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGNvbHVtbl9udW1iZXI6IDE0LAogICAgICAgICAgICAgICAgZmlsdGVyX3R5cGU6ICJ0ZXh0IiwKICAgICAgICAgICAgICAgIGZpbHRlcl9yZXNldF9idXR0b25fdGV4dDogZmFsc2UsCiAgICAgICAgICAgICAgICBmaWx0ZXJfZGVsYXk6IDYwMCwKICAgICAgICAgICAgICAgIGZpbHRlcl9kZWZhdWx0X2xhYmVsOiAnJwogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBjb2x1bW5fbnVtYmVyOiAxNSwKICAgICAgICAgICAgICAgIGZpbHRlcl90eXBlOiAidGV4dCIsCiAgICAgICAgICAgICAgICBmaWx0ZXJfcmVzZXRfYnV0dG9uX3RleHQ6IGZhbHNlLAogICAgICAgICAgICAgICAgZmlsdGVyX2RlbGF5OiA2MDAsCiAgICAgICAgICAgICAgICBmaWx0ZXJfZGVmYXVsdF9sYWJlbDogJycKICAgICAgICAgICAgfQogICAgICAgIF0pOwogICAgICAgICQoJy55YWRjZi1maWx0ZXItd3JhcHBlcicpLmhpZGUoKTsKICAgICAgICBzaWduYWwuZmllbGRNYW5hZ2VtZW50LmluaXQoJCgnI2FsZXJ0c0RldGFpbHNUYWJsZScpLkRhdGFUYWJsZSgpLCAnI2FsZXJ0c0RldGFpbHNUYWJsZScsIDQpOwogICAgICAgICQoIiN0b2dnbGUtY29sdW1uLWZpbHRlcnMiKS5jbGljayhmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHZhciBlbGUgPSAkKCcueWFkY2YtZmlsdGVyLXdyYXBwZXInKTsKICAgICAgICAgICAgdmFyIGlucHV0RWxlID0gJCgnLnlhZGNmLWZpbHRlcicpOwogICAgICAgICAgICBpZiAoZWxlLmlzKCc6dmlzaWJsZScpKSB7CiAgICAgICAgICAgICAgICBlbGUuaGlkZSgpOwogICAgICAgICAgICAgICAgaW5wdXRFbGUudmFsKCcnKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGVsZS5zaG93KCk7CiAgICAgICAgICAgICAgICBpbnB1dEVsZS5maXJzdCgpLmZvY3VzKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZGF0YV90YWJsZS5jb2x1bW5zLmFkanVzdCgpLmZpeGVkQ29sdW1ucygpLnJlbGF5b3V0KCkKICAgICAgICB9KTsKICAgIH07CiAgICBzaWduYWwudXNlcl9ncm91cF91dGlscy5iaW5kX2Fzc2lnblRvX3NlbGVjdGlvbihhc3NpZ25Ub0dyb3VwVXJsLCB0YWJsZSk7CiAgICBpbml0X2ZpbHRlcih0YWJsZSk7CgogICAgJChkb2N1bWVudCkub24oJ2NsaWNrJywgJy5hcnRpY2xlVGl0bGUnLCBmdW5jdGlvbiAoZSkgewogICAgICAgIGUucHJldmVudERlZmF1bHQoKTsKICAgICAgICB2YXIgbGl0ZXJhdHVyZUlkID0gJCh0aGlzKS5kYXRhKCJsaXRpZCIpOwogICAgICAgIHZhciBhcnRpY2xlSWQgPSAkKHRoaXMpLmRhdGEoImFydGljbGVpZCIpOwogICAgICAgICQuYWpheCh7CiAgICAgICAgICAgIHVybDogdXBkYXRlQXV0b1JvdXRlRGlzcG9zaXRpb25VcmwsCiAgICAgICAgICAgIGRhdGE6IHsKICAgICAgICAgICAgICAgICdsaXRlcmF0dXJlQWxlcnQuaWQnOiBsaXRlcmF0dXJlSWQKICAgICAgICAgICAgfSwKICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlc3VsdCkgewogICAgICAgICAgICAgICAgc2lnbmFsLnV0aWxzLnBvc3RVcmwocHViTWVkVXJsICsgYXJ0aWNsZUlkLCB7CiAgICAgICAgICAgICAgICAgICAgYXJ0aWNsZUlkOiBhcnRpY2xlSWQKICAgICAgICAgICAgICAgIH0sIHRydWUpOwogICAgICAgICAgICAgICAgaWYgKHJlc3VsdC5zdGF0dXMpIHsKICAgICAgICAgICAgICAgICAgICAkKCcjYWxlcnRzRGV0YWlsc1RhYmxlJykuRGF0YVRhYmxlKCkuYWpheC5yZWxvYWQoKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoIlNvbWUgZXJyb3Igb2NjdXJlZCB3aGlsZSB1cGRhdGluZyBBdXRvUm91dGUgRGlzcG9zaXRpb24iKTsKICAgICAgICAgICAgfQogICAgICAgIH0pOwogICAgfSk7CgogICAgJCgnLmV4cG9ydF9pY29uX3NpZ25hbCBhJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBmb3JtYXQgPSAkKHRoaXMpLmRhdGEoJ2Zvcm1hdCcpOwogICAgICAgIHZhciB0YWJsZSA9ICQoJyNhbGVydHNEZXRhaWxzVGFibGUnKS5EYXRhVGFibGUoKTsKICAgICAgICB2YXIgaWRMaXN0ID0gW107CiAgICAgICAgJC5lYWNoKHRhYmxlLnJvd3Moe2ZpbHRlcjogJ2FwcGxpZWQnfSkuZGF0YSgpLCBmdW5jdGlvbiAoaWR4LCB2YWwpIHsKICAgICAgICAgICAgaWRMaXN0LnB1c2godmFsLnNpZ25hbElkKQogICAgICAgIH0pOwogICAgICAgIHZhciBleHBvcnRVcmwgPSBWQUxJREFURUQuZXhwb3J0UmVwb3J0VXJsICsgIj9vdXRwdXRGb3JtYXQ9IiArIGZvcm1hdCArICImaWRMaXN0PSIgKyBpZExpc3Q7CiAgICAgICAgJCh0aGlzKS5hdHRyKCdocmVmJywgZXhwb3J0VXJsKTsKICAgIH0pOwoKICAgIC8vIGFkZGVkIGJ5IEFtcmVuZHJhIEt1bWFyLCBidWcvUFZTLTQ3MjAgc3RhcnQKICAgICQoJ3VsI2V4cG9ydFR5cGVzIGxpIGEnKS5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgdmFyIGZpbHRlcl9wYXJhbXMgPSAiIjsKICAgICAgICB2YXIgJHNlbGVjdGVkUm93cyA9ICQoJy5jb3B5LXNlbGVjdDpjaGVja2VkJyk7CiAgICAgICAgdmFyIGlkTGlzdCA9IFtdOwogICAgICAgIGlmICgkc2VsZWN0ZWRSb3dzLmxlbmd0aCkgewogICAgICAgICAgICAkLmVhY2goJHNlbGVjdGVkUm93cywgZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgaWRMaXN0LnB1c2godGFibGUucm93KCQodGhpcykuY2xvc2VzdCgndHInKSkuZGF0YSgpLmlkKTsKICAgICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgJC5lYWNoKHRhYmxlLnJvd3Moe2ZpbHRlcjogJ2FwcGxpZWQnfSkuZGF0YSgpLCBmdW5jdGlvbiAoaWR4LCB2YWwpIHsKICAgICAgICAgICAgICAgIGlkTGlzdC5wdXNoKHZhbC5pZCkKICAgICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICAgICQoJyNhbGVydHNEZXRhaWxzVGFibGUnKS5EYXRhVGFibGUoKS5jb2x1bW5zKCkuZXZlcnkoIGZ1bmN0aW9uICgpCiAgICAgICAgewogICAgICAgICAgICBpZih0aGlzLnNlYXJjaCgpICE9PSAiIikgewogICAgICAgICAgICAgICAgZmlsdGVyX3BhcmFtcyA9IGZpbHRlcl9wYXJhbXMgKyAiJiIrdGhpcy5kYXRhU3JjKCkgKyAiPSIgKyB0aGlzLnNlYXJjaCgpOwogICAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgICAgdmFyIHVybCA9ICQodGhpcykuYXR0cignaHJlZicpLnNwbGl0KCcmJylbMF0gKyAiJmlkTGlzdD0iICsgaWRMaXN0ICsgIiZpc0Fic3RyYWN0RW5hYmxlZD0iICsgJCgnI2RldGFpbGVkLXZpZXctY2hlY2tib3gnKS5wcm9wKCJjaGVja2VkIik7CiAgICAgICAgJCh0aGlzKS5hdHRyKCdocmVmJywgdXJsK2ZpbHRlcl9wYXJhbXMpOwogICAgfSk7CiAgICAvLyBhZGRlZCBieSBBbXJlbmRyYSBLdW1hciwgYnVnL1BWUy00NzIwIGVuZAp9KTsKCnZhciBmb3JtYXQgPSBmdW5jdGlvbiAoZCkgewogICAgdmFyIHJlc3VsdGVkT2JqID0gewogICAgICAgIGFydGljbGVBYnN0cmFjdDogZC5hcnRpY2xlQWJzdHJhY3QKICAgIH07CiAgICBodG1sID0gc2lnbmFsLnV0aWxzLnJlbmRlcigibGl0ZXJhdHVyZV9kZXRhaWxzX2NoaWxkX3ZpZXciLCByZXN1bHRlZE9iaik7CiAgICByZXR1cm4gaHRtbDsKfTsKCmZ1bmN0aW9uIGJpbmRBc3NpZ25Ub1NlbGVjdGlvbihzZWFyY2hVc2VyR3JvdXBMaXN0VXJsLCBhc3NpZ25Ub0dyb3VwVXJsLCB0YWJsZSkgewogICAgJCgiLmFzc2lnbmVkVG9TZWxlY3QiKS5lYWNoKGZ1bmN0aW9uIChpKSB7CiAgICAgICAgc2lnbmFsLnVzZXJfZ3JvdXBfdXRpbHMuYmluZF9hc3NpZ25fdG8oJCh0aGlzKSwgc2VhcmNoVXNlckdyb3VwTGlzdFVybCwgYXNzaWduZWRUb0RhdGFbaV0pOwogICAgfSk7CiAgICBzaWduYWwudXNlcl9ncm91cF91dGlscy5iaW5kX2Fzc2lnblRvX3NlbGVjdGlvbihhc3NpZ25Ub0dyb3VwVXJsLCB0YWJsZSk7Cn0KCmZ1bmN0aW9uIGJpbmRBYnN0cmFjdFZpZXcoKSB7CiAgICB2YXIgZGV0YWlsZWRWaWV3Q2hlY2tib3ggPSAkKCcjZGV0YWlsZWQtdmlldy1jaGVja2JveCcpOwogICAgZGV0YWlsZWRWaWV3Q2hlY2tib3gub24oImNsaWNrIiwgZnVuY3Rpb24gKCkgewogICAgICAgIGlmICgkKHRoaXMpLnByb3AoImNoZWNrZWQiKSA9PSB0cnVlKSB7CiAgICAgICAgICAgIHNob3dBYnN0cmFjdERldGFpbHNWaWV3KCkKICAgICAgICAgICAgYWRkQWJzdHJhY3QoZGV0YWlsZWRWaWV3Q2hlY2tib3gpCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgaGlkZUFic3RyYWN0RGV0YWlsc1ZpZXcoKQogICAgICAgICAgICByZW1vdmVBYnN0cmFjdCgpCiAgICAgICAgfQogICAgfSk7Cn0KCmZ1bmN0aW9uIHNob3dBYnN0cmFjdERldGFpbHNWaWV3KCkgewogICAgdGFibGUucm93cygpLmV2ZXJ5KGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgcm93ID0gdGhpczsKICAgICAgICByb3cuY2hpbGQoZm9ybWF0KHJvdy5kYXRhKCkpLHJvdy5ub2RlKCkuY2xhc3NOYW1lKS5zaG93KCk7CiAgICB9KTsKfQoKZnVuY3Rpb24gaGlkZUFic3RyYWN0RGV0YWlsc1ZpZXcoKSB7CiAgICB0YWJsZS5yb3dzKCkuZXZlcnkoZnVuY3Rpb24gKCkgewogICAgICAgIHRoaXMuY2hpbGQoKS5oaWRlKCk7CiAgICB9KTsKfQoKJChkb2N1bWVudCkub24oJ2NsaWNrJywgJ2lucHV0I3NlbGVjdC1hbGwnLCBmdW5jdGlvbiAoKSB7CiAgICAkKCIuY29weS1zZWxlY3QiKS5wcm9wKCdjaGVja2VkJywgdGhpcy5jaGVja2VkKTsKfSk7CgpmdW5jdGlvbiBhZGRBYnN0cmFjdChkZXRhaWxlZFZpZXdDaGVja2JveCl7CiAgICAkKCcjZXhwb3J0VHlwZXMnKS5maW5kKCdhJykuZWFjaChmdW5jdGlvbigpIHsKICAgICAgICAkKHRoaXMpLmF0dHIoJ2hyZWYnLCAkKHRoaXMpLmF0dHIoJ2hyZWYnKSArICImaXNBYnN0cmFjdEVuYWJsZWQ9IiArIGRldGFpbGVkVmlld0NoZWNrYm94LnByb3AoImNoZWNrZWQiKSk7CiAgICB9KTsKfQoKZnVuY3Rpb24gcmVtb3ZlQWJzdHJhY3QoKXsKICAgICQoJyNleHBvcnRUeXBlcycpLmZpbmQoJ2EnKS5lYWNoKGZ1bmN0aW9uKCkgewogICAgICAgICQodGhpcykuYXR0cignaHJlZicsJCh0aGlzKS5hdHRyKCdocmVmJykuc3BsaXQoIiZpc0Fic3RyYWN0RW5hYmxlZCIpWzBdKTsKICAgIH0pOwp9Cgo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <TcpPackets>
          <PacketInfo time="1461620968" offset="0" length="4096" />
          <PacketInfo time="1461620968" offset="4096" length="16384" />
          <PacketInfo time="1461620968" offset="20480" length="9212" />
        </TcpPackets>
      </HTTPResponse>
    </HTTPTask>
  </HTTPTask>
</HTTPSnapshot>